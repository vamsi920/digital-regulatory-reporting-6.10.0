namespace drr.regulation.fca.ukemir.refit.trade
version "${project.version}"

import cdm.base.*
import cdm.base.staticdata.asset.common.*

import drr.enrichment.eic.*
import drr.enrichment.lei.*
import drr.regulation.common.*
import drr.regulation.common.trade.* as common
import drr.regulation.common.util.*
import drr.regulation.fca.*
import drr.regulation.fca.ukemir.*
import drr.regulation.fca.ukemir.refit.*
import drr.standards.iosco.cde.base.* as cde
import drr.standards.iso.*

type FCAUKEMIRTransactionReport extends common.EMIRTransactionReport:
    [rootType]
    override reportingTimestamp zonedDateTime (1..1)
        [label "1.1 Reporting Timestamp"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "1" field "Reporting timestamp"
            provision "Date and time of the submission of the report to the trade repository."]
    override reportSubmittingEntityID string (1..1)
        [label "1.2 Report Submitting entity ID"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "2" field "Report Submitting entity ID"
            provision "In the case where the entity responsible for reporting has delegated the submission of the report to a third party or to the other counterparty, that entity has to be identified in this field by a unique code. Otherwise the entity responsible for reporting should be identified in this field."]
    override entityResponsibleForReporting LEIIdentifier (0..1)
        [label "1.3 Entity responsible for reporting"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "3" field "Entity responsible for reporting"
            provision "Where a financial counterparty is solely responsible, and legally liable, for reporting on behalf of both counterparties in accordance with Article 9(1a) of Regulation (EU) No 648/2012 and the non-financial counterparty does not decide to report itself the details of its OTC derivative contracts with the financial counterparty, the unique code identifying that financial counterparty. Where a management company is responsible, and legally liable, for reporting on behalf of an Undertaking for Collective Investment in Transferable Securities (UCITS) in accordance with Article 9(1b) of that Regulation, the unique code identifying that management company. Where an Alternative Investment Fund Manager (AIFM) is responsible, and legally liable, for reporting on behalf of an Alternative Investment Fund (AIF) in accordance with Article 9(1c) of that Regulation, the unique code identifying that AIFM. Where the trustees or managers of an occupational pension scheme are responsible, and legally liable, for reporting on its behalf in accordance with Article 9(1d) of that Regulation, the unique code identifying those trustees or managers. This field is applicable only to the OTC derivatives."]
    override counterparty1 LEIIdentifier (1..1)
        [label "1.4 Counterparty 1 (reporting counterparty)"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "4" field "Counterparty 1 (reporting counterparty)"
            provision "Identifier of the counterparty to a derivative transaction who is fulfilling its reporting obligation via the report in question. In the case of an allocated derivative transaction executed by a fund manager on behalf of a fund, the fund and not the fund manager is reported as the counterparty."]
    override natureOfCounterparty1 common.party.NatureOfCounterpartyEnum (1..1)
        [label "1.5 Nature of the Counterparty 1"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "5" field "Nature of the Counterparty 1"
            provision "Indicate if the counterparty 1 is a CCP, a financial, non-financial counterparty or other type of counterparty as defined in points 1, 8 and 9 of Article 2 of Regulation (EU) No 648/2012 or an entity as referred to in accordance with point 5 of Article 1."]
        [ruleReference NatureOfCounterparty1]
    override corporateSectorOfTheCounterparty1 Max4Text (0..*)
        [label "1.6 Corporate sector of the counterparty 1"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "6" field "Corporate sector of the counterparty 1"
            provision "Nature of the counterparty 1s company activities. If the counterparty 1 is a financial counterparty, this field shall contain all necessary codes included in the Taxonomy for Financial Counterparties in field 6 of Table 1 of the Annex to EMIR Technical Standards on the Standards, Formats, Frequency and Methods and Arrangements for Reporting 2023 and applying to that counterparty. If the counterparty 1 is a non-Financial Counterparty, this field shall contain all necessary codes included in the Taxonomy for Non-Financial Counterparties in field 6 of Table 1 of the Annex to EMIR Technical Standards on the Standards, Formats, Frequency and Methods and Arrangements for Reporting 2023 and applying to that counterparty. Where more than one activity is reported, the codes shall be populated in order of the relative importance of the corresponding activities."]
        [ruleReference CorporateSectorOfTheCounterparty1]
    override clearingThresholdOfCounterparty1 boolean (0..1)
        [label "1.7 Clearing Threshold of Counterparty 1"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "7" field "Clearing Threshold of Counterparty 1"
            provision "Information whether counterparty 1 is above the clearing threshold referred to in Article 4a or 10 of Regulation (EU) No 648/2012 at the date when the transaction was concluded."]
        [ruleReference ClearingThresholdOfCounterparty1]
    override counterparty2IdentifierType boolean (1..1)
        [label "1.8 Counterparty 2 Identifier Type"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "8" field "Counterparty 2 Identifier Type"
            provision "Indicator of whether LEI was used to identify counterparty 2."]
    override counterparty2 Min20Max72AlphaNumericText (0..1)
        [label "1.9 Counterparty 2"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "9" field "Counterparty 2"
            provision "Identifier of the second counterparty to a derivative transaction. In the case of an allocated derivative transaction executed by a fund manager on behalf of a fund, the fund and not the fund manager is reported as the counterparty."]
    override countryOfTheCounterparty2 ISOCountryCodeEnum (0..1)
        [label "1.10 Country of the counterparty 2"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "10" field "Country of the counterparty 2"
            provision "In case counterparty 2 is a natural person, the code of country of residence of that person."]
        [ruleReference CountryOfTheCounterParty2]
    override natureOfCounterparty2 common.party.NatureOfCounterpartyEnum (0..1)
        [label "1.11 Nature of the Counterparty 2"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "11" field "Nature of the Counterparty 2"
            provision "Indicate if counterparty 2 is a CCP, a financial, non-financial counterparty or other type of counterparty in accordance with point 5 of Article 1 or points 1, 8 and 9 of Article 2 of Regulation (EU) No 648/2012."]
        [ruleReference NatureOfTheCounterparty2]
    override corporateSectorOfTheCounterparty2 Max4Text (0..*)
        [label "1.12 Corporate sector of the counterparty 2"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "12" field "Corporate sector of the counterparty 2"
            provision "Nature of counterparty 2s company activities. If counterparty 2 is a financial counterparty, this field shall contain all necessary codes included in the Taxonomy for Financial Counterparties in field 6 of Table 1 of the Annex to EMIR Technical Standards on the Standards, Formats, Frequency and Methods and Arrangements for Reporting 2023 and applying to that counterparty. If counterparty 2 is a non-financial counterparty, this field shall contain all necessary codes included in the Taxonomy for Non-Financial Counterparties in field 6 of Table 1 of the Annex to EMIR Technical Standards on the Standards, Formats, Frequency and Methods and Arrangements for Reporting 2023 and applying to that counterparty. Where more than one activity is reported, the codes shall be populated in order of the relative importance of the corresponding activities."]
        [ruleReference CorporateSectorOfTheCounterparty2]
    override clearingMember LEIIdentifier (0..1)
        [label "1.16 Clearing member"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "16" field "Clearing member"
            provision "Identifier of the clearing member through which a derivative transaction was cleared at a CCP. This data element is applicable to cleared transactions."]
        [ruleReference ClearingMember]
    override clearingThresholdOfCounterparty2 boolean (0..1)
        [label "1.13 Clearing Threshold of Counterparty 2"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "13" field "Clearing Threshold of Counterparty 2"
            provision "Information whether counterparty 2 is above the clearing threshold referred to in Article 4a or 10 of Regulation (EU) No 648/2012 at the date when the transaction was concluded."]
        [ruleReference ClearingThresholdOfCounterparty2]
    override reportingObligationOfTheCounterparty2 boolean (1..1)
        [label "1.14 Reporting obligation of the counterparty 2"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "14" field "Reporting obligation of the counterparty 2"
            provision "Indicator of whether counterparty 2 has the reporting obligation under Regulation (EU) No 648/2012 irrespective of who is responsible and legally liable for its reporting."]
        [ruleReference ReportingObligationOfTheCounterparty2]
    override brokerID LEIIdentifier (0..1)
        [label "1.15 Broker ID"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "15" field "Broker ID"
            provision "In the case a broker acts as intermediary for the counterparty 1 without becoming a counterparty himself, the counterparty 1 shall identify this broker by a unique code."]
        [regulatoryReference ISDA PeerReviewGroup date "20230627"
            provision "'Broker' is understood in the traditional way, it means as intermediary role. Which leads to 'Arranging Broker' party role."]
        [ruleReference BrokerID]
    override direction1 Direction1Enum (0..1)
        [label "1.17 Direction"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "17" field "Direction"
            provision "Indicator of whether counterparty 1 is the buyer or the seller as determined at the time of the transaction."]
	    [ruleReference Direction]
    override directlyLinkedToCommercialActivityOrTreasuryFinancing boolean (0..1)
        [label "1.20 Directly linked to commercial activity or treasury financing"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "20" field "Directly linked to commercial activity or treasury financing"
            provision "Information on whether the contract is objectively measurable as directly linked to counterparty 1s commercial or treasury financing activity, as referred to in Article 10(3) of Regulation (EU) No 648/2012. This field shall be populated only where the counterparty 1 is a non-financial counterparty, as referred to in Article 2(9) of the Regulation (EU) No 648/2012."]
        [ruleReference DirectlyLinkedToCommercialActivityOrTreasuryFinancing]
    override uniqueTransactionIdentifier UTIIdentifier (0..1)
        [label  "2.1 UTI"]
        [regulatoryReference FCA UKEMIR table "2" dataElement "1" field "UTI"
            provision "Unique Transaction Identifier as referred to in Article 8 of the EMIR Technical Standards on the Standards, Formats, Frequency and Methods and Arrangements for Reporting 2023."]
        [ruleReference UTI]
    override uniqueTransactionIdentifierProprietary UTIIdentifierLegacy (0..1)
        [label "2.1 UTI (Proprietary)"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "1" field "UTI"
            provision "Unique Transaction Identifier as referred to in Article 8 of the EMIR Technical Standards on the Standards, Formats, Frequency and Methods and Arrangements for Reporting 2023."]
        [ruleReference UTIProprietary]
    override reportTrackingNumber Max52AlphaNumericText (0..1)
        [label "2.2 Report Tracking Number"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "2" field "Report Tracking Number"
            provision "Where a derivative was executed on a trading venue, a number generated by the trading venue and unique to that execution."]
        [ruleReference ReportTrackingNumber]
    override priorUTI UTIIdentifier (0..1)
        [label "2.3 Prior UTI"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "3" field "Prior UTI"
            provision "UTI assigned to the predecessor transaction that has given rise to the reported transaction due to a lifecycle event, in a one-to-one relation between transactions (e.g. in the case of a novation, when a transaction is terminated, and a new transaction is generated) or in a one-to-many relation between transactions (e.g. in clearing or if a transaction is split into several different transactions). This data element is not applicable when reporting many-to-one and many-to-many relations between transactions (e.g. in the case of a compression)."]
        [ruleReference PriorUTI]
    override priorUTIProprietary UTIIdentifierLegacy (0..1)
        [label "2.3 Prior UTI (Proprietary)"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "3" field "Prior UTI"
            provision "UTI assigned to the predecessor transaction that has given rise to the reported transaction due to a lifecycle event, in a one-to-one relation between transactions (e.g. in the case of a novation, when a transaction is terminated, and a new transaction is generated) or in a one-to-many relation between transactions (e.g. in clearing or if a transaction is split into several different transactions). This data element is not applicable when reporting many-to-one and many-to-many relations between transactions (e.g. in the case of a compression)."]
        [ruleReference PriorUTIProprietary]
    override ptrrId common.Max52UpperAlphaNumericText (0..1)
        [label "2.5 PTRR ID"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "5" field "PTRR ID"
            provision "Identifier generated by the PTRR service provider or CCP providing the PTRR service in order to connect all derivatives entering into a given PTRR event and resulting from that PTRR event."]
        [ruleReference PTRRID]
    override packageIdentifier Max35AlphaNumericText (0..1)
        [label "2.6 Package identifier"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "6" field "Package identifier"
            provision "Identifier (determined by the counterparty 1) in order to connect derivatives in the same package in accordance with Article 3(3). A package may include reportable and non-reportable transactions."]
        [ruleReference PackageIdentifier]
    override subsequentPositionUTI UTIIdentifierLegacy (0..1)
        [label "2.4 Subsequent Position UTI"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "4" field "Subsequent Position UTI"
            provision "The UTI of the position in which a derivative is included. This field is applicable only for the reports related to the termination of a derivative due to its inclusion in a position."]
        [ruleReference SubsequentPositionUTI]
    override isin ISINOct2015Identifier (0..1)
        [label "2.7 ISIN"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "7" field "ISIN"
            provision "ISIN identifying the product if that product is admitted to trading or traded on a regulated market, MTF, OTF or systematic internaliser."]
        [ruleReference ISIN]
    override uniqueProductIdentifier string (0..1)
        [label  "2.8 UPI"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "8" field "UPI"
            provision "UPI identifying the product."]
        [ruleReference UPI]
    override productClassification CFIOct2015Identifier (1..1)
        [label "2.9 Product classification"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "9" field "Product classification"
            provision "Classification of Financial Instrument (CFI) code pertaining to the instrument."]
        [ruleReference ProductClassification]
    override contractType CommonContractType (1..1)
        [label "2.10 Contract Type"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "10" field "Contract type"
            provision "Each reported contract shall be classified according to its type."]
        [regulatoryReference ISDA PeerReviewGroup date "20230920"
            provision "SPDB and CFDS output values will not be supported in DRR until CDM is able to functionally qualify them as distinct products. The qualification of these products needs to be backed by transaction or reporting samples provided by DRR firms."]
        [regulatoryReference ISDA PeerReviewGroup date "20230920"
            provision "OTHR is populated if none of the possible outputs are a precise fit"]
        [regulatoryReference ISDA TechnicalExecutionGroup date "20231003"
            provision "The decision has been to apply ETD functionality to all products as a matter of prudence and consistency, understanding products like Swap are generally not ETD"]
        [ruleReference ContractType]
    override assetClass CommonAssetClass (1..1)
        [label "2.11 Asset Class"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "11" field "Asset class"
            provision "Each reported contract shall be classified according to the asset class it is based on."]
        [regulatoryReference FCA QandA_On_EMIR_Reporting section "TR" question "1"
            provision "TR Question 1 [last update 24 September 2020] How should the following financial instruments be classified for reporting and other purposes under EMIR? (b) Cross-currency swaps, swaptions, Caps and Floors? (c) Total Return Swaps
				TR Answer 1 (b) These financial instruments should be classified as interest rates, in line with current market practice. On the sections to be reported, ESMA finds that where both sections are relevant having in mind the terms of the contract being reported, both sections of reporting fields are to be reported i.e.option and interest rate for swaption, Caps and Floors, and FX and interest rate or crosscurrency swaps. The contract type (Field 1 of Table 2) should be populated with the value ST for swaption.There are two fields for the notional amount currency and one for the notional amount. To avoid that one counterparty reports the notional amount in CCY1 (Field 9 of Table 2) while the other would report in CCY2 (Field 10 of Table 2), which would create a reconciliation problem, the Field Notional Amount (Field 20 of Table 2) should be denominated in the currency reported in Notional currency 1 (Field 9 of Table 2).
			(c) Total Return Swaps should be classified based on the underlying. For example, a Total Return Swap on an equity index should be reported with value EQ in field Asset class (Table 2 field 2), whereas a Total Return Swap on a bond or loan should be reported with value CR in field Asset class (Table 2 field 2)."]
        [ruleReference AssetClass]
    override cryptoAssetUnderlyingIndicator boolean (1..1)
        [label "2.12 Derivative based on crypto-assets"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "12" field "Derivative based on crypto-assets"
            provision "Indicator whether the derivative is based on crypto-assets."]
    override underlyingIdentificationType common.underlier.UnderlyingIdentificationTypeEnum (0..1)
        [label "2.13 Underlying Identification Type"] // todo: clarify whether commo should result in a value here
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "13" field "Underlying Identification Type"
            provision "The type of relevant underlying identifier."]
        [regulatoryReference ISDA PeerReviewGroup date "20230426"
            provision "Regarding test samples of Equity baskets with a single index or a single security with an ISIN, the view of Credit Suisse's representative is that those samples are valid because they illustrate an acceptable boundary condition."]
        [regulatoryReference ISDA PeerReviewGroup date "20230426"
            provision "Regarding whether the underlying ISIN will always be used in EMIR reporting, the view of Credit Suisse's representative is that MIFID only accepts ISIN."]
        [ruleReference UnderlyingIdentificationType]
    override underlyingIdentification ISINOct2015Identifier (0..1)
        [label "2.14 Underlying Identification"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "14" field "Underlying Identification"
            provision "The direct underlying shall be identified by using a unique identification for this underlying based on its type. For Credit Default Swaps, the ISIN of the reference obligation should be provided."]
        [ruleReference UnderlyingIdentification]
    override nameOfTheUnderlyingIndex Max50AlphaNumericTextWithSplChars (0..1)
        [label "2.16 Name of the underlying index"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "16" field "Name of the underlying index"
            provision "The full name of the underlying index as assigned by the index provider."]
        [ruleReference NameOfTheUnderlyingIndex]
    override indicatorOfTheUnderlyingIndex IndexEnum (0..*)
        [label "2.15 Indicator of the underlying index"]
        [regulatoryReference FCA UKEMIR Trade table "2" field "15"
            provision "An indication of the underlying index, where available."]
        [ruleReference IndicatorOfTheUnderlyingIndex]
    override basketConstituents cde.basket.BasketConstituentsReport (0..*)
        [label for identifier "2.18 Identifier of the basket's constituents"]
        [regulatoryReference for identifier FCA UKEMIR Trade table "2" dataElement "18" field "Basket's constituents"
            provision "Field 18 is repeatable and shall be populated in case there is a basket with constituents"]
        [regulatoryReference for identifier FCA UKEMIR Trade table "2b" field "18"
            provision "In case of custom baskets composed, among others, of financial instruments traded in a trading venue, only financial instruments traded in a trading venue shall be specified."]
        [ruleReference IdentifierOfBasketConstituents]
    override customBasketCode Min20Max72AlphaNumericText (0..1)
        [label "2.17 Custom basket code"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "17" field "Custom basket code"
            provision "If the derivative transaction is based on a custom basket, unique code assigned by the structurer of the custom basket to link its constituents."]
        [ruleReference CustomBasketCode]
    override valuationAmount ShortFraction5DecimalNumber (0..1)
        [label "2.21 Valuation amount"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "21" field "Valuation amount"
            provision "Mark-to-market valuation of the contract, or mark-to-model valuation as referred to in Article 6 of these Technical Standards.The CCPs valuation to be used for a cleared trade."]
        [ruleReference ValuationAmount]
    override valuationCurrency ISOCurrencyCodeEnum (0..1)
        [label "2.22 Valuation currency"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "22" field "Valuation currency"
            provision "Currency in which the valuation amount is denominated."]
        [ruleReference ValuationCurrency]
    override valuationTimestamp zonedDateTime (0..1)
        [label "2.23 Valuation Timestamp"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "23" field "Valuation timestamp"
            provision "Date and time of the last valuation marked to market, provided by the CCP or calculated using the current or last available market price of the inputs."]
        [ruleReference ValuationTimestamp]
    override valuationMethod ValuationType1Code (0..1)
        [label "2.24 Valuation method"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "24" field "Valuation method"
            provision "Source and method used for the valuation of the transaction by counterparty 1. If at least one valuation input is used that is classified as mark-to-model in the below table, then the whole valuation is classified as mark-to-model. If only inputs are used that are classified as mark-to-market in the table below, then the whole valuation is classified as mark-to-market."]
        [ruleReference ValuationMethod]
    override delta ShortFraction5DecimalNumber (0..1)
        [label "2.25 Delta"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "25" field "Delta"
            provision "The ratio of the absolute change in price of a derivative transaction to the change in price of the underlier. This field is applicable only to options and swaptions. Updated delta shall be reported on a daily basis by financial counterparties and non-financial counterparties as referred to in Article 10 of Regulation (EU) No 648/2012."]
        [ruleReference Delta]
    override confirmationTimestamp zonedDateTime (0..1)
        [label "2.28 Confirmation Timestamp"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "28" field "Confirmation Timestamp"
            provision "Date and time of the confirmation, as set out in Article 12 of Commission Delegated Regulation (EU) No 149/20132. Applicable only to OTC derivative contracts not cleared by a CCP."]
    override confirmed ConfirmationEnum (0..1)
        [label "2.29 Confirmed"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "29" field "Confirmed"
            provision "For new reportable transactions, whether the legally binding terms of an OTC derivatives contract were documented and agreed upon (confirmed) or not (unconfirmed). If documented and agreed, whether such confirmation was done: via a shared confirmation facility or platform, or a private/bilateral electronic system (electronic); via a human-readable written document, such as fax, paper or manually processed e-mails (non- electronic).Applicable only to OTC derivative contracts not cleared by a CCP."]
        [ruleReference Confirmed]
    override clearingObligation ClearingObligationEnum (0..1)
        [label "2.30 Clearing Obligation"]
        [regulatoryReference FCA UKEMIR table "2" dataElement "30" field "Clearing obligation"
            provision "Indicates whether the reported contract belongs to a class of OTC derivatives that has been declared subject to the clearing obligation and both counterparties to the contract are subject to the clearing obligation under Regulation (EU) No 648/2012, as of the time of execution of the contract. Applicable only to OTC derivative contracts."]
        [ruleReference ClearingObligation]
    override cleared ClearedEnum (1..1)
        [label "2.31 Cleared"]
        [regulatoryReference FCA UKEMIR table "2" dataElement "31" field "Cleared"
            provision "Indicator of whether the derivative has been cleared by a CCP."]
        [ruleReference Cleared]
    override clearingTimestamp zonedDateTime (0..1)
        [label "2.32 Clearing Timestamp"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "32" field "Clearing Timestamp"
            provision "Time and date when clearing took place. Applicable only to derivatives cleared by a CCP."]
        [ruleReference ClearingTimestamp]
    override centralCounterparty LEIIdentifier (0..1)
        [label "2.33 Central Counterparty"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "33" field "Central counterparty"
            provision "Identifier of the CCP that cleared the transaction. This data element is not applicable if the value of the data element Cleared is N (No, not centrally cleared)."]
        [ruleReference CentralCounterparty]
    override masterAgreementType common.contract.MasterAgreementEnum (1..1)
        [label "2.34 Master Agreement Type"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "34" field "Master Agreement Type"
            provision "Reference to the master agreement type under which the counterparties concluded a derivative."]
        [ruleReference MasterAgreementType]
    override otherMasterAgreementType Max50AlphaNumericText (0..1)
        [label "2.35 Other Master Agreement Type"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "35" field "Other master agreement type"
            provision "Name of the master agreement. This field shall only be completed where OTHR is reported in field 2.34 of this table."]
        [ruleReference OtherMasterAgreementType]
    override masterAgreementVersion int (0..1)
        [label "2.36 Master Agreement version"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "36" field "Master Agreement version"
            provision "Reference to the year of the master agreement relevant to the reported trade, if applicable."]
        [ruleReference MasterAgreementVersion]
    override intragroup boolean (0..1)
        [label "2.37 Intragroup"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "37" field "Intragroup"
            provision "Indicates whether the contract was entered into as an intragroup transaction, defined in Article 3 of Regulation (EU) No 648/2012, except that, for the contract to be characterised as an intragroup transaction for the purposes of this reporting field, the references to counterparties established in a third-country jurisdiction in Articles 3(1), 3(2)(a)(i) and 3(2)(d) respectively apply to counterparties established in any third country jurisdiction, not only jurisdictions for which: (a) the Commission has adopted an implementing act as referred to in Article 13(2) in respect of that third country before IP completion day, or (b) the Treasury have made regulations under that Article in respect of that third country after IP completion day. This does not affect the meaning of the term intragroup transaction as used elsewhere in Regulation (EU) No 648/2012 or related legislation."]
        [ruleReference Intragroup]
    override ptrr boolean (0..1)
        [label "2.38 PTRR"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "38" field "PTRR"
            provision "Identify whether the contract results from a PTRR operation."]
        [regulatoryReference ISDA PeerReviewGroup date "20230823"
            provision "Portfolio rebalancing scenarios are not yet addressed in PTRR fields, only compression scenarios are addressed."]
        [ruleReference PTRR]
    override typeOfPTRRTechnique RiskReductionTechniqueEnum (0..1)
        [label "2.39 Type of PTRR technique"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "39" field "Type of PTRR technique"
            provision "Indicator of a type of a PTRR operation for the purpose of reporting under EMIR. Portfolio Compression without a third-party service provider: An arrangement to reduce risk in existing portfolios of trades using non-price forming trades mainly to reduce notional amount outstanding, the number of transactions or otherwise harmonise the terms, by wholly or partially terminating trades and commonly to replace the terminated derivatives with new replacement trades. Portfolio Compression with a third-party service provider or CCP: A PTRR service provided by a service provider or CCP to reduce risk in existing portfolios of trades using non-price forming trades mainly to reduce notional amount outstanding, the number of transactions or otherwise harmonise the terms, by wholly or partially terminating trades and commonly to replace the terminated derivatives with new replacement trades. Portfolio Rebalancing/Margin management: A PTRR service provided by a service provider to reduce risk in an existing portfolio of trades by adding new non-price forming trades and where no existing trades in the portfolio are terminated or replaced and the notional is increased rather than decreased. Other Portfolio PTTR services: A PTRR service provided by a service provider to reduce risk in existing portfolios of trades using non-price forming trades and where such service does not qualify as Portfolio Compression or Portfolio Rebalancing."]
        [ruleReference TypeOfPTRRTechnique]
    override ptrrServiceProvider LEIIdentifier (0..1)
        [label "2.40 PTRR service provider"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "40" field "PTRR service provider"
            provision "LEI identifying the PTRR service provider."]
        [regulatoryReference ISDA PeerReviewGroup date "20230823"
            provision "Portfolio rebalancing scenarios are not yet addressed in PTRR fields, only compression scenarios are addressed."]
        [ruleReference PTRRServiceProvider]
    override venueOfExecution string (0..1)
        [label "2.41 Venue of Execution"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "41" field "Venue of Execution"
            provision "Identification of the venue where the transaction was executed. Use the ISO 10383 segment MIC for transactions executed on a trading venue, Systematic Internaliser (SI) or organised trading platform outside of the UK. Where the segment MIC does not exist, use the operating MIC. Use MIC code XOFF for financial instruments admitted to trading, or traded on a trading venue or for which a request for admission was made, where the transaction on that financial instrument is not executed on a trading venue, SI or organised trading platform outside of the UK, or where a counterparty does not know it is trading with a counterparty 2 acting as an SI. Use MIC code XXXX for financial instruments that are not admitted to trading or traded on a trading venue or for which no request for admission has been made and that are not traded on an organised trading platform outside of the UK."]
        [ruleReference VenueOfExecution]
    override executionTimestamp zonedDateTime (1..1)
        [label "2.42 Execution Timestamp"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "42" field "Execution Timestamp"
            provision "Date and time a transaction was originally executed, resulting in the generation of a new UTI. This data element remains unchanged throughout the life of the UTI. For position level reporting it should refer to the time when position was opened for the first time."]
        [ruleReference ExecutionTimestamp]
    override effectiveDate ISODate (1..1)
        [label "2.43 Effective Date"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "43" field "Effective Date"
            provision "Unadjusted date at which obligations under the OTC derivative transaction come into effect, as included in the confirmation. If the effective date is not specified as part of the terms of the contract, the counterparties shall report in this field the date of execution of the derivative."]
        [regulatoryReference ISDA EMIRReportingBestPractice table "2" field "26"
            provision "Where an Effective Date is specified in the terms of the contract, report that date (i.e. the effective date represented on the confirmation). If an effective date is not specified in the terms of the contract, report the execution date (see best practice for Execution Timestamp)."]
        [ruleReference EffectiveDate]
    override expirationDate ISODate (0..1)
        [label "2.44 Expiration Date"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "44" field "Expiration Date"
            provision "Unadjusted date at which obligations under the derivative transaction stop being effective, as included in the confirmation. Early termination does not affect this data element."]
        [ruleReference ExpirationDate]
    override earlyTerminationDate date (0..1) 
        [label "2.45 Early termination date"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "45" field "Early termination date"
            provision "Effective date of the early termination (expiry) of the reported transaction. This data element is applicable if the termination of the transaction occurs prior to its maturity due to an ex- interim decision of a counterparty (or counterparties)."]
        [ruleReference EarlyTerminationDate]
    override finalContractualSettlementDate date (0..1)
        [label "2.46 Final Contractual Settlement Date"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "46" field "Final contractual settlement date"
            provision "Unadjusted date as per the contract, by which all transfer of cash or assets should take place and the counterparties should no longer have any outstanding obligations to each other under that contract. For products that may not have a final contractual settlement date (e.g. American options), this data element reflects the date by which the transfer of cash or asset would take place if termination were to occur on the expiration date."]
        [ruleReference FinalContractualSettlementDate]
    override deliveryType DeliveryTypeEnum (1..1)
        [label "2.47 Delivery Type"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "47" field "Delivery type"
            provision "Indicates whether the contract is settled physically or in cash."]
        [ruleReference DeliveryType]
    override price cde.price.PriceFormat (0..1)
        [label for monetary "2.48 Price (Monetary)"]
        [label for percentage "2.48 Price (Percentage)"]
        [label for basis "2.48 Price (Basis)"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "48" field "Price"
            provision "Price specified in the derivative transaction. It does not include fees, taxes or commissions. Where the price is not known when a new transaction is reported, the price is updated as it becomes available. For transactions that are part of a package, this data element contains the price of the component transaction where applicable."]
        [regulatoryReference FCA UKEMIR section "4.4.7" paragraph "391"
            provision "ESMA proposed in the Consultation Paper certain amendments to the mechanics in which the price of a derivative contract is reported. In particular, ESMA proposed to	change the fields and their definitions to better align with the CDE guidance and clarified	that the field Price should only be populated when the information is not provided in another field (e.g. Fixed rate)."]
        [ruleReference Price]
    override priceNotation cde.price.PriceNotationEnum (0..1)
        [label "2.48 Price Notation (Non Reportable)"]
        [ruleReference PriceNotation]
    override priceCurrency ISOCurrencyCodeEnum (0..1)
        [label "2.49 Price Currency"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "49" field "Price currency"
            provision "Currency in which the price is denominated. Price currency is only applicable if price is expressed as monetary value."]
        [ruleReference PriceCurrency]
    override priceSchedule cde.price.PricePeriod (0..*)
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "50-52" field "Contract Price Schedule"
            provision "Fields 50-52 are repeatable and shall be populated in the case of derivatives involving price schedules"]

        [label for effectiveDate "2.50/2.52-$ 2.50 Unadjusted effective date of the price"]
        [regulatoryReference for effectiveDate FCA UKEMIR Trade table "2" dataElement "50" field "Unadjusted effective date of the price"
            provision "Unadjusted effective date of the price."]

        [label for endDate "2.50/2.52-$ 2.51 Unadjusted end date of the price"]
        [regulatoryReference for endDate FCA UKEMIR Trade table "2" dataElement "51" field "Unadjusted end date of the price"
            provision "Unadjusted end date of the price (not applicable if the unadjusted end date of a given schedules period is back-to-back with the unadjusted effective date of the subsequent period)."]

        [label for price -> monetary "2.50/2.52-$ 2.52 Price in effect between the unadjusted effective and end date (Monetary)"]
        [label for price -> percentage "2.50/2.52-$ 2.52 Price in effect between the unadjusted effective and end date (Percentage)"]
        [regulatoryReference for price FCA UKEMIR Trade table "2" dataElement "52" field "Price in effect between the unadjusted effective and end date"
            provision "Price in effect between the unadjusted effective date and inclusive of the unadjusted end date."]

        [ruleReference ContractPriceSchedule]
    override packageTransactionPrice cde.price.PriceFormat (0..1)
        [label for monetary "2.53 Package Transaction Price (Monetary)"]
        [label for percentage "2.53 Package Transaction Price (Percentage)"]
        [label for basis "2.53 Package Transaction Price (Basis)"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "53" field "Package transaction price"
            provision "Traded price of the entire package in which the reported derivative transaction is a component.This data element is not applicable if no package is involved, or package transaction spread is used. Prices and related data elements of the transactions (Price currency) that represent individual components of the package are reported when available. The package transaction price may not be known when a new transaction is reported but may be updated later."]
        [ruleReference PackageTransactionPrice]
    override packageTransactionPriceNotation cde.price.PriceNotationEnum (0..1)
        [label "2.53 Package Transaction Price Notation"]
        [ruleReference PackageTransactionPriceNotation]
    override  packageTransactionPriceCurrency ISOCurrencyCodeEnum (0..1)
        [label "2.54 Package Transaction Price Currency"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "54" field "Package transaction price currency"
            provision "Currency in which the Package transaction price is denominated. This data element is not applicable if no package is involved, or package transaction spread is used, or package transaction price is expressed as percentage."]
        [ruleReference PackageTransactionPriceCurrency]
    override otherPayment cde.payment.OtherPayment (0..*)
        [label for paymentType "2.73/2.78-$ 2.73 Other Payment Type"]
        [regulatoryReference for paymentType FCA UKEMIR Trade table "2" dataElement "73" field "Other payment type"
            provision "Type of other payment amount. Option premium payment is not included as a payment type as premiums for option are reported using the option premium dedicated data element."]

        [label for amount "2.73/2.78-$ 2.74 Other Payment Amount"]
        [regulatoryReference for amount FCA UKEMIR Trade table "2" dataElement "74" field "Other payment amount"
            provision "Payment amounts with corresponding payment types to accommodate requirements of transaction descriptions from different asset classes."]

        [label for currency "2.73/2.78-$ 2.75 Other Payment Currency"]
        [regulatoryReference for currency FCA UKEMIR Trade table "2" dataElement "75" field "Other payment currency"
            provision "Currency in which other payment amount is denominated."]

        [label for date "2.73/2.78-$ 2.76 Other Payment Date"]
        [regulatoryReference for date FCA UKEMIR Trade table "2" dataElement "76" field "Other payment date"
            provision "Unadjusted date on which the other payment amount is paid."]

        [label for payer "2.73/2.78-$ 2.77 Other Payment Payer"]
        [regulatoryReference for payer FCA UKEMIR Trade table "2" dataElement "77" field "Other payment payer"
            provision "Identifier of the payer of other payment amount."]

        [label for payerFormat "2.73/2.78-$ 2.77 Other Payment Payer Format (non-reportable)"]

        [label for receiver "2.73/2.78-$ 2.78 Other Payment Receiver"]
        [regulatoryReference for receiver FCA UKEMIR Trade table "2" dataElement "78" field "Other payment receiver"
            provision "Identifier of the receiver of other payment amount."]

        [label for receiverFormat "2.73/2.78-$ 2.78 Other Payment Receiver Format (non-reportable)"]

		[ruleReference OtherPayment]
    override packageTransactionSpread cde.price.PriceFormat (0..1)
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "111" field "Package transaction spread"
            provision "Traded price of the entire package in which the reported derivative transaction is a component of a package transaction. Package transaction price when the price of the package is expressed as a spread, difference between two reference prices. This data element is not applicable if:
                    - no package is involved, or 
                    - package transaction price is used 
                Spread and related data elements of the transactions (spread currency) that represent individual components of the package are reported when available. Package transaction spread may not be known when a new transaction is reported but may be updated later."]
        [label for monetary "2.111 Package transaction spread (Monetary)"]
        [label for percentage "2.111 Package transaction spread (Percentage)"]
        [label for basis "2.111 Package transaction spread (Basis)"]
        [ruleReference PackageTransactionSpread]
    override packageTransactionSpreadNotation cde.price.PriceNotationEnum (0..1)
        [label  "2.111 Package transaction spread Notation (Non Reportable)"]
        [ruleReference PackageTransactionSpreadNotation]
    override packageTransactionSpreadCurrency ISOCurrencyCodeEnum (0..1)
        [label "2.112 Package transaction spread currency"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "112" field "Package transaction spread currency"
            provision "Currency in which the package transaction spread is denominated. This data element is not applicable if no package is involved, or package transaction price is used, or package transaction spread is expressed as percentage or basis points."]
        [ruleReference PackageTransactionSpreadCurrency]
    override exchangeRate Max18D13Number (0..1)
        [label "2.113 Exchange Rate 1"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "113" field "Exchange rate 1"
            provision "Exchange rate between the two different currencies specified in the derivative transaction agreed by the counterparties at the inception of the transaction, expressed as the rate of exchange from converting the unit currency into the quoted currency."]
        [regulatoryReference ISDA PeerReviewGroup date "20230215"
            provision "FX Spots are not reportable for EMIR, only FX Forwards. So Exchange Rate will only be reported for the spot leg in the case of FX Swaps."]
        [ruleReference ExchangeRate]
    override forwardExchangeRate Max18D13Number (0..1)
        [label "2.114 Forward exchange rate"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "114" field "Forward exchange rate"
            provision "Forward exchange rate as agreed between the counterparties in the contractual agreement. It shall be expressed as a price of base currency in the quoted currency."]
        [regulatoryReference ISDA EMEADataAndReporting date "20230518"
            provision "EMIR Refit validation rules do indeed mean that for FX Options you must populate the Strike price (field 2.134) and one of either Exchange rate 1 (field 2.113) or Forward exchange rate (2.114). This is a duplication of data, but the validation rules force this. When this was discussed by the Data and Reporting EMEA WG, the proposal was to populate the Forward exchange rate field rather that Exchange rate 1 as the Strike is more like a forward rate (if exercised)."]
        [ruleReference ForwardExchangeRate]
    override exchangeRateBasis ExchangeRateBasisStringFormat (0..1)
        [label "2.115 Exchange Rate Basis"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "115" field "Exchange Rate Basis"
            provision "Currency pair and order in which the exchange rate is denominated, expressed as unit currency or quoted currency."]
        [ruleReference ExchangeRateBasis]
    override baseProduct string (0..1)
        [label "2.116 Base Product"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "116" field "Base Product"
            provision "Base product as specified in the classification of commodities in Table 4 of the Annex of the EMIR Technical Standards on the Standards, Formats, Frequency and Methods and Arrangements for Reporting 2023."]
        [ruleReference BaseProduct]
    override subProduct string (0..1)
        [label "2.117 Sub Product"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "117" field "Sub Product"
            provision "Sub-product as specified in the classification of commodities in Table 4 of the Annex of the EMIR Technical Standards on the Standards, Formats, Frequency and Methods and Arrangements for Reporting 2023. This field requires a specific base product in field."]
        [ruleReference SubProduct]
    override furtherSubProduct string (0..1)
        [label "2.118 Further sub-product"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "118" field "Further sub-product"
            provision "Further sub-product as specified in the classification of commodities in Table 4 of the Annex of the EMIR Technical Standards on the Standards, Formats, Frequency and Methods and Arrangements for Reporting 2023. This field requires a specific sub-product in field."]
        [ruleReference FurtherSubProduct]
    override deliveryPoint EICIdentifier (0..*)
        [label "2.119 Delivery point or zone"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "119" field "Delivery point or zone"
            provision "Delivery point(s) or market area(s)."]
        [regulatoryReference ISDA PeerReviewGroup date "20231020"
            provision "Not fully modelled. Need to add a delivery section in OptionPayout/ForwardPayout similar to the one in CommodityPayout"]
        [ruleReference DeliveryPointOrZone]
    override interconnectionPoint EICIdentifier (0..1)
        [label "2.120 Interconnection Point"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "120" field "Interconnection Point"
            provision "Identification of the border(s) or border point(s) of a transportation contract."]
        [regulatoryReference ISDA PeerReviewGroup date "20231020"
            provision "Not fully modelled. Need to add a delivery section in OptionPayout/ForwardPayout similar to the one in CommodityPayout"]
        [ruleReference InterconnectionPoint]
    override loadType EnergyLoadType1Code (0..1)
        [label "2.121 Load type"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "121" field "Load type"
            provision "Identification of the delivery profile."]
        [regulatoryReference ISDA PeerReviewGroup date "20231020"
            provision "Not fully modelled. Need to add a delivery section in OptionPayout/ForwardPayout similar to the one in CommodityPayout"]
        [regulatoryReference ISDA PeerReviewGroup date "20231114"
            provision "Modelled to accept only one type of delivery. If a transaction has two delivery profiles with different load types, those will not get reported."]
        [ruleReference LoadType]
    override deliveryReport ReportableDelivery (0..*)
        [label for deliveryStartTime "2.122/2.131-$ 2.122 Delivery interval start time"]
        [regulatoryReference for deliveryStartTime FCA UKEMIR Trade table "2" dataElement "122" field "Delivery interval start time"
            provision "The start time of the delivery interval for each block or shape."]

        [label for deliveryEndTime "2.122/2.131-$ 2.123 Delivery interval end time"]
        [regulatoryReference for deliveryEndTime FCA UKEMIR Trade table "2" dataElement "123" field "Delivery interval end time"
            provision "The end time of the delivery interval for each block or shape."]

        [label for deliveryStartDate "2.122/2.131-$ 2.124 Delivery start date"]
        [regulatoryReference for deliveryStartDate FCA UKEMIR Trade table "2" dataElement "124" field "Delivery start date"
            provision "Start date of delivery."]

        [label for deliveryEndDate "2.122/2.131-$ 2.125 Delivery end date"]
        [regulatoryReference for deliveryEndDate FCA UKEMIR Trade table "2" dataElement "125" field "Delivery end date"
            provision "End date of delivery."]

        [label for duration "2.122/2.131-$ 2.126 Duration"]
        [regulatoryReference for duration FCA UKEMIR Trade table "2" dataElement "126" field "Duration"
            provision "The duration of the delivery period."]

        [label for daysOfTheWeek "2.122/2.131-$ 2.127 Days of the week"]
        [regulatoryReference for daysOfTheWeek FCA UKEMIR Trade table "2" dataElement "127" field "Days of the week"
            provision "The days of the week of the delivery."]
        [regulatoryReference for daysOfTheWeek ISDA EMEADataAndReporting date "20231107"
            provision "Need to clarify the exact meaning of XBHL and IBHL to ensure they are not reported the other way around"]

        [label for deliveryCapacity "2.122/2.131-$ 2.128 Delivery capacity"]
        [regulatoryReference for deliveryCapacity FCA UKEMIR Trade table "2" dataElement "128" field "Delivery capacity"
            provision "The number of units included in the transaction for each delivery interval specified in fields 2.122 and 2.123."]
        [regulatoryReference for deliveryCapacity ISDA PeerReviewGroup date "20231114"
            provision "Not fully modelled. Need to add a function that calculates how many applicable days there is in an specific period for when the specified frequency is not daily."]

        [label for quantityUnit "2.122/2.131-$ 2.129 Quantity unit"]
        [regulatoryReference for quantityUnit FCA UKEMIR Trade table "2" dataElement "129" field "Quantity unit"
            provision "The unit of measurement used."]
        [regulatoryReference for quantityUnit ISDA PeerReviewGroup date "20231114"
            provision "Not fully modelled. Need to add a function that calculates how many applicable days there is in an specific period for when the specified frequency is not daily."]

        [label for priceTimeIntervalQuantity "2.122/2.131-$ 2.130 Price time interval quantity"]
        [regulatoryReference for priceTimeIntervalQuantity FCA UKEMIR Trade table "2" dataElement "130" field "Price time interval quantity"
            provision "If applicable, price per quantity per delivery time interval."]

        [label for currencyOfThePriceTimeIntervalQuantity "2.122/2.131-$ 2.131 Currency of the price time interval quantity"]
        [regulatoryReference for currencyOfThePriceTimeIntervalQuantity FCA UKEMIR Trade table "2" dataElement "131" field "Currency of the price time interval quantity"
            provision "The currency in which the price per time interval quantity is expressed."]

       [ruleReference Delivery]
    override optionType OptionTypeCode (0..1)
        [label "2.132 Option type"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "132" field "Option type"
            provision "Indication as to whether the derivative contract is a call (right to purchase a specific underlying asset) or a put (right to sell a specific underlying asset) or whether it cannot be determined whether it is a call or a put at the time of execution of the derivative contract. In case of swaptions it shall be: 
                    - 'Put', in case of receiver swaption, in which the buyer has the right to enter into a swap as a fixed-rate receiver, 
                    - 'Call', in case of payer swaption, in which the buyer has the right to enter into a swap as a fixed-rate payer. 
                In case of Caps and Floors it shall be: 
                    - 'Put', in case of a Floor, 
                    - 'Call', in case of a Cap."]
        [ruleReference OptionType]
    override optionStyle OptionStyleEnum (0..1)
        [label "2.133 Option Style"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "133" field "Option Style"
            provision "Indicates whether the option may be exercised only at a fixed date (European), a series of pre-specified dates (Bermudan) or at any time during the life of the contract (American)."]
        [regulatoryReference ISDA EMIRReportingBestPractice table "2" field "79"
            provision "For Caps and Floors, populated with E(European). Reasoning for CapFloors to be reported as E is that such products would report field 2.1  (Contract Type) as OP and therefore it is required to populate the Option exercise style. While a CapFloor would not have an exercise style, there is no option to report Other. Therefore, best practice is be to report as European E."]
        [ruleReference OptionStyle]
    override strikePrice cde.price.PriceFormat (0..1)
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "134" field "Strike price"
            provision "For options other than FX options, swaptions and similar products, price at which the owner of an option can buy or sell the underlying asset of the option. For foreign exchange options, exchange rate at which the option can be exercised, expressed as the rate of exchange from converting the unit currency into the quoted currency. In the example 0.9426 USD/EUR, USD is the unit currency and EUR is the quoted currency; USD 1 = EUR 0.9426. Where the strike price is not known when a new transaction is reported, the strike price is updated as it becomes available. For volatility and variance swaps and similar products the volatility strike price is reported in this data element."]
        [label for monetary "2.134 Strike Price (Monetary)"]
        [label for percentage "2.134 Strike Price (Percentage)"]
        [ruleReference StrikePrice]
    override strikePriceNotation cde.price.PriceNotationEnum (0..1)
        [label "2.134 Strike Price Notation (Non Reportable)"]
        [ruleReference StrikePriceNotation]
    override strikePriceCurrency string (0..1)
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "138" field "Strike price currency/currency pair"
            provision "For equity options, commodity options, and similar products, currency in which the strike price is denominated.For foreign exchange options: Currency pair and order in which the strike price is expressed. It is expressed as unit currency per quoted currency."]
        [label "2.138 Strike price currency/currency pair"]
        [ruleReference StrikePriceCurrencyCurrencyPair]
    override strikePriceSchedule cde.price.PricePeriod (0..*)
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "135-137" field "Strike Price Schedule"
            provision "Fields 135-137 are repeatable and reportable for options, swaptions and similar products with strike prices varying throughout the life of the
            transaction. Strike price schedule is only applicable if the strike price varies per schedule.
            The currency for the varying strike prices in the schedule is reported in Strike price currency data element."]

        [label for effectiveDate "2.135/2.137-$ 2.135 Effective date of the strike price"]
        [regulatoryReference for effectiveDate FCA UKEMIR Trade table "2" dataElement "135" field "Effective date of the strike price"
            provision "Unadjusted effective date of the strike price."]

        [label for endDate "2.135/2.137-$ 2.136 End date of the strike price"]
        [regulatoryReference for endDate FCA UKEMIR Trade table "2" dataElement "136" field "End date of the strike price"
            provision "Unadjusted end date of the strike price (not applicable if the unadjusted end date of a given schedules period is back-to-back with the unadjusted effective date of the subsequent period)."]
        [regulatoryReference for price FCA UKEMIR Trade table "2" dataElement "137" field "Strike price in effect on associated effective date"
            provision "Strike price in effect between the unadjusted effective date and unadjusted end date inclusive."]
        [label for price -> monetary "2.135/2.137-$ 2.137 Strike price in effect on associated effective date (Monetary)"]
        [label for price -> percentage "2.135/2.137-$ 2.137 Strike price in effect on associated effective date (Percentage)"]
        [ruleReference StrikePriceSchedule]
    override optionPremiumAmount ShortFraction5DecimalNumber (0..1)
        [label "2.139 Option Premium Amount"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "139" field "Option premium amount"
            provision "For options and swaptions of all asset classes, monetary amount paid by the option buyer. This data element is not applicable if the instrument is not an option or does not embed any optionality."]
        [ruleReference OptionPremiumAmount]
    override optionPremiumCurrency ISOCurrencyCodeEnum (0..1)
        [label "2.140 Option Premium Currency"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "140" field "Option premium currency"
            provision "For options and swaptions of all asset classes, currency in which the option premium amount is denominated. This data element is not applicable if the instrument is not an option or does not embed any optionality."]
        [ruleReference OptionPremiumCurrency]
    override optionPremiumPaymentDate date (0..1) 
        [label "2.141 Option Premium Payment Date"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "141" field "Option premium payment date"
            provision "Unadjusted date on which the option premium is paid."]
        [ruleReference OptionPremiumPaymentDate]
    override maturityDateOfTheUnderlying date (0..1)
        [label "2.142 Maturity date of the underlying"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "142" field "Maturity date of the underlying"
            provision "In case of swaptions, maturity date of the underlying swap."]
        [ruleReference MaturityDateOfTheUnderlying]
    override seniority SeniorityEnum (0..1)
        [label "2.143 Seniority"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "143" field "Seniority"
            provision "Indicates the seniority of the debt security, or debt basket or index underlying a derivative."]
        [ruleReference Seniority]
    override referenceEntity string (0..1)
        [label "2.144 Reference Entity"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "144" field "Reference Entity"
            provision "Identification of the underlying reference entity."]
        [ruleReference ReferenceEntity]
    override series Max5Int (0..1)
        [label "2.145 Series"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "145" field "Series"
            provision "The series number of the composition of the index if applicable."]
        [ruleReference Series]
    override seriesVersion Max5Int (0..1)
        [label "2.146 Version"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "146" field "Version"
            provision "A new version of a series is issued if one of the constituents defaults and the index has to be re-weighted to account for the new number of total constituents within the index."]
        [ruleReference Version]
    override indexFactor ShortFraction10DecimalNumber (0..1)
        [label "2.147 Index factor"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "147" field "Index Factor"
            provision "The factor to apply to the Notional amount of Leg 1 (Field 2.55 in this Table) to adjust it to all the previous credit events in that Index series."]
        [ruleReference IndexFactor]
    override tranche boolean (0..1)
        [label "2.148 Tranche"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "148" field "Tranche"
            provision "Indication whether a derivative contract is tranched."]
        [regulatoryReference ISDA PeerReviewGroup date "20230329"
            provision "The tranche only applies to the transaction that is being reported, not the underlyer of the contract. In the case of a credit default swap option, the underlying CDS doesn't exist  yet in the execution of the option trade so the tranche of the underlying CDS should not be reported. In addition, we don't expect that the underlying CDS would be a tranched transaction. It will be a simple swap."]
        [ruleReference Tranche]
    override cdSIndexAttachmentPoint ShortFraction10DecimalNumber (0..1)
        [label "2.149 CDS Index Attachment Point"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "149" field "CDS Index Attachment Point"
            provision "Defined lower point at which the level of losses in the underlying portfolio reduces the notional of a tranche. For example, the notional in a tranche with an attachment point of 3% will be reduced after 3% of losses in the portfolio have occurred. This data element is not applicable if the transaction is not a CDS tranche transaction (index or custom basket)."]
        [ruleReference CDSIndexAttachmentPoint]
    override cdSIndexDetachmentPoint ShortFraction10DecimalNumber (0..1)
        [label "2.150 CDS Index Detachment Point"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "150" field "CDS Index Detachment Point"
            provision "Defined point beyond which losses in the underlying portfolio no longer reduce the notional of a tranche. For example, the notional in a tranche with an attachment point of 3% and a detachment point of 6% will be reduced after there have been 3% of losses in the portfolio. 6% losses in the portfolio deplete the notional of the tranche. This data element is not applicable if the transaction is not a CDS tranche transaction (index or custom basket)."]
        [ruleReference CDSIndexDetachmentPoint]
    override collateralPortfolioIndicator boolean (0..1)
        [label "2.26 Collateral Portfolio Indicator"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "26" field "Collateral Portfolio Indicator"
            provision "Indicator of whether the collateralisation was performed on a portfolio basis. By 'on a portfolio basis', it is meant the set of transactions that are margined together (either on a net or a gross basis) contrary to the scenario where the margin is calculated and posted for each individual transaction separately."]
        [ruleReference CollateralPortfolioIndicator]
    override collateralPortfolioCode Max52AlphaNumericText (0..1)
        [label "2.27 Collateral Portfolio Code"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "27" field "Confirmation Portfolio Code"
            provision "If collateral is reported on a portfolio basis, unique code assigned by counterparty 1 to the portfolio. This data element is not applicable if the collateralisation was performed on a transaction level basis, or if there is no collateral agreement or if no collateral is posted or received."]
        [ruleReference CollateralPortfolioCode]
    override actionType ActionTypeEnum (1..1)
        [label "2.151 Action type"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "151" field "Action type"
            provision "- New: A report of a derivative, at a trade or position level, for the first time. 
            - Modify: A modification to the terms or details of a previously reported derivative, at a trade or position level, but not a correction of a report. 
            - Correction: A report correcting the erroneous data fields of a previously submitted report. 
            - Terminate: A Termination of an existing derivative, at a trade or position level. 
            - Error: A cancellation of a wrongly submitted entire report in case the derivative, at a trade or position level, never came into existence or was not subject to Regulation (EU) No 648/2012 reporting requirements but was reported to a trade repository by mistake or a cancellation of a duplicate report. 
            - Revive: Re-opening of a derivative, at a trade or position level, that was cancelled with action type Error or terminated by mistake. 
            - Valuation: An update of a valuation of a derivative, at a trade or position level.
            - Position component: A report of a new derivative that is included in a separate position report on the same day."]
        [docReference FCA UKEMIR Guidelines paragraph "132"
            provision "The categories of derivatives eligible for reporting at position level are: ETDs, centrally cleared OTC derivatives netted by CCPs and Contracts For Difference (CFDs). Although in the case of such derivatives the information concerning positions is most relevant for the assessment of systemic risk, reporting only at position level is not in line with EMIR requirements under Article 9 of EMIR, which requires all counterparties to report e.g. conclusion of a derivative at transaction level."]
        [regulatoryReference ISDA TechnicalExecutionGroup date "2023"
            provision "ETDs transactions are reported with POSC as action type and with a subsequent position UTI according to ESMA EMIR RTS Guidelines paragraph 132. The subsequent position UTI is reported as UTI at position level."]
    override eventType EventTypeEnum (0..1)
        [label "2.152 Event Type"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "152" field "Event Type"
            provision "- Trade: Conclusion of a derivative or renegotiation of its terms that does not result in change of a counterparty.
                - Step-in: An event, where part or entirety of the derivative is transferred to a counterparty 2 (and reported as a new derivative) and the existing derivative is either terminated or its notional is modified.
                - PTRR: Post-trade risk reduction exercise.
                - Early termination: Termination of a derivative, at a trade or position level.
                - Clearing: Clearing as defined in Article 2(3) of Regulation (EU) No 648/2012.
                - Exercise: The exercise of an option or a swaption by one counterparty of the transaction, fully or partially. 
                - Allocation: Allocation event, where an existing derivative is allocated to different counterparties and reported as new derivatives with reduced notional amounts. 
                - Credit event: Applies only to credit derivatives. A credit event that results in a modification of a derivative, at a trade or position level.
                - Corporate event: A corporate action on equity underlying that impacts the derivatives on that equity.
                - Inclusion in position: Inclusion of CCP-cleared derivative or CFD into a position, where an existing derivative is terminated and either a new position is created or the notional of an existing position is modified.  
                - Update: Update of an outstanding derivative performed during the transition period in order to ensure its conformity with the amended reporting requirements."]
    override eventDate ISODate (1..1)
        [label "2.153 Event Date"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "153" field "Event date"
            provision "Date on which the reportable event relating to the derivative contract and captured by the report took place or, in case of a modification when the modification become effective."]
        [ruleReference EventDate]
    override level ReportLevelEnum (1..1)
        [label "2.154 Level"]
        [regulatoryReference FCA UKEMIR Trade table "2" dataElement "154" field "Level"
            provision "Indication whether the report is done at trade or position level. Position level report can be used only as a supplement to trade level reporting to report post- trade events and only if individual trades in fungible products have been replaced by the position."]
        [ruleReference Level]
    override leg1 common.CommonLeg (0..1)
        [label for notionalAmount "2.55 Notional Amount 1"]
        [regulatoryReference for notionalAmount FCA UKEMIR Trade table "2" dataElement "55" field "Notional amount of leg 1"
            provision "Notional amount of leg 1 as referred to in Article 7 of the FCA's Technical Standards."]
        [regulatoryReference for notionalAmount FCA UKEMIR article "5" paragraph "2"
            provision "The initial report of a derivative contract whose notional amount varies over time shall specify the notional amount as applicable at the date of conclusion of the derivative contract and the notional amount schedule. When reporting the notional amount schedule, counterparties shall indicate: (i) the unadjusted date on which the associated notional amount becomes effective; (ii) the unadjusted end date of the notional amount; and (iii) the notional amount which becomes effective on the associated unadjusted effective date."]
        [ruleReference for notionalAmount NotionalAmountOfLeg1]

        [label for notionalCurrency "2.56 Notional Currency 1"]
        [regulatoryReference for notionalCurrency FCA UKEMIR Trade table "2" dataElement "56" field "Notional currency 1"
            provision "Where applicable: the currency in which the notional amount of leg 1 is denominated."]
        [ruleReference for notionalCurrency NotionalCurrency1]

        [label for totalNotionalQuantity "2.60 Total notional quantity-Leg 1"]
        [regulatoryReference for totalNotionalQuantity FCA UKEMIR Trade table "2" dataElement "60" field "Total notional quantity of leg 1"
            provision "Aggregate Notional quantity of the underlying asset of leg 1 for the term of the transaction. Where the total notional quantity is not known when a new transaction is reported, the total notional quantity is updated as it becomes available."]
        [ruleReference for totalNotionalQuantity TotalNotionalQuantityOfLeg1]

        [label for settlementCurrency "2.19 Settlement Currency 1"]
        [regulatoryReference for settlementCurrency FCA UKEMIR Trade table "2" dataElement "19" field "Settlement currency 1"
            provision "Currency for the cash settlement of the transaction when applicable. For multicurrency products that do not net, the settlement currency of the leg 1. This data element is not applicable for physically settled products (e.g. physically settled swaptions)."]
        [regulatoryReference for settlementCurrency ISDA PeerReviewGroup
            provision "In the case where settlement currency is not provided, model does not infer cash vs. physical settlement based on the product and then extract the notional currency as settlement currency. The conclusion at Peer Review was that firms should fill out the settlement currency field if it is reportable and DRR should not infer it from the notional."]
        [ruleReference for settlementCurrency SettlementCurrency1]

        [label for fixedRate "2.79 Fixed Rate of leg 1 or coupon"]
        [regulatoryReference for fixedRate FCA UKEMIR Trade table "2" dataElement "79" field "Fixed rate of leg 1 or coupon"
            provision "An indication of the fixed rate leg 1 or coupon used, where applicable."]
        [regulatoryReference for fixedRate ISDA TechnicalExecutionGroup date "20240418"
            provision "Equity products are implicitly filtered out by calling the function InterestRateLeg1, so no explicit filtering is needed."]
        [ruleReference for fixedRate FixedRateOfLeg1OrCoupon]
        [regulatoryReference for spread FCA UKEMIR Trade table "2" dataElement "93" field "Spread of Leg 1"
            provision "An indication of the spread of leg 1, where applicable: for OTC derivative transactions with periodic payments (e.g. interest rate fixed/float swaps, interest rate basis swaps, commodity swaps), spread on the individual floating leg(s) index reference price, in the case where there is a spread on a floating leg(s), difference between the reference prices of the two floating leg indexes."]

        [label for spread -> monetary "2.93 Spread of Leg 1 (Monetary)"]
        [label for spread -> percentage "2.93 Spread of Leg 1 (Percentage)"]
        [label for spread -> basis "2.93 Spread of Leg 1 (Basis)"]
        [ruleReference for spread SpreadOfLeg1]

        [label for spreadNotation "2.93 Spread of Leg 1 Notation (Non Reportable)"]
        [ruleReference for spreadNotation SpreadOfLeg1Notation]

        [label for spreadCurrency "2.94 Spread Currency of Leg 1"]
        [regulatoryReference for spreadCurrency FCA UKEMIR Trade table "2" dataElement "94" field "Spread Currency of Leg 1"
            provision "Where applicable: currency in which the spread of leg 1 is denominated. This data element is only applicable if spread is expressed as monetary amount."]
        [ruleReference for spreadCurrency SpreadCurrencyOfLeg1]
        [regulatoryReference for notionalAmountSchedule FCA UKEMIR Trade table "2" dataElement "57-59" field "Notional Amount Schedule"
            provision "Fields 57-59 are repeatable and shall be populated in the case of derivatives involving notional amount schedules"]

        [label for notionalAmountSchedule -> effectiveDate "2.57/2.59-$ 2.57 Effective date of the notional amount of leg 1"]
        [regulatoryReference for notionalAmountSchedule -> effectiveDate FCA UKEMIR Trade table "2" dataElement "57" field "Effective date of the notional amount of leg 1"
            provision "Unadjusted date on which the associated notional amount of leg 1 becomes effective."]

        [label for notionalAmountSchedule -> endDate "2.57/2.59-$ 2.58 End date of the notional amount of leg 1"]
        [regulatoryReference for notionalAmountSchedule -> endDate FCA UKEMIR Trade table "2" dataElement "58" field "End date of the notional amount of leg 1"
            provision "Unadjusted end date of the notional amount of leg 1(not applicable if the unadjusted end date of a given schedules period is back-to-back with the unadjusted effective date of the subsequent period)."]
        [regulatoryReference for notionalAmountSchedule -> endDate ISDA TechnicalExecutionGroup date "20231128"
            provision "This field remained unmodelled as WG believe that ESMA's update on 23rd September regarding the new conditionality for schedule date fields is incorrect."]

        [label for notionalAmountSchedule -> value "2.57/2.59-$ 2.59 Notional amount in effect on associated effective date of leg 1"]
        [regulatoryReference for notionalAmountSchedule -> value FCA UKEMIR Trade table "2" dataElement "59" field "Notional amount in effect on associated effective date of leg 1"
            provision "Notional amount of leg 1 which becomes effective on the associated unadjusted effective date."]
        [ruleReference for notionalAmountSchedule NotionalAmountScheduleLeg1]
        [regulatoryReference for notionalQuantitySchedule FCA UKEMIR Trade table "2" dataElement "61-63" field "Notional Quantity Schedule"
            provision "Fields 61-63 are repeatable and shall be populated in the case of derivatives involving notional quantity schedules"]

        [label for notionalQuantitySchedule -> effectiveDate   "2.61/2.63-$ 2.61 Effective date of the notional quantity of leg 1"]
        [regulatoryReference for notionalQuantitySchedule -> effectiveDate FCA UKEMIR Trade table "2" dataElement "61" field "Effective date of the notional quantity of leg 1"
            provision "Unadjusted date on which the associated notional quantity of leg 1 becomes effective."]

        [label for notionalQuantitySchedule -> endDate "2.61/2.63-$ 2.62 End date of the notional quantity of leg 1"]
        [regulatoryReference for notionalQuantitySchedule -> endDate FCA UKEMIR Trade table "2" dataElement "62" field "End date of the notional quantity of leg 1"
            provision "Unadjusted end date of the notional quantity of leg 1 (not applicable if the unadjusted end date of a given schedules period is back-to-back with the unadjusted effective date of the subsequent period)."]

        [label for notionalQuantitySchedule -> value  "2.61/2.63-$ 2.63 Notional quantity in effect on associated effective date of leg 1"]
        [regulatoryReference for notionalQuantitySchedule -> value FCA UKEMIR Trade table "2" dataElement "63" field "Notional quantity in effect on associated effective date of leg 1"
            provision "Notional quantity of leg 1 which becomes effective on the associated unadjusted effective date."]

        [ruleReference for notionalQuantitySchedule NotionalQuantityScheduleLeg1]
        [regulatoryReference for periodicPayment ISDA TechnicalExecutionGroup date "20240418"
            provision "Equity products are implicitly filtered out by calling the function InterestRateLeg1, so no explicit filtering is needed."]
        
        [label for direction2 "1.18 Direction of leg 1"]
        [regulatoryReference for direction2 FCA UKEMIR Trade table "1" dataElement "18" field "Direction of leg 1"
            provision "Indicator of whether the counterparty 1 is the payer or the receiver of leg 1 as determined at the date the derivative was concluded."]
	    [ruleReference for direction2 DirectionOfLeg1]

        [label for periodicPayment -> fixedRateDayCountConvention "2.80 Fixed rate or coupon day count convention leg 1"]
        [regulatoryReference for periodicPayment -> fixedRateDayCountConvention FCA UKEMIR Trade table "2" dataElement "80" field "Fixed Rate Day Count Convention Leg 1"
            provision "Where applicable: day count convention (often also referred to as day count fraction or day count basis or day count method) that determines how interest payments are calculated. It is used to compute the year fraction of the calculation period, and indicates the number of days in the calculation period divided by the number of days in the year."]
        [ruleReference for periodicPayment -> fixedRateDayCountConvention FixedRateOrCouponDayCountConventionLeg1]

        [label for periodicPayment -> fixedRatePaymentFrequencyPeriod  "2.81 Fixed rate or coupon payment frequency period leg 1"]
        [regulatoryReference for periodicPayment -> fixedRatePaymentFrequencyPeriod FCA UKEMIR Trade table "2" dataElement "81" field "Fixed rate or coupon payment frequency period leg 1"
            provision "Where applicable: time unit associated with the frequency of payments, e.g. day, week, month, year or term of the stream for the fixed rate of leg 1 or coupon."]
        [ruleReference for periodicPayment -> fixedRatePaymentFrequencyPeriod  FixedRateOrCouponPaymentFrequencyPeriodLeg1]

        [label for periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier "2.82 Fixed rate or coupon payment frequency period multiplier leg 1"]
        [regulatoryReference for periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier FCA UKEMIR Trade table "2" dataElement "82" field "Fixed rate or coupon payment frequency period multiplier leg 1"
            provision "Where applicable: number of time units (as expressed by the payment frequency period) that determines the frequency at which periodic payment dates occur for the fixed rate of leg 1 or coupon. For example, a transaction with payments occurring every two months is represented with a payment frequency period of 'MNTH' (monthly) and a payment frequency period multiplier of 2. This data element is not applicable if the payment frequency period is 'ADHO'. If payment frequency period is 'EXPI', then the payment frequency period multiplier is 1. If the payment frequency is intraday, then the payment frequency period is 'DAIL' and the payment frequency multiplier is 0."]
        [ruleReference for periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier FixedRateOrCouponPaymentFrequencyPeriodMultiplierLeg1]

        [label for periodicPayment -> floatingRateIdentifier "2.83 - Identifier of the floating rate of leg 1"]
        [regulatoryReference for periodicPayment -> floatingRateIdentifier FCA UKEMIR Trade table "2" dataElement "83" field "2.83 - Identifier of the floating rate of leg 1"
            provision "Where applicable: an identifier of the interest rates used which are reset at predetermined intervals by reference to a market reference rate."]
        [ruleReference for periodicPayment -> floatingRateIdentifier IdentifierOfFloatingRateOfLeg1]

        [label for periodicPayment -> floatingRateIndicator "2.84 Indicator of the floating rate of leg 1"]
        [regulatoryReference for periodicPayment -> floatingRateIndicator FCA UKEMIR Trade table "2" dataElement "84" field "Indicator of the floating rate of leg 1"
            provision "An indication of the interest rate, where available."]
        [ruleReference for periodicPayment -> floatingRateIndicator IndicatorOfTheFloatingRateOfLeg1]

        [label for periodicPayment -> nameOfTheFloatingRate "2.85 Name of the Floating Rate of Leg 1"]
        [regulatoryReference for periodicPayment -> nameOfTheFloatingRate FCA UKEMIR Trade table "2" dataElement "85" field "Name of the Floating Rate of Leg 1"
            provision "The full name of the interest rate as assigned by the index provider."]
        [ruleReference for periodicPayment -> nameOfTheFloatingRate NameOfTheFloatingRateOfLeg1]

        [label for periodicPayment -> floatingRateDayCountConvention "2.86 Floating rate day count convention of leg 1"]
        [regulatoryReference for periodicPayment -> floatingRateDayCountConvention FCA UKEMIR Trade table "2" dataElement "86" field "Floating rate day count convention of leg 1"
            provision "Where applicable: day count convention (often also referred to as day count fraction or day count basis or day count method) that determines how interest payments for the floating rate of leg 1 are calculated. It is used to compute the year fraction of the calculation period, and indicates the number of days in the calculation period divided by the number of days in the year."]
        [ruleReference for periodicPayment -> floatingRateDayCountConvention FloatingRateDayCountConventionOfLeg1]

        [label for periodicPayment -> floatingRatePaymentFrequencyPeriod "2.87 Floating rate payment frequency period of leg 1"]
        [regulatoryReference for periodicPayment -> floatingRatePaymentFrequencyPeriod FCA UKEMIR Trade table "2" dataElement "87" field "Floating rate payment frequency period of leg 1"
            provision "Where applicable: time unit associated with the frequency of payments, e.g. day, week, month, year or term of the stream for the floating rate of leg 1."]
        [ruleReference for periodicPayment -> floatingRatePaymentFrequencyPeriod FloatingRatePaymentFrequencyPeriodOfLeg1]

        [label for periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier "2.88 Floating rate payment frequency period multiplier of leg 1"]
        [regulatoryReference for periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier FCA UKEMIR Trade table "2" dataElement "88" field "Floating rate payment frequency period multiplier of leg 1"
            provision "Where applicable: number of time units (as expressed by the payment frequency period) that determines the frequency at which periodic payment dates occur for the floating rate of leg 1. For example, a transaction with payments occurring every two months is represented with a payment frequency period of 'MNTH' (monthly) and a payment frequency period multiplier of 2. This data element is not applicable if the payment frequency period is 'ADHO'. If payment frequency period is 'EXPI', then the payment frequency period multiplier is 1. If the payment frequency is intraday, then the payment frequency period is 'DAIL' and the payment frequency multiplier is 0."]
        [ruleReference for periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier FloatingRatePaymentFrequencyPeriodMultiplierOfLeg1]

        [label for periodicPayment -> floatingRateReferencePeriod "2.89 Floating rate reference period of leg 1 - time period"]
        [regulatoryReference for periodicPayment -> floatingRateReferencePeriod FCA UKEMIR Trade table "2" dataElement "89" field "Floating rate reference period of leg 1 - time period"
            provision "Time period describing the reference period for the floating rate of leg 1."]
        [regulatoryReference for periodicPayment -> floatingRateReferencePeriod ISDA PeerReviewGroup date "20231115"
            provision "The codes ADHO and EXPI are not supported on the basis that pertinent business scenarios remain unclear for these values and it has not been possible to elect the relevant logic. Further enhancements will be addressed once clear guidance or examples come forth."]
        [ruleReference for periodicPayment -> floatingRateReferencePeriod FloatingRateReferencePeriodOfLeg1TimePeriod]

        [label for periodicPayment -> floatingRateReferencePeriodMultiplier "2.90 Floating rate reference period of leg 1 - multiplier"]
        [regulatoryReference for periodicPayment -> floatingRateReferencePeriodMultiplier FCA UKEMIR Trade table "2" dataElement "90" field "Floating rate reference period of leg 1 - multiplier"
            provision "Multiplier of the time period describing the reference period for the floating rate of leg 1."]
        [ruleReference for periodicPayment -> floatingRateReferencePeriodMultiplier FloatingRateReferencePeriodOfLeg1Multiplier]

        [label for periodicPayment -> floatingRateResetFrequencyPeriod "2.91 Floating rate reset frequency period of Leg 1"]
        [regulatoryReference for periodicPayment -> floatingRateResetFrequencyPeriod FCA UKEMIR Trade table "2" dataElement "91" field "Floating rate reset frequency period of leg 1"
            provision "Where applicable: time unit associated with the frequency of payments resets, e.g. day, week, month, year or term of the stream for the floating rate of leg 1."]
        [regulatoryReference for periodicPayment -> floatingRateResetFrequencyPeriod ISDA PeerReviewGroup date "20230427" date "20230512"
            provision "This is not a CDE field, but common between CFTC and EMIR. This field should be populated for Interest Rate products only under EMIR."]
        [ruleReference for periodicPayment -> floatingRateResetFrequencyPeriod FloatingRateResetFrequencyPeriodOfLeg1]

        [label for periodicPayment -> floatingRateResetFrequencyMultiplier "2.92 Floating rate reset frequency multiplier of leg 1"]
        [regulatoryReference for periodicPayment -> floatingRateResetFrequencyMultiplier FCA UKEMIR table "2" dataElement "92" field "Floating rate reset frequency multiplier of leg 1"
            provision "Where applicable: number of time units (as expressed by the payment frequency period) that determines the frequency at which periodic payment resets dates occur for the floating rate of leg 1. For example, a transaction with payments occurring every two months is represented with a payment frequency period of 'MNTH' (monthly) and a payment frequency period multiplier of 2. This data element is not applicable if the payment frequency period is 'ADHO'. If payment frequency period is 'EXPI', then the payment frequency period multiplier is 1. If the payment frequency is intraday, then the payment frequency period is 'DAIL' and the payment frequency multiplier is 0."]
        [regulatoryReference for periodicPayment -> floatingRateResetFrequencyMultiplier ISDA PeerReviewGroup date "20230427" date "20230512"
            provision "This is not a CDE field, but common between CFTC and EMIR. This field should be populated for Interest Rate products only under EMIR."]
        [ruleReference for periodicPayment -> floatingRateResetFrequencyMultiplier FloatingRateResetFrequencyMultiplierOfLeg1]
    override leg2 common.CommonLeg (0..1)
        [label for notionalAmount "2.64 Notional Amount 2"]
        [regulatoryReference for notionalAmount FCA UKEMIR Trade table "2" dataElement "64" field "Notional amount of leg 2"
            provision "Where applicable, notional amount of leg 2 as referred to in Article 7 of the FCA's Technical Standards. "]
        [regulatoryReference for notionalAmount FCA UKEMIR article "5" paragraph "2"
            provision "The initial report of a derivative contract whose notional amount varies over time shall specify the notional amount as applicable at the date of conclusion of the derivative contract and the notional amount schedule. When reporting the notional amount schedule, counterparties shall indicate: (i) the unadjusted date on which the associated notional amount becomes effective; (ii) the unadjusted end date of the notional amount; and (iii) the notional amount which becomes effective on the associated unadjusted effective date."]
        [ruleReference for notionalAmount NotionalAmountOfLeg2]

        [label for notionalCurrency  "2.65 Notional Currency 2"]
        [regulatoryReference for notionalCurrency FCA UKEMIR Trade table "2" dataElement "65" field "Notional currency 2"
            provision "Where applicable: the currency in which the notional amount of leg 2 is denominated. "]
        [ruleReference for notionalCurrency  NotionalCurrency2]
        
        [label for totalNotionalQuantity "2.69 Total notional quantity-Leg 2"]
        [regulatoryReference for totalNotionalQuantity FCA UKEMIR Trade table "2" dataElement "69" field "Total notional quantity of leg 2"
            provision "Aggregate Notional quantity of the underlying asset of leg 2 for the term of the transaction. Where the total notional quantity is not known when a new transaction is reported, the total notional quantity is updated as it becomes available."]
        [ruleReference for totalNotionalQuantity TotalNotionalQuantityOfLeg2]

        [label for settlementCurrency "2.20 Settlement Currency 2"]
        [regulatoryReference for settlementCurrency FCA UKEMIR Trade table "2" dataElement "20" field "Settlement currency 2"
            provision "Currency for the cash settlement of the transaction when applicable. For multicurrency products that do not net, the settlement currency of the leg 2. This data element is not applicable for physically settled products (e.g. physically settled swaptions)."]
        [regulatoryReference for settlementCurrency ISDA PeerReviewGroup
            provision "In the case where settlement currency is not provided, model does not infer cash vs. physical settlement based on the product and then extract the notional currency as settlement currency. The conclusion at Peer Review was that firms should fill out the settlement currency field if it is reportable and DRR should not infer it from the notional."]
        [regulatoryReference for settlementCurrency ISDA EMEADataAndReporting date "20230417"
            provision "As per ESMA communication to ISDA by ESMA and Reviewed in ISDA Data and Reporting EMEA Working Group - Settlement Currency 2 will not be populated based on ESMA response to question raised by ISDA: your observation is correct, the settlement currency 2 would in principle be applicable in the case of physically settled FX derivatives. However, in line with CDE TG, the settlement currencies were considered not applicable for physically settled derivatives. This may require further discussion with the regulators regarding potential changes to the CDE TG. At this stage we agree that the field is not expected to be populated"]

        [label for fixedRate "2.95 Fixed Rate of leg 2"]
        [regulatoryReference for fixedRate FCA UKEMIR Trade table "2" dataElement "95" field "Fixed rate of leg 2"
            provision "An indication of the fixed rate leg 2 used, where applicable."]
        [regulatoryReference for fixedRate ISDA TechnicalExecutionGroup date "20240418"
            provision "Credit products are implicitly filtered out by calling the function InterestRateLeg2, so no explicit filtering is needed."]
        [ruleReference for fixedRate FixedRateOfLeg2]
        [regulatoryReference for spread FCA UKEMIR table "2" dataElement "109" field "Spread of Leg 2"
            provision "An indication of the spread of leg 2, where applicable: for OTC derivative transactions with periodic payments (e.g. interest rate fixed/float swaps, interest rate basis swaps, commodity swaps), 
                - spread on the individual floating leg(s) index reference price, in the case where there is a spread on a floating leg(s). 
                - difference between the reference prices of the two floating leg indexes."]

        [label for spread -> monetary "2.109 Spread of Leg 2 (Monetary)"]
        [label for spread -> percentage "2.109 Spread of Leg 2 (Percentage)"]
        [label for spread -> basis "2.109 Spread of Leg 2 (Basis)"]
        [ruleReference for spread SpreadOfLeg2]

        [label for spreadNotation "2.109 Spread of Leg 2 Notation (Non Reportable)"]
        [ruleReference  for spreadNotation SpreadOfLeg2Notation]

        [label for spreadCurrency "2.110 Spread Currency of Leg 2"]
        [regulatoryReference for spreadCurrency FCA UKEMIR Trade table "2" dataElement "110" field "Spread Currency of Leg 2"
            provision "Where applicable: currency in which the spread of leg 2 is denominated. This data element is only applicable if spread is expressed as monetary amount."]
        [ruleReference for spreadCurrency SpreadCurrencyOfLeg2]
        [regulatoryReference for notionalAmountSchedule FCA UKEMIR Trade table "2" dataElement "66-68" field "Notional Amount Schedule"
            provision "Fields 66-68 are repeatable and shall be populated in the case of derivatives involving notional amount schedules"]

        [label for notionalAmountSchedule -> effectiveDate "2.66/2.68-$ 2.66 Effective date of the notional amount of leg 2"]
        [regulatoryReference for notionalAmountSchedule -> effectiveDate FCA UKEMIR Trade table "2" dataElement "66" field "Effective date of the notional amount of leg 2"
            provision "Unadjusted date on which the associated notional amount of leg 2 becomes effective."]

        [label for notionalAmountSchedule -> endDate "2.66/2.68-$ 2.67 End date of the notional amount of leg 2"]
        [regulatoryReference for notionalAmountSchedule -> endDate FCA UKEMIR Trade table "2" dataElement "67" field "End date of the notional amount of leg 2"
            provision "Unadjusted end date of the notional amount of leg 2 (not applicable if the unadjusted end date of a given schedules period is back-to-back with the unadjusted effective date of the subsequent period)."]
        [regulatoryReference for notionalAmountSchedule -> endDate ISDA TechnicalExecutionGroup date "20231128"
            provision "This field remained unmodelled as WG believe that ESMA's update on 23rd September regarding the new conditionality for schedule date fields is incorrect."] 

        [label for notionalAmountSchedule -> value "2.66/2.68-$ 2.68 Notional amount in effect on associated effective date of leg 2"]
        [regulatoryReference for notionalAmountSchedule -> value FCA UKEMIR Trade table "2" dataElement "68" field "Notional amount in effect on associated effective date of leg 2"
            provision "Notional amount of leg 2 which becomes effective on the associated unadjusted effective date."]
        
        [ruleReference for notionalAmountSchedule NotionalAmountScheduleLeg2]
        [regulatoryReference for notionalQuantitySchedule FCA UKEMIR Trade table "2" dataElement "70-72" field "Notional Quantity Schedule"
            provision "Fields 70-72 are repeatable and shall be populated in the case of derivatives involving notional quantity schedules"]

        [label for notionalQuantitySchedule -> effectiveDate  "2.70/2.72-$ 2.70 Effective date of the notional quantity of leg 2"]
        [regulatoryReference for notionalQuantitySchedule -> effectiveDate FCA UKEMIR Trade table "2" dataElement "70" field "Effective date of the notional quantity of leg 2"
            provision "Unadjusted date on which the associated notional quantity of leg 2 becomes effective."]

        [label for notionalQuantitySchedule -> endDate "2.70/2.72-$ 2.71 End date of the notional quantity of leg 2"]
        [regulatoryReference for notionalQuantitySchedule -> endDate FCA UKEMIR Trade table "2" dataElement "71" field "End date of the notional quantity of leg 2"
            provision "Unadjusted end date of the notional quantity of leg 2 (not applicable if the unadjusted end date of a given schedules period is back-to-back with the unadjusted effective date of the subsequent period)."]

        [label for notionalQuantitySchedule -> value "2.70/2.72-$ 2.72 Notional quantity in effect on associated effective date of leg 2"]
        [regulatoryReference for notionalQuantitySchedule -> value FCA UKEMIR Trade table "2" dataElement "72" field "Notional quantity in effect on associated effective date of leg 2"
            provision "Notional quantity of leg 2 which becomes effective on the associated unadjusted effective date."]

        [ruleReference for notionalQuantitySchedule NotionalQuantityScheduleLeg2]
        [regulatoryReference for periodicPayment ISDA TechnicalExecutionGroup date "20240418"
            provision "Credit products are implicitly filtered out by calling the function InterestRateLeg2, so no explicit filtering is needed."]
        
        [label for direction2 "1.19 Direction of leg 2"]
        [regulatoryReference for direction2 FCA UKEMIR Trade table "1" dataElement "19" field "Direction of leg 2"
            provision "Indicator of whether the counterparty 1 is the payer or the receiver of leg 2 as determined at the date the derivative was concluded."]
        [ruleReference for direction2 DirectionOfLeg2]

        [label for periodicPayment -> fixedRateDayCountConvention "2.96 Fixed rate day count convention leg 2"]
        [regulatoryReference for periodicPayment -> fixedRateDayCountConvention FCA UKEMIR Trade table "2" dataElement "96" field "Fixed rate day count convention leg 2"
            provision "Where applicable: day count convention (often also referred to as day count fraction or day count basis or day count method) that determines how interest payments are calculated. It is used to compute the year fraction of the calculation period, and indicates the number of days in the calculation period divided by the number of days in the year."]
        [ruleReference for periodicPayment -> fixedRateDayCountConvention FixedRateDayCountConventionLeg2]

        [label for periodicPayment -> fixedRatePaymentFrequencyPeriod "2.97 Fixed rate payment frequency period leg 2"]
        [regulatoryReference for periodicPayment -> fixedRatePaymentFrequencyPeriod FCA UKEMIR Trade table "2" dataElement "97" field "Fixed rate payment frequency period leg 2"
            provision "Where applicable: time unit associated with the frequency of payments, e.g. day, week, month, year or term of the stream for the fixed rate of leg 2."]
        [ruleReference for periodicPayment -> fixedRatePaymentFrequencyPeriod FixedRatePaymentFrequencyPeriodLeg2]

        [label for periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier "2.98 Fixed rate payment frequency period multiplier of leg 2"]
        [regulatoryReference for periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier FCA UKEMIR table "2" dataElement "98" field "Fixed rate payment frequency period multiplier of leg 2"
            provision "Where applicable: number of time units (as expressed by the payment frequency period) that determines the frequency at which periodic payment dates occur for the fixed rate of leg 2. For example, a transaction with payments occurring every two months is represented with a payment frequency period of 'MNTH' (monthly) and a payment frequency period multiplier of 2. This data element is not applicable if the payment frequency period is 'ADHO'. If payment frequency period is 'EXPI', then the payment frequency period multiplier is 1. If the payment frequency is intraday, then the payment frequency period is 'DAIL' and the payment frequency multiplier is 0."]
        [ruleReference for periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier FixedRatePaymentFrequencyPeriodMultiplierLeg2]

        [label for periodicPayment -> floatingRateIdentifier "2.99 - Identifier of the floating rate of leg 2"]
        [regulatoryReference for periodicPayment -> floatingRateIdentifier FCA UKEMIR Trade table "2" dataElement "99" field "2.99 - Identifier of the floating rate of leg 2"
            provision "Where applicable: an identifier of the interest rates used which are reset at predetermined intervals by reference to a market reference rate."]
        [ruleReference for periodicPayment -> floatingRateIdentifier IdentifierOfFloatingRateOfLeg2]

        [label for periodicPayment -> floatingRateIndicator "2.100 Indicator of the floating rate of leg 2"]
        [regulatoryReference for periodicPayment -> floatingRateIndicator FCA UKEMIR Trade table "2" dataElement "100" field "Indicator of the floating rate of leg 2"
            provision "An indication of the interest rate, where available."]
        [ruleReference for periodicPayment -> floatingRateIndicator IndicatorOfTheFloatingRateOfLeg2]

        [label for periodicPayment -> nameOfTheFloatingRate "2.101 Name of the Floating Rate of Leg 2"]
        [regulatoryReference for periodicPayment -> nameOfTheFloatingRate FCA UKEMIR Trade table "2" dataElement "101" field "Name of the Floating Rate of Leg 2"
            provision "The full name of the interest rate as assigned by the index provider."]
        [docReference for periodicPayment -> nameOfTheFloatingRate FCA UKEMIR Guidelines paragraph "416"
            provision "When reporting FRAs the counterparties should pay attention to the following: a. The underlying rate should be reported in the fields pertaining to the underlying section (fields 2.13-2.16)."]
        [ruleReference for periodicPayment -> nameOfTheFloatingRate NameOfTheFloatingRateOfLeg2]

        [label for periodicPayment -> floatingRateDayCountConvention "2.102 Floating rate day count convention of leg 2"]
        [regulatoryReference for periodicPayment -> floatingRateDayCountConvention FCA UKEMIR Trade table "2" dataElement "102" field "Floating rate day count convention of leg 2"
            provision "Where applicable: day count convention (often also referred to as day count fraction or day count basis or day count method) that determines how interest payments for the floating rate of leg 2 are calculated. It is used to compute the year fraction of the calculation period, and indicates the number of days in the calculation period divided by the number of days in the year."]
        [ruleReference for periodicPayment -> floatingRateDayCountConvention FloatingRateDayCountConventionOfLeg2]

        [label for periodicPayment -> floatingRatePaymentFrequencyPeriod "2.103 Floating rate payment frequency period of leg 2"]
        [regulatoryReference for periodicPayment -> floatingRatePaymentFrequencyPeriod FCA UKEMIR Trade table "2" dataElement "103" field "Floating rate payment frequency period of leg 2"
            provision "Where applicable: time unit associated with the frequency of payments, e.g. day, week, month, year or term of the stream for the floating rate of leg 2."]
        [ruleReference for periodicPayment -> floatingRatePaymentFrequencyPeriod FloatingRatePaymentFrequencyPeriodOfLeg2]
        
        [label for periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier "2.104 Floating rate payment frequency period multiplier of leg 2"]
        [regulatoryReference for periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier FCA UKEMIR Trade table "2" dataElement "104" field "Floating rate payment frequency period multiplier of leg 2"
            provision "Where applicable: number of time units (as expressed by the payment frequency period) that determines the frequency at which periodic payment dates occur for the floating rate of leg 2. For example, a transaction with payments occurring every two months is represented with a payment frequency period of 'MNTH' (monthly) and a payment frequency period multiplier of 2. This data element is not applicable if the payment frequency period is 'ADHO'. If payment frequency period is 'EXPI', then the payment frequency period multiplier is 1. If the payment frequency is intraday, then the payment frequency period is 'DAIL' and the payment frequency multiplier is 0."]
        [ruleReference for periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier FloatingRatePaymentFrequencyPeriodMultiplierOfLeg2]

        [label for periodicPayment -> floatingRateReferencePeriod "2.105 Floating rate reference period of leg 2 - time period"]
        [regulatoryReference for periodicPayment -> floatingRateReferencePeriod FCA UKEMIR Trade table "2" dataElement "105" field "Floating rate reference period of leg 2 - time period"
            provision "Time period describing the reference period for the floating rate of leg 2."]
        [regulatoryReference for periodicPayment -> floatingRateReferencePeriod ISDA TechnicalExecutionGroup date "20231115"
            provision "The codes ADHO and EXPI are not supported on the basis that pertinent business scenarios remain unclear for these values and it has not been possible to elect the relevant logic. Further enhancements will be addressed once clear guidance or examples come forth."]
        [ruleReference for periodicPayment -> floatingRateReferencePeriod FloatingRateReferencePeriodOfLeg2TimePeriod]

        [label for periodicPayment -> floatingRateReferencePeriodMultiplier "2.106 Floating rate reference period of leg 2 - multiplier"]
        [regulatoryReference for periodicPayment -> floatingRateReferencePeriodMultiplier FCA UKEMIR Trade table "2" dataElement "106" field "Floating rate reference period of leg 2 - multiplier"
            provision "Multiplier of the time period describing the reference period for the floating rate of leg 2."]
        [ruleReference for periodicPayment -> floatingRateReferencePeriodMultiplier FloatingRateReferencePeriodOfLeg2Multiplier]

        [label for periodicPayment -> floatingRateResetFrequencyPeriod "2.107 Floating rate reset frequency period of Leg 2"]
        [regulatoryReference for periodicPayment -> floatingRateResetFrequencyPeriod FCA UKEMIR Trade table "2" dataElement "107" field "Floating rate reset frequency period of leg 2"
            provision "Where applicable: time unit associated with the frequency of payments resets, e.g. day, week, month, year or term of the stream for the floating rate of leg 2."]
        [regulatoryReference for periodicPayment -> floatingRateResetFrequencyPeriod ISDA PeerReviewGroup date "20230427" date "20230512"
            provision "This is not a CDE field, but common between CFTC and EMIR. This field should be populated for Interest Rate products only under EMIR."]
        [ruleReference for periodicPayment -> floatingRateResetFrequencyPeriod FloatingRateResetFrequencyPeriodOfLeg2]

        [label for periodicPayment -> floatingRateResetFrequencyMultiplier "2.108 Floating rate reset frequency multiplier of leg 2"]
        [regulatoryReference for periodicPayment -> floatingRateResetFrequencyMultiplier FCA UKEMIR Trade table "2" dataElement "108" field "Floating rate reset frequency multiplier of leg 2"
            provision "Where applicable: number of time units (as expressed by the payment frequency period) that determines the frequency at which periodic payment resets dates occur for the floating rate of leg 2. For example, a transaction with payments occurring every two months is represented with a payment frequency period of 'MNTH' (monthly) and a payment frequency period multiplier of 2. This data element is not applicable if the payment frequency period is 'ADHO'. If payment frequency period is 'EXPI', then the payment frequency period multiplier is 1. If the payment frequency is intraday, then the payment frequency period is 'DAIL' and the payment frequency multiplier is 0."]
        [regulatoryReference for periodicPayment -> floatingRateResetFrequencyMultiplier ISDA PeerReviewGroup date "20230427" date "20230512"
            provision "This is not a CDE field, but common between CFTC and EMIR. This field should be populated for Interest Rate products only under EMIR."]
        [ruleReference for periodicPayment -> floatingRateResetFrequencyMultiplier FloatingRateResetFrequencyMultiplierOfLeg2]
    override executionAgentCounterparty1 LEIIdentifier (0..1)
        [label "1.21 Execution Agent Reporting Party"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "21" field "ExecutionAgent"
            provision "LEI identifying the entity that executed the transaction on behalf of the counterparty, and binds the counterparty to the terms of the transaction, but is not a broker."]
        [ruleReference ExecutionAgentReportingParty]
    override executionAgentCounterparty2 LEIIdentifier (0..1)
        [label "1.21 Execution Agent Reporting Counterparty"]
        [regulatoryReference FCA UKEMIR Trade table "1" dataElement "21" field "ExecutionAgent"
            provision "LEI identifying the entity that executed the transaction on behalf of the counterparty, and binds the counterparty to the terms of the transaction, but is not a broker."]
        [ruleReference ExecutionAgentReportingCounterparty]
    override nonReportable FCAUKEMIRNonReportable (0..1)
        [ruleReference for preUpiData empty]
        [ruleReference for postUpiData empty]

//Validation Rules
    condition UKEMIR_VR_1001_01: <"Reporting timestamp">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "1" validationRule "Transaction"
      provision "Common input format: YYYY-MM-DDThh:MM:SSZ"]
        // Platform upgrade to support Date Format
        True

    condition UKEMIR_VR_1001_02: <"Reporting timestamp">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "1" validationRule "Transaction"
      provision "The reporting timestamp should be equal or earlier than the timestamp of the receipt of the report by the TR."]
        // This field is set to True as this data is known post submission.
        True

    condition UKEMIR_VR_1001_03: <"Reporting timestamp">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "1" validationRule "Transaction"
      provision "The date part of the timestamp cannot be earlier than the day preceding the date of the receipt of the report by the TR.
      //The receipt of the report should be understood as the moment the report enters a TRs system."]
        // This field is set to True as this data is known post submission.
        True

    condition UKEMIR_VR_1001_04: <"Reporting timestamp">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "1" validationRule "Transaction"
      provision "The reporting timestamp should be equal or later than the execution timestamp reported in the field 2.42."]
        reportingTimestamp >= executionTimestamp

    condition UKEMIR_VR_1001_05: <"Reporting timestamp">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "1" validationRule "Transaction"
      provision "The reporting timestamp should be equal or later than 2024-09-30"]
        CompareDateTo(reportingTimestamp -> date, 2024, 9, 30) >= 0

    condition UKEMIR_VR_1002_01: <"Report submitting entity ID - Condition 1">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "2" validationRule "Transaction"
      provision "For action types 'NEWT', 'MODI', 'VALU', 'CORR', 'REVI' and 'POSC': this field shall contain a valid LEI included in the GLEIF database maintained by the Central Operating Unit."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then GetOrFetchLeiData(
                nonReportable -> enrichment -> leiData,
                reportSubmittingEntityID
            )
            exists // where "valid" is understood as existing in the GLEIF

    condition UKEMIR_VR_1002_02: <"Report submitting entity ID - Condition 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "2" validationRule "Transaction"
      provision "The status of the LEI for all the above action types shall be 'Issued', 'Lapsed', 'Pending transfer' or 'Pending archival'.
      Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then // LeiRegistrationStatusIsValid cannot be used because no check on the date here; there may not be that many use cases for it actually
            [LeiRegistrationStatusEnum -> Issued, LeiRegistrationStatusEnum -> Lapsed, LeiRegistrationStatusEnum -> PendingTransfer, LeiRegistrationStatusEnum -> PendingArchival] contains GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    reportSubmittingEntityID
                ) -> registrationStatus

    condition UKEMIR_VR_1002_03: <"Report submitting entity ID - Condition 3">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "2" validationRule "Transaction"
      provision "For action types 'TERM' and 'EROR': This field shall contain an LEI included in the GLEIF database maintained by the Central Operating Unit, irrespective of the registration status of that LEI."]
        if [ActionTypeEnum -> TERM, ActionTypeEnum -> EROR] any = actionType
        then GetOrFetchLeiData(
                nonReportable -> enrichment -> leiData,
                reportSubmittingEntityID
            )
            exists // where "valid" is understood as existing in the GLEIF

    condition UKEMIR_VR_1002_04: <"Report submitting entity ID - Condition 4">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "2" validationRule "Transaction"
      provision "The LEI shall pertain to a legal entity and not a branch."]
        GetOrFetchLeiData(nonReportable -> enrichment -> leiData, reportSubmittingEntityID) -> entityCategory <> LeiCategoryEnum -> Branch

    condition UKEMIR_VR_1003_01: <"Entity responsible for reporting - Condition 1">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "3" validationRule "Transaction"
      provision "If field 2.41 is not populated with a MIC code of a trading venue that was a regulated market or a third-country market considered as equivalent to a regulated market, this field shall be populated."]
        if (GetOrFetchMicData(nonReportable -> enrichment -> micData, venueOfExecution)
            extract
                marketCategory <> MicMarketCategoryEnum -> RMKT
                    or IsFCAThirdCountryEquivalentMarket(mic) = False)
        then entityResponsibleForReporting exists

    condition UKEMIR_VR_1003_02: <"Entity responsible for reporting">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "3" validationRule "Transaction"
      provision "When populated, it shall contain for action types 'NEWT', 'MODI', 'VALU', 'CORR' and 'POSC': this field shall contain a valid LEI included in the GLEIF database maintained by the Central Operating Unit."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> POSC] any = actionType
        then GetOrFetchLeiData(
                nonReportable -> enrichment -> leiData,
                entityResponsibleForReporting
            )
            exists // where "valid" is understood as existing in the GLEIF database

    condition UKEMIR_VR_1003_03: <"Entity responsible for reporting">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "3" validationRule "Transaction"
      provision "When populated, it shall contain the status of the LEI for all the above action types shall be 'Issued', 'Pending transfer' or 'Pending archival'.
        Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp.
        Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> POSC] any = actionType
        then LeiRegistrationStatusIsValidForStatus(
                    nonReportable -> enrichment -> leiData,
                    entityResponsibleForReporting,
                    eventDate,
                    reportingTimestamp -> date,
                    [LeiRegistrationStatusEnum -> Issued, LeiRegistrationStatusEnum -> PendingTransfer, LeiRegistrationStatusEnum -> PendingArchival]
                )

    condition UKEMIR_VR_1003_04: <"Entity responsible for reporting">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "3" validationRule "Transaction"
      provision "When populated, it shall contain for action types 'TERM', 'REVI' and 'EROR': this field shall contain an LEI included in the GLEIF database maintained by the Central Operating Unit, irrespective of the registration status of that LEI."]
        if [ActionTypeEnum -> TERM, ActionTypeEnum -> REVI, ActionTypeEnum -> EROR] any = actionType
        then GetOrFetchLeiData(
                nonReportable -> enrichment -> leiData,
                entityResponsibleForReporting
            )
            exists

    condition UKEMIR_VR_1003_05: <"Entity responsible for reporting">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "3" validationRule "Transaction"
      provision "When populated, it shall contain: the LEI shall pertain to a legal entity and not a branch."]
        if entityResponsibleForReporting exists
        then (GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    entityResponsibleForReporting
                ) -> entityStatus exists
                and GetOrFetchLeiData(
                        nonReportable -> enrichment -> leiData,
                        entityResponsibleForReporting
                    ) -> entityCategory <> LeiCategoryEnum -> Branch)

    condition UKEMIR_VR_1004_01: <"Counterparty 1 (Reporting counterparty) - Condition 1">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "4" validationRule "Transaction"
      provision "For action types 'NEWT', 'MODI', 'VALU', 'CORR' and 'POSC': this field shall contain a valid LEI included in the GLEIF database maintained by the Central Operating Unit."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> POSC] any = actionType
        then GetOrFetchLeiData(nonReportable -> enrichment -> leiData, counterparty1) exists // where "valid" is understood as existing in the GLEIF

    condition UKEMIR_VR_1004_02: <"Counterparty 1 (Reporting counterparty) - Condition 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "4" validationRule "Transaction"
      provision "The status of the LEI for all the above action types shall be 'Issued', 'Pending transfer' or 'Pending archival'.
Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp."]
    [docReference ISDA TechnicalExecutionGroup 
        provision "'above action types' means 'NEWT', 'MODI', 'VALU', 'CORR' and 'POSC'"]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> POSC] any = actionType
        then LeiRegistrationStatusIsValidForStatus(
                    nonReportable -> enrichment -> leiData,
                    counterparty1,
                    eventDate,
                    reportingTimestamp -> date,
                    [LeiRegistrationStatusEnum -> Issued, LeiRegistrationStatusEnum -> PendingTransfer, LeiRegistrationStatusEnum -> PendingArchival]
                )

    condition UKEMIR_VR_1004_03: <"Counterparty 1 (Reporting counterparty) - Condition 3">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "4" validationRule "Transaction"
      provision "For action types 'TERM' , 'REVI' and 'EROR': This field shall contain an LEI included in the GLEIF database maintained by the Central Operating Unit, irrespective of the registration status of that LEI."]
        if [ActionTypeEnum -> TERM, ActionTypeEnum -> REVI, ActionTypeEnum -> EROR] any = actionType
        then GetOrFetchLeiData(nonReportable -> enrichment -> leiData, counterparty1) exists // where "valid" is understood as existing in the GLEIF

    condition UKEMIR_VR_1004_04: <"Counterparty 1 (Reporting counterparty) - Condition 4">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "4" validationRule "Transaction"
      provision "The LEI shall pertain to a legal entity and not a branch."]
        GetOrFetchLeiData(nonReportable -> enrichment -> leiData, counterparty1) -> entityCategory <> LeiCategoryEnum -> Branch

    condition UKEMIR_VR_1004_05: <"Counterparty 1 (Reporting counterparty) - Condition 5">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "4" validationRule "Transaction"
      provision "The value populated in this field when the trade is reported for the first time, shall not be modified in the subsequent reports."]
    [docReference ISDA TechnicalExecutionGroup date "20230822"
        provision "DRR being stateless, this cannot be modelled"]
        True

    condition UKEMIR_VR_1005_01: <"Nature of the counterparty 1">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "5" validationRule "Transaction"
    provision "Shall contain only one of the following values: 'F', 'N', 'C' or 'O'. 1 alphabetical character."]
        if IsVRAllowedForActionType(actionType)
        then if [common.party.NatureOfCounterpartyEnum -> F, common.party.NatureOfCounterpartyEnum -> N, common.party.NatureOfCounterpartyEnum -> C, common.party.NatureOfCounterpartyEnum -> O] any = natureOfCounterparty1
            then True
            else False

    condition UKEMIR_VR_1006_01: <"Corporate sector of the counterparty 1">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "6" validationRule "Transaction"
      provision "If field 1.5 is populated with 'F', at least one code pertaining to the classification of the financial counterparties shall be provided."]
        if IsVRAllowedForActionType(actionType)
        then if natureOfCounterparty1 = F
            then corporateSectorOfTheCounterparty1
                extract (["INVF", "CDTI", "INUN", "UCIT", "ORPI", "AIFD", "CSDS"] any = item)
            then all = True

    condition UKEMIR_VR_1006_02: <"Corporate sector of the counterparty 1">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "6" validationRule "Transaction"
    provision "If field 1.5 is populated with 'N', at least one code pertaining to the classification of the non-financial counterparties shall be provided."]
        if IsVRAllowedForActionType(actionType)
        then if natureOfCounterparty1 = N
            then corporateSectorOfTheCounterparty1
                extract
                    (["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U"] any = item)
            then all = True

    condition UKEMIR_VR_1006_03: <"Corporate sector of the counterparty 1">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "6" validationRule "Transaction"
    provision "If field 1.5 is populated with 'C' or 'O', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [common.party.NatureOfCounterpartyEnum -> C, common.party.NatureOfCounterpartyEnum -> O] any = natureOfCounterparty1
            then corporateSectorOfTheCounterparty1 is absent

    condition UKEMIR_VR_1007_01: <"Clearing Threshold of counterparty 1">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "7" validationRule "Transaction"
    provision "If field 1.5 is populated with 'N' or 'F', this field shall be populated and shall contain only one of the following values: 'TRUE' or 'FALSE'."]
        if IsVRAllowedForActionType(actionType)
        then if [common.party.NatureOfCounterpartyEnum -> N, common.party.NatureOfCounterpartyEnum -> F] any = natureOfCounterparty1
            then clearingThresholdOfCounterparty1 exists

    condition UKEMIR_VR_1007_02: <"Clearing Threshold of counterparty 1">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "7" validationRule "Transaction"
      provision "If field 1.5 is populated with 'C' or 'O', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [common.party.NatureOfCounterpartyEnum -> C, common.party.NatureOfCounterpartyEnum -> O] any = natureOfCounterparty1
            then clearingThresholdOfCounterparty1 is absent

    condition UKEMIR_VR_1008_01: <"Counterparty 2 identifier type">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "8" validationRule "Transaction"
      provision "Shall only contain one of the following values: LEI (if this field is TRUE) or Natural Person Identifier (if this field is FALSE)."]
        counterparty2IdentifierType = True or counterparty2IdentifierType = False

    condition UKEMIR_VR_1008_02: <"Counterparty 2 identifier type">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "8" validationRule "Transaction"
      provision "The value populated in this field when the trade is reported for the first time, shall not be modified in the subsequent reports."]
        [regulatoryReference ISDA ISDAWorkingGroup date "unknown"
            provision "Not modelled. The condition cannot be executed in a stateless environment."]
        if True = False then True

    condition UKEMIR_VR_1009_01: <"Counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "If an LEI has been reported to identify Counterparty 2:
      For action types 'NEWT', 'MODI', 'VALU', 'CORR' and 'POSC': this field shall contain a
      valid LEI included in the GLEIF database maintained by the Central Operating Unit."]
        if counterparty2IdentifierType = True // LEI Reported
                and [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> POSC] any = actionType
        then GetOrFetchLeiData(nonReportable -> enrichment -> leiData, counterparty2) exists

    condition UKEMIR_VR_1009_02: <"Counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "If an LEI has been reported to identify Counterparty 2: The status of the LEI for all the above action types
       shall be 'Issued', 'Lapsed', 'Pending transfer'or 'Pending archival'. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp.
      Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp."]
        if counterparty2IdentifierType = True // LEI Reported
                and [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> POSC] any = actionType
        then LeiRegistrationStatusIsValid(
                    nonReportable -> enrichment -> leiData,
                    counterparty2,
                    eventDate,
                    reportingTimestamp -> date
                )

    condition UKEMIR_VR_1009_03: <"Counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "If an LEI has been reported to identify Counterparty 2: For action types 'TERM', 'REVI' and 'EROR': This field shall contain an LEI included in
      the GLEIF database maintained by the Central Operating Unit, irrespective of the registration status of that LEI."]
        if counterparty2IdentifierType = True // LEI Reported
                and [ActionTypeEnum -> TERM, ActionTypeEnum -> REVI, ActionTypeEnum -> EROR] any = actionType
        then GetOrFetchLeiData(nonReportable -> enrichment -> leiData, counterparty2) exists

    condition UKEMIR_VR_1009_04: <"Counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "The LEI shall pertain to a legal entity and not a branch. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. 
      Validation of the status should not be applied if 2.153 7. Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp."]
        [regulatoryReference ISDA ISDAWorkingGroup date "unknown"
            provision "UKEMIR_VR_1009_02 covers LEI status"]
        if counterparty2IdentifierType = True
        then (GetOrFetchLeiData(nonReportable -> enrichment -> leiData, counterparty2) -> entityStatus exists
                and GetOrFetchLeiData(nonReportable -> enrichment -> leiData, counterparty2) -> entityCategory <> LeiCategoryEnum -> Branch)

    condition UKEMIR_VR_1009_05: <"Counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "Fields 1.4 and 1.9 cannot contain the same LEI, unless this corresponds to the LEI of the CCP under field 2.33."]
        if centralCounterparty <> counterparty2
        then counterparty1 <> counterparty2

    condition UKEMIR_VR_1009_06: <"Counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "If a natural person identifier has been reported to identify Counterparty 2: this field shall contain up to 72 alphanumeric characters."]
        if counterparty2IdentifierType = False // Natural Person
        then counterparty2 exists

    condition UKEMIR_VR_1009_07: <"Counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "If a natural person identifier has been reported to identify Counterparty 2: For action types 'NEWT' and 'POSC', the first 20 characters of the
      client code should be equal to the LEI reported in the field 1.4 Counterparty 1 (Reporting counterparty)"]
        [regulatoryReference ISDA ISDAWorkingGroup date "unknown"
            provision "False check ensures LEI is descoped from this validation rule."]
        if counterparty2IdentifierType = False // Natural Person
                and [ActionTypeEnum -> NEWT, ActionTypeEnum -> POSC] any = actionType
                and counterparty2 exists
        then SubString(counterparty2, 1, 20) = counterparty1

    condition UKEMIR_VR_1009_08: <"Counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "9" validationRule "Transaction"
      provision "The value populated in this field when the trade is reported for the first time, shall not be modified in the subsequent reports."]
        [regulatoryReference ISDA ISDAWorkingGroup date "unknown"
            provision "Not modelled. The condition cannot be executed in a stateless environment."]
        True

    condition UKEMIR_VR_1010_01: <"Country of the counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "10" validationRule "Transaction"
      provision "If field 1.8 is populated with 'FALSE', this field shall be populated and shall contain 2 alphabetical characters"]
        if IsVRAllowedForActionType(actionType)
        then if counterparty2IdentifierType = False
            then countryOfTheCounterparty2 exists

    condition UKEMIR_VR_1010_02: <"Country of the counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "10" validationRule "Transaction"
      provision "If field 1.8 is populated with an LEI, this field shall be left blank"]
        if IsVRAllowedForActionType(actionType)
        then if counterparty2IdentifierType
            then countryOfTheCounterparty2 is absent

    condition UKEMIR_VR_1011_01: <"Nature of the counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "11" validationRule "Transaction"
      provision "If field 1.9 identifies counterparty 2 with an LEI, this field shall be populated and shall contain only one of the following values: 'F', 'N', 'C' or 'O'. 1 alphabetical character."]
        if IsVRAllowedForActionType(actionType)
        then if counterparty2IdentifierType // LEI
                and [common.party.NatureOfCounterpartyEnum -> F, common.party.NatureOfCounterpartyEnum -> N, common.party.NatureOfCounterpartyEnum -> C, common.party.NatureOfCounterpartyEnum -> O] any = natureOfCounterparty2
            then True

    condition UKEMIR_VR_1011_02: <"Nature of the counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "11" validationRule "Transaction"
      provision "If field 1.9 identifies counterparty 2 as a natural person, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if counterparty2IdentifierType = False // Natural Person
            then natureOfCounterparty2 is absent

    condition UKEMIR_VR_1012_01: <"Corporate sector of the counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "12" validationRule "Transaction"
      provision "If field 1.11 is populated with 'F', at least one code pertaining to the classification of the financial counterparties shall be provided."]
        if IsVRAllowedForActionType(actionType)
        then if natureOfCounterparty2 = F
            then corporateSectorOfTheCounterparty2
                extract (["INVF", "CDTI", "INUN", "UCIT", "ORPI", "AIFD", "CSDS"] any = item)
            then all = True

    condition UKEMIR_VR_1012_02: <"Corporate sector of the counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "12" validationRule "Transaction"
      provision "If field 1.11 is populated with 'N', at least one code pertaining to the classification of the non-financial counterparties shall be provided."]
        if IsVRAllowedForActionType(actionType)
        then if natureOfCounterparty2 = N
            then corporateSectorOfTheCounterparty2
                extract
                    (["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U"] any = item)
            then all = True

    condition UKEMIR_VR_1012_03: <"Corporate sector of the counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "12" validationRule "Transaction"
      provision "If field 1.11 is populated with 'C', 'O' or is blank, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [common.party.NatureOfCounterpartyEnum -> C, common.party.NatureOfCounterpartyEnum -> O] any = natureOfCounterparty2
                    or natureOfCounterparty2 is absent
            then corporateSectorOfTheCounterparty2 is absent

    condition UKEMIR_VR_1013_01: <"Clearing Threshold of counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "13" validationRule "Transaction"
      provision "If field 1.11 is populated with 'N' or 'F', this field shall be populated and shall contain only one of the following values: 'TRUE' or 'FALSE'."]
        if IsVRAllowedForActionType(actionType)
        then if [common.party.NatureOfCounterpartyEnum -> N, common.party.NatureOfCounterpartyEnum -> F] any = natureOfCounterparty2
            then clearingThresholdOfCounterparty2 exists

    condition UKEMIR_VR_1013_02: <"Clearing Threshold of counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "13" validationRule "Transaction"
      provision "If field 1.11 is populated with 'C' or 'O', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [common.party.NatureOfCounterpartyEnum -> C, common.party.NatureOfCounterpartyEnum -> O] any = natureOfCounterparty2
            then clearingThresholdOfCounterparty2 is absent

    condition UKEMIR_VR_1014_01: <"Reporting obligation of the counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "14" validationRule "Transaction"
      provision "This field shall contain only one of the following values: 'TRUE' or 'FALSE'."]
        if IsVRAllowedForActionType(actionType)
        then [True, False] any = reportingObligationOfTheCounterparty2

    condition UKEMIR_VR_1014_02: <"Reporting obligation of the counterparty 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "14" validationRule "Transaction"
      provision "If the field 1.8 is populated with 'FALSE', this field shall be populated with 'FALSE'."]
        if IsVRAllowedForActionType(actionType)
        then if counterparty2IdentifierType = False
            then reportingObligationOfTheCounterparty2 = False

    condition UKEMIR_VR_1015_01: <"Broker ID">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "15" validationRule "Transaction"
    provision "When populated, shall contain a valid LEI included in the GLEIF database maintained by the Central Operating Unit. The status of the LEI shall be 'Issued', 'Lapsed', 'Pending transfer' or 'Pending archival'. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in Reporting timestamp."]
        if IsVRAllowedForActionType(actionType)
        then if brokerID exists
            then LeiRegistrationStatusIsValid(
                        nonReportable -> enrichment -> leiData,
                        brokerID,
                        eventDate,
                        reportingTimestamp -> date
                    )

    condition UKEMIR_VR_1015_02: <"Broker ID">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "15" validationRule "Transaction"
    provision "The LEI shall pertain to a legal entity and not a branch."]
        if IsVRAllowedForActionType(actionType)
        then if GetOrFetchLeiData(nonReportable -> enrichment -> leiData, brokerID) exists
            then GetOrFetchLeiData(nonReportable -> enrichment -> leiData, brokerID) -> entityCategory <> LeiCategoryEnum -> Branch

    condition UKEMIR_VR_1016_01: <"Clearing member Condition 1">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "16" validationRule "Transaction"
    provision "If field 2.31 is populated with 'Y' this field shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if cleared = Y then clearingMember exists

    condition UKEMIR_VR_1016_02: <"Clearing member Condition 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "16" validationRule "Transaction"
    provision "When populated, shall contain a valid LEI included in the GLEIF database maintained by the Central Operating Unit."]
        if IsVRAllowedForActionType(actionType)
        then if clearingMember exists
            then GetOrFetchLeiData(nonReportable -> enrichment -> leiData, clearingMember) -> lei exists

    condition UKEMIR_VR_1016_03: <"Clearing member Condition 3">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "16" validationRule "Transaction"
    provision "The status of the LEI shall be 'Issued', 'Lapsed', 'Pending transfer' or 'Pending archival'.
    Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp.
    Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp. "]
        if IsVRAllowedForActionType(actionType)
        then if clearingMember exists
            then LeiRegistrationStatusIsValid(
                        nonReportable -> enrichment -> leiData,
                        clearingMember,
                        eventDate,
                        reportingTimestamp -> date
                    )

    condition UKEMIR_VR_1016_04: <"Clearing member Condition 4">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "16" validationRule "Transaction"
    provision "The LEI shall pertain to a legal entity and not a branch."]
        if IsVRAllowedForActionType(actionType)
        then if GetOrFetchLeiData(nonReportable -> enrichment -> leiData, clearingMember)
                exists
            then GetOrFetchLeiData(nonReportable -> enrichment -> leiData, clearingMember) -> entityCategory <> LeiCategoryEnum -> Branch

    condition UKEMIR_VR_1016_05: <"Clearing member Condition 5">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "16" validationRule "Transaction"
    provision "If field 2.31 is populated with 'N', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if cleared = N then clearingMember is absent

    condition UKEMIR_VR_1016_06: <"Clearing member Condition 6">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "16" validationRule "Transaction"
    provision "Fields 1.16 and 2.33 cannot contain the same LEI"]
        if IsVRAllowedForActionType(actionType)
        then clearingMember <> centralCounterparty

    condition UKEMIR_VR_1016_07: <"Clearing member Condition 7">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "16" validationRule "Transaction"
        provision "The LEI shall not pertain to an authorised or registered CCP."]
    [regulatoryReference ISDA PeerReviewGroup date "20231020"
        provision "Defaulted to 'True' due to the LEI API not featuring the CCP status."]
        True

    condition UKEMIR_VR_1017_01: <"Direction">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "17" validationRule "Transaction"
      provision "Either field 1.17 or both fields 1.18 and 1.19 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then (direction1 exists and leg1 -> direction2 is absent and leg2 -> direction2 is absent)
                or (direction1 is absent and leg1 -> direction2 exists and leg2 -> direction2 exists)

    condition UKEMIR_VR_1017_02: <"Direction">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "17" validationRule "Transaction"
      provision "If populated, this field shall contain only one of the following values: 'BYER' or 'SLLR'. 4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if direction1 exists
            then (direction1 = BYER or direction1 = SLLR)

    condition UKEMIR_VR_1018_01: <"Direction of leg 1">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "18" validationRule "Transaction"
      provision "Either field 1.17 or both fields 1.18 and 1.19 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then (direction1 exists and leg1 -> direction2 is absent and leg2 -> direction2 is absent)
                or (direction1 is absent and leg1 -> direction2 exists and leg2 -> direction2 exists)

    condition UKEMIR_VR_1018_02: <"Direction of leg 1">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "18" validationRule "Transaction"
      provision "If populated, this field shall contain only one of the following values: 'MAKE' or 'TAKE'. 4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> direction2 exists
            then (leg1 -> direction2 = MAKE or leg1 -> direction2 = TAKE)

    condition UKEMIR_VR_1018_03: <"Direction of leg 1">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "18" validationRule "Transaction"
      provision "If populated, this field shall contain a different value than field 1.19."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> direction2 exists
            then leg1 -> direction2 <> leg2 -> direction2

    condition UKEMIR_VR_1019_01: <"Direction of leg 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "19" validationRule "Transaction"
      provision "Either field 1.17 or both fields 1.18 and 1.19 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then (direction1 exists and leg1 -> direction2 is absent and leg2 -> direction2 is absent)
                or (direction1 is absent and leg1 -> direction2 exists and leg2 -> direction2 exists)

    condition UKEMIR_VR_1019_02: <"Direction of leg 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "19" validationRule "Transaction"
      provision "If populated, this field shall contain only one of the following values: 'MAKE' or 'TAKE'. 4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> direction2 exists
            then (leg2 -> direction2 = MAKE or leg2 -> direction2 = TAKE)

    condition UKEMIR_VR_1019_03: <"Direction of leg 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "19" validationRule "Transaction"
      provision "If populated, this field shall contain a different value than field 1.18."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> direction2 exists
            then leg2 -> direction2 <> leg1 -> direction2

//Section 1 - Parties to the derivative
    condition UKEMIR_VR_1020_01: <"Directly linked to commercial activity or treasury financing Condition 1">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "20" validationRule "Transaction" provision "If field 1.5 is populated with 'N' and field 2.154 (Level) is populated with 'TCTN', this field shall be populated and shall contain only one of the following values: 'TRUE' or 'FALSE'. "]
        if IsVRAllowedForActionType(actionType)
        then if natureOfCounterparty1 = N
            then if level = TCTN
                then directlyLinkedToCommercialActivityOrTreasuryFinancing exists

    condition UKEMIR_VR_1020_02: <"Directly linked to commercial activity or treasury financing Condition 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "20" validationRule "Transaction" provision "If field 1.5 is populated with 'F', 'C' or 'O' or if field 2.154 is populated with 'PSTN', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if level = PSTN
            then directlyLinkedToCommercialActivityOrTreasuryFinancing is absent
            else if level = TCTN
            then if [common.party.NatureOfCounterpartyEnum -> F, common.party.NatureOfCounterpartyEnum -> C, common.party.NatureOfCounterpartyEnum -> O] any = natureOfCounterparty1
                then directlyLinkedToCommercialActivityOrTreasuryFinancing is absent

    condition UKEMIR_VR_1021_01: <"Execution Agent Condition 1">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "21" validationRule "Transaction"
        provision "When populated, if two Execution Agents are reported or no Execution Agents are reported, Relationship Record must be omitted."]
        if (executionAgentCounterparty1 exists and executionAgentCounterparty2 exists)
                or (executionAgentCounterparty1 is absent and executionAgentCounterparty2 is absent)
        then nonReportable -> relationshipRecord is absent

    condition UKEMIR_VR_1021_02: <"Execution Agent Condition 2">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "21" validationRule "Transaction"
        provision "When populated, if only one Execution Agent is reported, Relationship Record must be populated once and only once."]
        if (executionAgentCounterparty1 exists and executionAgentCounterparty2 is absent)
                or (executionAgentCounterparty1 is absent and executionAgentCounterparty2 exists)
        then nonReportable -> relationshipRecord exists

    condition UKEMIR_VR_1021_03: <"Execution Agent Condition 3">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "21" validationRule "Transaction"
        provision "When populated, for action types 'NEWT', 'MODI', 'CORR' and 'POSC': every reported Execution Agent will be a valid LEI included in the GLEIF database maintained by the Central Operating Unit."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> POSC] any = actionType
        then ( // Only ExecutionAgent ReportingParty is present
            if executionAgentCounterparty1 exists and executionAgentCounterparty2 is absent
            then GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    executionAgentCounterparty1
                )
                exists
            // Only ExecutionAgent Counterparty is present
            else if executionAgentCounterparty2 exists
                    and executionAgentCounterparty1 is absent
            then GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    executionAgentCounterparty2
                )
                exists
            // Both Execution Agents are present
            else if executionAgentCounterparty1 exists
                    and executionAgentCounterparty2 exists
            then GetOrFetchLeiData(
                        nonReportable -> enrichment -> leiData,
                        executionAgentCounterparty1
                    )
                    exists
                    and GetOrFetchLeiData(
                            nonReportable -> enrichment -> leiData,
                            executionAgentCounterparty2
                        )
                        exists)

    condition UKEMIR_VR_1021_04: <"Execution Agent Condition 4">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "21" validationRule "Transaction"
        provision "When populated, the status of the LEI for all the above action types shall be 'Issued', 'Pending transfer' or 'Pending archival'. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp.  Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> POSC] any = actionType
        then ( // Only ExecutionAgent ReportingParty is present
            if executionAgentCounterparty1 exists and executionAgentCounterparty2 is absent
            then LeiRegistrationStatusIsValidForStatus(
                        nonReportable -> enrichment -> leiData,
                        executionAgentCounterparty1,
                        eventDate,
                        reportingTimestamp -> date,
                        [LeiRegistrationStatusEnum -> Issued, LeiRegistrationStatusEnum -> PendingTransfer, LeiRegistrationStatusEnum -> PendingArchival]
                    )
            // Only ExecutionAgent Counterparty is present
            else if executionAgentCounterparty2 exists
                    and executionAgentCounterparty1 is absent
            then LeiRegistrationStatusIsValidForStatus(
                        nonReportable -> enrichment -> leiData,
                        executionAgentCounterparty2,
                        eventDate,
                        reportingTimestamp -> date,
                        [LeiRegistrationStatusEnum -> Issued, LeiRegistrationStatusEnum -> PendingTransfer, LeiRegistrationStatusEnum -> PendingArchival]
                    )
            // Both Execution Agents are present
            else if executionAgentCounterparty1 exists
                    and executionAgentCounterparty2 exists
            then LeiRegistrationStatusIsValidForStatus(
                        nonReportable -> enrichment -> leiData,
                        executionAgentCounterparty2,
                        eventDate,
                        reportingTimestamp -> date,
                        [LeiRegistrationStatusEnum -> Issued, LeiRegistrationStatusEnum -> PendingTransfer, LeiRegistrationStatusEnum -> PendingArchival]
                    )
                    and LeiRegistrationStatusIsValidForStatus(
                            nonReportable -> enrichment -> leiData,
                            executionAgentCounterparty2,
                            eventDate,
                            reportingTimestamp -> date,
                            [LeiRegistrationStatusEnum -> Issued, LeiRegistrationStatusEnum -> PendingTransfer, LeiRegistrationStatusEnum -> PendingArchival]
                        ))

    condition UKEMIR_VR_1021_05: <"Execution Agent Condition 5">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "21" validationRule "Transaction"
        provision "When populated, for action types 'REVI': every reported Execution Agent will be a valid LEI included in the GLEIF database maintained by the Central Operating Unit, irrespective of the registration status of that LEI."]
        if ActionTypeEnum -> REVI = actionType
        then ( // Only ExecutionAgent ReportingParty is present
            if executionAgentCounterparty1 exists and executionAgentCounterparty2 is absent
            then GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    executionAgentCounterparty1
                )
                exists
            // Only ExecutionAgent Counterparty is present
            else if executionAgentCounterparty2 exists
                    and executionAgentCounterparty1 is absent
            then GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    executionAgentCounterparty2
                )
                exists
            // Both Execution Agents are present
            else if executionAgentCounterparty1 exists
                    and executionAgentCounterparty2 exists
            then GetOrFetchLeiData(
                        nonReportable -> enrichment -> leiData,
                        executionAgentCounterparty1
                    )
                    exists
                    and GetOrFetchLeiData(
                            nonReportable -> enrichment -> leiData,
                            executionAgentCounterparty2
                        )
                        exists)

    condition UKEMIR_VR_1021_06: <"Execution Agent Condition 6">
        [docReference FCA UKEMIR ValidationRules table "1" dataElement "21" validationRule "Transaction"
        provision "When populated, the LEI shall pertain to a legal entity and not a branch."]
        // Only ExecutionAgent ReportingParty is present
        if executionAgentCounterparty1 exists and executionAgentCounterparty2 is absent
        then (if GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    executionAgentCounterparty1
                )
                exists
            then GetOrFetchLeiData(
                        nonReportable -> enrichment -> leiData,
                        executionAgentCounterparty1
                    ) -> entityCategory <> LeiCategoryEnum -> Branch)
        // Only ExecutionAgent Counterparty is present
        else if executionAgentCounterparty2 exists and executionAgentCounterparty1 is absent
        then (if GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    executionAgentCounterparty2
                )
                exists
            then GetOrFetchLeiData(
                        nonReportable -> enrichment -> leiData,
                        executionAgentCounterparty2
                    ) -> entityCategory <> LeiCategoryEnum -> Branch)
        // Both Execution Agents are present
        else if executionAgentCounterparty1 exists and executionAgentCounterparty2 exists
        then ((if GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    executionAgentCounterparty1
                )
                exists
            then GetOrFetchLeiData(
                        nonReportable -> enrichment -> leiData,
                        executionAgentCounterparty1
                    ) -> entityCategory <> LeiCategoryEnum -> Branch)
                and (if GetOrFetchLeiData(
                            nonReportable -> enrichment -> leiData,
                            executionAgentCounterparty2
                        )
                        exists
                    then GetOrFetchLeiData(
                                nonReportable -> enrichment -> leiData,
                                executionAgentCounterparty2
                            ) -> entityCategory <> LeiCategoryEnum -> Branch))

    condition UKEMIR_VR_2001_01: <"UTI">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "1" validationRule "Transaction"
      provision "Up to 52 alphanumerical characters. Four special characters are allowed ':', '.', '-', '_'. Special characters not allowed at the beginning or the end."]
        required choice uniqueTransactionIdentifier, uniqueTransactionIdentifierProprietary

    condition UKEMIR_VR_2001_02: <"UTI">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "1" validationRule "Transaction"
      provision "For action types 'NEWT' and 'POSC' the UTI must be provided in the new format"]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> POSC] any = actionType
        then uniqueTransactionIdentifier exists

    // ToDo: Need to add Format validation
    condition UKEMIR_VR_2001_03: <"UTI">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "1" validationRule "Transaction"
      provision "Not allowed to change the content of this field once it is reported."]
        [regulatoryReference ISDA ISDAWorkingGroup date "unknown"
            provision "Not modelled. The condition cannot be executed in a stateless environment."]
        True

    condition UKEMIR_VR_2001_04: <"UTI">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "1" validationRule "Transaction"
      provision "The code reported in this field shall be different from the codes reported in fields 2.2, 2.3 or 2.4."]
        if uniqueTransactionIdentifier exists
        then [reportTrackingNumber, subsequentPositionUTI, priorUTI, priorUTIProprietary] all <> uniqueTransactionIdentifier
        else [reportTrackingNumber, subsequentPositionUTI, priorUTI, priorUTIProprietary] all <> uniqueTransactionIdentifierProprietary

    // ToDo: Subsequent position UTI (2.4) is not available in the model yet
    condition UKEMIR_VR_2002_01: <"Report tracking number - Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "2" validationRule "Transaction"
      provision "If field 2.41 is populated with a MIC pertaining to a trading venue, this field shall be populated and shall contain up to 52 alphanumerical characters where any character is allowed."]
    [regulatoryReference ISDA EMEADataAndReporting date "20231207"
        provision "ESMA were asked about the application of field conditionality that RTN requires when field 2.41 (Venue of execution) is populated with a MIC of a trading venue, i.e. is RTN required for any MIC, or only for MICs of venues inside the Union. ESMA responded saying the RTN is only to be populated when field 2.41 is populated with the MIC of a venue in the Union. If a third-country MIC is populated, the RTN field (2.2) can be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if venueOfExecution exists
                    and GetOrFetchMicData(
                            nonReportable -> enrichment -> micData,
                            venueOfExecution
                        )
                        extract IsEU(countryCode) = True
            then reportTrackingNumber exists
            else reportTrackingNumber is absent

    condition UKEMIR_VR_2002_02: <"Report tracking number - Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "2" validationRule "Transaction"
      provision "When reported, the code reported in this field shall be different from the codes reported in fields 2.1, 2.3 or 2.4."]
        if IsVRAllowedForActionType(actionType)
        then if reportTrackingNumber exists
            then [uniqueTransactionIdentifier, subsequentPositionUTI, priorUTI] all <> reportTrackingNumber

    condition UKEMIR_VR_2002_03: <"Report tracking number - Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "2" validationRule "Transaction"
      provision "If field 2.41 is populated with a MIC that does not pertain to a trading venue (including XXXX and XOFF), this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if ['XXXX', 'XOFF'] any = venueOfExecution or venueOfExecution is absent
            then reportTrackingNumber is absent
            else reportTrackingNumber exists

    condition UKEMIR_VR_2002_04: <"Report tracking number - Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "2" validationRule "Transaction"
      provision " If field 2.154 Level is populated with value PSTN, this field shall be left blank. "]
        if IsVRAllowedForActionType(actionType)
        then if level = PSTN then reportTrackingNumber is absent

//Section 2a - Identifiers and links
    condition UKEMIR_VR_2003_01: <"Prior UTI Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "3" validationRule "Transaction"
      provision "For action type 'NEWT': If field 2.152 is populated with 'NOVA', 'EXER' or 'ALOC', this field shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if actionType = ActionTypeEnum -> NEWT
                    and [EventTypeEnum -> NOVA, EventTypeEnum -> EXER, EventTypeEnum -> ALOC] any = eventType
            then priorUTI exists or priorUTIProprietary exists

    condition UKEMIR_VR_2003_02: <"Prior UTI Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "3" validationRule "Transaction"
      provision "For action type 'NEWT': If field 2.152 is populated with 'CLRG' or 'CORP', this field is optional."]
        if IsVRAllowedForActionType(actionType) then True

    condition UKEMIR_VR_2003_03: <"Prior UTI Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "3" validationRule "Transaction"
      provision "For action type 'NEWT' and other event types this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if actionType = ActionTypeEnum -> NEWT
                    and [EventTypeEnum -> NOVA, EventTypeEnum -> EXER, EventTypeEnum -> ALOC, EventTypeEnum -> CLRG, EventTypeEnum -> CORP] all <> eventType
            then priorUTI is absent and priorUTIProprietary is absent

    condition UKEMIR_VR_2003_04: <"Prior UTI Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "3" validationRule "Transaction"
      provision "When populated, this field shall contain up to 52 alphanumerical characters. Four special characters are allowed ':', '.', '-', '_'.
      Special characters not allowed at the beginning or the end."]
        if IsVRAllowedForActionType(actionType) then True

    condition UKEMIR_VR_2003_05: <"Prior UTI Condition 5">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "3" validationRule "Transaction"
      provision "The code reported in this field shall be different from the codes reported in fields 2.1, 2.2 or 2.4."]
        if IsVRAllowedForActionType(actionType)
        then if priorUTI exists
            then [uniqueTransactionIdentifier, uniqueTransactionIdentifierProprietary, reportTrackingNumber, subsequentPositionUTI] all <> priorUTI
            else [uniqueTransactionIdentifier, uniqueTransactionIdentifierProprietary, reportTrackingNumber, subsequentPositionUTI] all <> priorUTIProprietary

    condition UKEMIR_VR_2004_01: <"Subsequent position UTI - Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "4" validationRule "Transaction"
      provision "For action type 'TERM': If field 2.152 is populated with 'INCP', this field shall be populated."]
        if [ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if actionType = ActionTypeEnum -> TERM and eventType = EventTypeEnum -> INCP
            then subsequentPositionUTI exists

    condition UKEMIR_VR_2004_02: <"Subsequent position UTI - Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "4" validationRule "Transaction"
      provision "For action type 'TERM': If field 2.152 is populated with value other than 'INCP', this field is optional."]
        if [ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if actionType = ActionTypeEnum -> TERM
                    and eventType exists
                    and eventType <> EventTypeEnum -> INCP
            then True

    condition UKEMIR_VR_2004_03: <"Subsequent position UTI - Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "4" validationRule "Transaction"
      provision "For all relevant action types. 
      When populated, this field shall contain up to 52 alphanumerical characters. Four special characters are allowed ':', '.',  '-', ' _' .  Special characters not allowed at the beginning or the end."]
        if [ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then True // covered by type

    condition UKEMIR_VR_2004_04: <"Subsequent position UTI - Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "4" validationRule "Transaction"
      provision "For all relevant action types.
      The code reported in this field shall be different from the codes reported in fields 2.1, 2.2 or 2.3."]
        if [ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if subsequentPositionUTI exists
            then [uniqueTransactionIdentifier, reportTrackingNumber, priorUTI] all <> subsequentPositionUTI

    condition UKEMIR_VR_2005_01: <"PTRR ID Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "5" validationRule "Transaction"
    provision "For action types 'NEWT', 'MODI' and 'TERM':
    If field 2.152 is populated with 'COMP' and field 2.39 is populated with 'PWAS', 'PRBM' or 'OTHR', this field shall be populated."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
                    and eventType = EventTypeEnum -> COMP
                    and [RiskReductionTechniqueEnum -> PWAS, RiskReductionTechniqueEnum -> PRBM, RiskReductionTechniqueEnum -> OTHR] any = typeOfPTRRTechnique
            then ptrrId exists

    condition UKEMIR_VR_2005_02: <"PTRR ID Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "5" validationRule "Transaction"
    provision "For action types 'NEWT', 'MODI' and 'TERM': If field 2.152 is populated with 'COMP' and field 2.39 is populated with 'PWOS', or if field 2.152 is not populated with 'COMP',  this field shall be left blank."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
            then if (eventType = EventTypeEnum -> COMP and typeOfPTRRTechnique = PWOS)
                        or eventType <> EventTypeEnum -> COMP
                then ptrrId is absent

    condition UKEMIR_VR_2005_03: <"PTRR ID Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "5" validationRule "Transaction"
    provision "For action types 'NEWT', 'MODI' and 'TERM': When populated, this field shall contain up to 52 alphanumerical characters where only the the upper-case alphabetic characters A-Z and the digits 0-9 are allowed."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
            then if ptrrId exists then True

    // Difference vs EU EMIR
    condition UKEMIR_VR_2005_04: <"PTRR ID Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "5" validationRule "Transaction"
    provision "For action types 'NEWT', 'MODI' and 'TERM': When populated, the first 20 characters of the PTRR ID <PstTradRskRdctnIdr/Strr> should be equal to the LEI reported in the field 2.40 PTRR service provider."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
            then if ptrrId exists
                then SubString(ptrrId, 1, 20) = ptrrServiceProvider

    condition UKEMIR_VR_2006_01: <"Package identifier">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "6" validationRule "Transaction"
      provision "When populated, this field will contain up to 35 alphanumerical characters."]
        if IsVRAllowedForActionType(actionType) then True

//Section 2b - Contract information - 2.7 ISIN
    condition UKEMIR_VR_2007_01: <"ISIN Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2b" dataElement "7" validationRule "Transaction"
      provision "If field 2.41 is populated with a MIC of a UK trading venue (RM, MTF or OTF) or with a MIC 'XOFF', this field shall be populated. If field 2.41 is populated with the MIC of a systematic internaliser, this field is optional."]
        if IsVRAllowedForActionType(actionType)
        then if venueOfExecution exists
                    and (venueOfExecution = "XOFF"
                        or (GetOrFetchMicData(
                                nonReportable -> enrichment -> micData,
                                venueOfExecution
                            )
                            extract
                                marketCategory = MicMarketCategoryEnum -> RMKT
                                    or marketCategory = MicMarketCategoryEnum -> MLTF
                                    or marketCategory = MicMarketCategoryEnum -> OTFS)) = True
            then isin exists
            else if venueOfExecution exists
                    and (GetOrFetchMicData(
                            nonReportable -> enrichment -> micData,
                            venueOfExecution
                        )
                        extract marketCategory = MicMarketCategoryEnum -> SINT
                        ) = True
            then isin exists or isin is absent

    condition UKEMIR_VR_2007_02: <"ISIN Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2b" dataElement "7" validationRule "Transaction"
      provision "When populated, this field shall contain 12 alphanumerical characters, including a check digit."]
        // To be Modelled
        if IsVRAllowedForActionType(actionType) then True

//Section 2b - Contract information	- 2.8 Unique product identifier (UPI)
    condition UKEMIR_VR_2008_01: <"UPI Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2b" dataElement "8" validationRule "Transaction"
      provision "If the field 2.7 is populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if isin exists then uniqueProductIdentifier is absent

    condition UKEMIR_VR_2008_02: <"UPI Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2b" dataElement "8" validationRule "Transaction"
      provision "If the field 2.7 is blank and the field 2.41 is not populated with a MIC of a third-country organised trading platform,  this field shall be populated"]
        if IsVRAllowedForActionType(actionType)
        then if isin is absent
                    and (venueOfExecution exists
                        and GetOrFetchMicData(
                                nonReportable -> enrichment -> micData,
                                venueOfExecution
                            )
                            extract
                                marketCategory = MicMarketCategoryEnum -> OTFS
                                    and IsEU(countryCode) = False) = False
            then uniqueProductIdentifier exists

    condition UKEMIR_VR_2008_03: <"UPI Validation Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2b" dataElement "8" validationRule "Transaction"
      provision "If the field 2.7 is blank and the field 2.41 is populated with a MIC of a third-country organised trading platform,  this field is optional"]
        if IsVRAllowedForActionType(actionType)
        then if isin is absent
                    and (venueOfExecution exists
                        and GetOrFetchMicData(
                                nonReportable -> enrichment -> micData,
                                venueOfExecution
                            )
                            extract
                                marketCategory = MicMarketCategoryEnum -> OTFS
                                    and IsEU(countryCode) = False) = True
            then (uniqueProductIdentifier exists or uniqueProductIdentifier is absent)

    condition UKEMIR_VR_2008_04: <"UPI Validation Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2b" dataElement "8" validationRule "Transaction"
      provision "When populated, this field shall contain a valid UPI included in the UPI database maintained by the ANNA DSB.  12 alphanumerical characters, including a check digit."]
        // To be Modelled
        if IsVRAllowedForActionType(actionType) then True

//Section 2b - Contract information	- 2.9 Product classification
    condition UKEMIR_VR_2009_01: <"Product Classification Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "9" validationRule "Transaction"
    provision "1. This field shall be populated with CFI code composed of 6 characters and compliant with ISO 10962 Standard."]
        // The only way to test existence of a mandatory (1..1) field ???
        if IsVRAllowedForActionType(actionType)
        then [productClassification, empty] first exists

    // Missing the part of valid CFI Code. Possible Regexp would be:
    // (ES[VNRE][TU][OPF][BRNM]|EP[VNRE][RETGACN][FCPQANU][BRNM]|EC[VNRE][TU][OPF][BRNM]|EF[VNRE][RETGACN][FCPQANU][BRNM]|EL[VNRE][TU][OPF][BRNM]|ED[SPCFLM][RNBD][FCPQANUN][BRNM]|EY[ABCDEM][DYM][FVEM][BSDGTCINM]|EMXXX[BRNM]|CI[COM][IGJ][RBEVLCDFKM][SQUY]|CH[DRSEANLM]XXX|CB[COM][IGJ]X[SQUY]|CE[COM][IGJ][RBEVLCDFKM][SU]|CS[COM][BGLM][RBM][SU]|CF[COM][IGJ][IMHBEPM][SQUY]|CP[COM][IGJ][RBEVLCDFKM][SQUY]|CMXXX[SQUY]|DB[FZVCK][TGSUPNOQJC][FGCDABTLPQRE][BRNM]|DC[FZVK][TGSUPNOQJC][FGCDABTLPQRE][BRNM]|DW[FZVK][TGSUPNOQJC][FGCDABTLPQRE][BRNM]|DT[FZVK][TGSUPNOQJC][FGCDABTLPQRE][BRNM]|DY[FZVK][TGSUPNOQJC]X[BRNM]|DS[ABCDM][FDVYM][FVM][BSDTCINM]|DE[ABCDEM][FDVYM][RSCTM][BSDTCINM]|DG[FZV][TGSUPNOQJC][FGCDABTLPQRE][BRNM]|DA[FZV][TGSUPNOQJC][FGCDABTLPQRE][BRNM]|DN[FZV][TGSUPNOQJC][FGCDABTLPQRE][BRNM]|DD[BCWTYGANM][FZVC][TGSUPNOQJC][FGCDABTLPQRE]|DM[BPM]XX[BRNM]|RAXXX[BRNM]|RS[SPCFBIM]XX[BRNM]|RP[SPCFBIM]XX[BRNM]|RW[BSDTCIM][TNC][CPB][EABM]|RF[BSDTCIM][TNM][CPM][EABM]|RD[ASPWM]XX[BRNM]|RMXXXX|OC[EAB][BSDTCIOFWNM][PCNE][SN]|OP[EAB][BSDTCIOFWNM][PCNE][SN]|OMXXXX|FF[BSDCIOFWNVM][PCN][SN]X|FC[EAISNPHM][PCN][SN]X|SR[ACDGHZM][CIDY][SC][DN]|ST[JKANGPSTIHBCQM][CT]X[CPE]|SE[SIBM][PDVLTCM]X[CPE]|SC[UVIBM][CTM][CSL][CPA]|SF[ACM]XX[PC]|SM[PM]XX[CPE]|HR[ACDEGHORFM][ABCDEFGHI][VADBGLPCFM][CPE]|HT[JKANGPSTIHBCORFWM][ABCDEFGHI][VADBGLPM][CPE]|HE[SIBORFM][ABCDEFGHI][VADBGLPM][CPE]|HC[UVIWM][ABCDEFGHI][VADBGLPM][CPE]|HF[RFTVBCDEQUWYM][JKL][VADBGLPM][CPE]|HM[PM][ABCDEFGHIJKL][VADBGLPM][CPENA]|IFXXX[P]|IT[AJKNPSTM]XXX|JE[SIBOF]X[CSF][CP]|JF[TUVRSWOJKFLN]X[CSFR][CP]|JC[AIBCDGO]X[CSF][CP]|JR[IOM]X[CSF][CP]|JT[ABCGIHJKNPSTM]X[CSF][CP]|KRXXXX|KTXXXX|KEXXXX|KCXXXX|KFXXXX|KYXXXX|KMXXXX|LL[ABJKNPSTM]XX[CP]|LR[GSC][FNOT]X[DHT]|LS[CGPTELDWKM][NOT]X[DFHT]|TC[NLCM]XXX|TT[EAISNPHM]XXX|TR[NVFRM][DWNQSAM]XX|TI[EDFRTCM][PCEFM][PNGM]X|TB[EDFITCM]XXX|TD[SPCFLKM]XXX|TMXXXX|MC[SBHAWUM][TU]X[BRNM]|MM[RIETNPSM]XXX)
    condition UKEMIR_VR_2009_02: <"Product Classification Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "9" validationRule "Transaction"
    provision "2. At least the first  2 characters of the CFI code and the character representing asset class (if applicable for a given instrument) shall be provided (ie. these characters cannot be 'X',  which represents not applicable or undefined value)."]
        if IsVRAllowedForActionType(actionType) then True // ^(ES|EP|EC|EF|EL|ED|EY|EM|CI|CH|CB|CE|CS|CF|CP|CM|DB|DC|DW|DT|DY|DS|DE|DG|DA|DN|DD|DM|RA|RS|RP|RW|RF|RD|RM|OC|OP|OM|FF|FC|SR|ST|SE|SC|SF|SM|HR|HT|HE|HC|HF|HM|IF|IT|JE|JF|JC|JR|JT|KR|KT|KE|KC|KF|KY|KM|LL|LR|LS|TC|TT|TR|TI|TB|TD|TM|MC|MM)....$

    condition UKEMIR_VR_2010_01: <"Contract type Validation Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "10" validationRule "Transaction"
        provision "This field shall only contain one of the following values: 'CFDS', 'FRAS', 'FUTR', 'FORW', 'OPTN', 'SPDB', 'SWAP', 'SWPT' or 'OTHR'. 4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then ([CommonContractType -> CFDS, CommonContractType -> FRAS, CommonContractType -> FUTR, CommonContractType -> FORW, CommonContractType -> OPTN, CommonContractType -> SPDB, CommonContractType -> SWAP, CommonContractType -> SWPT, CommonContractType -> OTHR] any = contractType)

    condition UKEMIR_VR_2011_01: <"Asset class Validation Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "11" validationRule "Transaction"
        provision "This field shall only contain one of the following values: 'COMM', 'CRDT', 'CURR', 'EQUI' or 'INTR'. 4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then ([CommonAssetClass -> COMM, CommonAssetClass -> CRDT, CommonAssetClass -> CURR, CommonAssetClass -> EQUI, CommonAssetClass -> INTR] any = assetClass)

    condition UKEMIR_VR_2012_01: <"Derivative based on crypto-assets">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "12" validationRule "Transaction"
        provision "This field shall only contain one of the following values: 'TRUE', or 'FALSE'."]
        if IsVRAllowedForActionType(actionType) then True

    condition UKEMIR_VR_2013_01: <"Underlying Identification Type Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "13" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'EQUI', this field shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = EQUI
            then underlyingIdentificationType exists

    condition UKEMIR_VR_2013_02: <"Underlying Identification Type Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "13" validationRule "Transaction"
      provision "If field 2.11 is populated with 'CRDT', one of the fields 2.13 or 2.144 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = CRDT
            then underlyingIdentificationType exists or referenceEntity exists

    condition UKEMIR_VR_2013_03: <"Underlying Identification Type Validation Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "13" validationRule "Transaction"
      provision "If field 2.11 is populated with 'INTR', at least one of the following fields shall be populated: 2.13, 2.79, 2.85."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = INTR
            then underlyingIdentificationType exists
                    or leg1 -> fixedRate exists
                    or leg1 -> periodicPayment -> nameOfTheFloatingRate exists

    condition UKEMIR_VR_2013_04: <"Underlying Identification Type Validation Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "13" validationRule "Transaction"
      provision "If field 2.11 is populated with 'COMM' or 'CURR',  this field can be left blank."]
        if IsVRAllowedForActionType(actionType) then True

    condition UKEMIR_VR_2013_05: <"Underlying Identification Type Validation Condition 5">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "13" validationRule "Transaction"
      provision "When populated, this field shall contain one of the following values: 'I', 'B', 'X'. 1 alphabetical character."]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType exists
            then [common.underlier.UnderlyingIdentificationTypeEnum -> I, common.underlier.UnderlyingIdentificationTypeEnum -> B, common.underlier.UnderlyingIdentificationTypeEnum -> X] any = underlyingIdentificationType

    condition UKEMIR_VR_2014_01: <"Underlying identification Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "14" validationRule "Transaction"
    provision "1. If field 2.13 is populated with 'I', this field shall be populated and shall contain 12 alphanumerical including  a check digit."]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType = I
            then underlyingIdentification exists

    condition UKEMIR_VR_2014_02: <"Underlying identification Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "14" validationRule "Transaction"
    provision "2. If field 2.13 is populated with 'X', and this field is populated, it shall contain 12 alphanumerical characters including a check digit. "]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType = X and underlyingIdentification exists
            then True

    condition UKEMIR_VR_2014_03: <"Underlying identification Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "14" validationRule "Transaction"
    provision "3. If field 2.13 is not populated with 'I' or 'X', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [common.underlier.UnderlyingIdentificationTypeEnum -> I, common.underlier.UnderlyingIdentificationTypeEnum -> X] all <> underlyingIdentificationType
            then underlyingIdentification is absent

    condition UKEMIR_VR_2015_01: <"Indicator of the underlying index Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "15" validationRule "Transaction"
    provision "1. When populated,  this field shall only contain one of the following values: 'ESTR', 'SONA', 'SOFR', 'EONA', 'EONS', 'EURI', 'EUUS', 'EUCH', 'GCFR', 'ISDA', 'LIBI', 'LIBO', 'MAAA', 'PFAN', 'TIBO', 'STBO', 'BBSW', 'JIBA', 'BUBO', 'CDOR', 'CIBO', 'MOSP', 'NIBO', 'PRBO', 'TLBO', 'WIBO', 'TREA', 'SWAP', 'FUSW', 'EFFR', 'OBFR', 'CZNA', or 'TONA'.  4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if indicatorOfTheUnderlyingIndex exists
            then (indicatorOfTheUnderlyingIndex
                extract
                    ([IndexEnum -> ESTR, IndexEnum -> SONA, IndexEnum -> SOFR, IndexEnum -> EONA, IndexEnum -> EONS, IndexEnum -> EURI, IndexEnum -> EUUS, IndexEnum -> EUCH, IndexEnum -> GCFR, IndexEnum -> ISDA, IndexEnum -> LIBI, IndexEnum -> LIBO, IndexEnum -> MAAA, IndexEnum -> PFAN, IndexEnum -> TIBO, IndexEnum -> STBO, IndexEnum -> BBSW, IndexEnum -> JIBA, IndexEnum -> BUBO, IndexEnum -> CDOR, IndexEnum -> CIBO, IndexEnum -> MOSP, IndexEnum -> NIBO, IndexEnum -> PRBO, IndexEnum -> TLBO, IndexEnum -> WIBO, IndexEnum -> TREA, IndexEnum -> SWAP, IndexEnum -> FUSW, IndexEnum -> EFFR, IndexEnum -> OBFR, IndexEnum -> CZNA, IndexEnum -> TONA] contains item)
                then all = True)

    condition UKEMIR_VR_2015_02: <"Indicator of the underlying index Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "15" validationRule "Transaction"
    provision "2. If field 2.13 is not populated with 'X', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType <> X
            then indicatorOfTheUnderlyingIndex is absent

    condition UKEMIR_VR_2016_01: <"Name of the underlying index Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "16" validationRule "Transaction"
    provision "If field 2.13 is populated with 'X', this field shall be populated and shall contain up to 50 alphanumerical characters. Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType = X
            then nameOfTheUnderlyingIndex exists
            else nameOfTheUnderlyingIndex is absent

    condition UKEMIR_VR_2017_01: <"Custom basket code">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "17" validationRule "Custom basket code"
    provision "If field 2.13 is populated with 'B', this field shall be populated and shall contain up to 72 alphanumeric characters."]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType = B
            then customBasketCode exists
            else customBasketCode is absent

    condition UKEMIR_VR_2017_02: <"Custom basket code">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "17" validationRule "Custom basket code"
    provision "The first 20 characters of the custom basket code should be equal to an LEI code contained in GLEIF database."]
        if IsVRAllowedForActionType(actionType)
        then if customBasketCode exists
            then GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    SubString(customBasketCode, 1, 20)
                ) -> lei exists

    condition UKEMIR_VR_2017_03: <"Custom basket code">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "17" validationRule "Custom basket code"
    provision "Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType <> B
            then customBasketCode is absent
            else customBasketCode exists

    condition UKEMIR_VR_2018_01: <"Identifier of the baskets constituents Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "18" validationRule "Identifier of the baskets constituents"
    provision "If field 2.13 is populated with 'B', this field shall be populated and shall contain 12 alphanumeric characters, including a check digit. This field is repeatable.
        Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if underlyingIdentificationType = B
            then basketConstituents -> identifier exists
            else basketConstituents -> identifier is absent

    condition UKEMIR_VR_2019_01: <"Settlement currency 1 Validation Condition 1 ">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "19" validationRule "Contract information"
    provision "If field 2.47 is populated with 'CASH', this field shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if deliveryType = CASH
            then leg1 -> settlementCurrency exists

    condition UKEMIR_VR_2019_02: <"Settlement currency 1 Validation Condition 2 ">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "19" validationRule "Contract information"
    provision "If field 2.47 is populated with 'OPTL', this field is optional."]
        if IsVRAllowedForActionType(actionType)
        then if deliveryType = OPTL then True

//condition UKEMIR_VR_2019_03:<"Settlement currency 1 Validation Condition 3 ">
//    [docReference FCA UKEMIR ValidationRules table "2" dataElement "19" validationRule "Contract information"
//        provision "When populated, this field shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters."]
//        if leg1 -> settlementCurrency  exists then
//        ["AFN","EUR","ALL","DZD","USD","EUR","AOA","XCD","XCD","ARS","AMD","AWG","AUD","EUR","AZN","BSD","BHD","BDT","BBD","BYN","EUR","BZD","XOF","BMD","INR","BTN","BOB","BOV","USD","BAM","BWP","NOK","BRL","USD","BND","BGN","XOF","BIF","CVE","KHR","XAF","CAD","KYD","XAF","XAF","CLP","CLF","CNY","AUD","AUD","COP","COU","KMF","CDF","XAF","NZD","CRC","XOF","EUR","CUP","CUC","ANG","EUR","CZK","DKK","DJF","XCD","DOP","USD","EGP","SVC","USD","XAF","ERN","EUR","SZL","ETB","EUR","FKP","DKK","FJD","EUR","EUR","EUR","XPF","EUR","XAF","GMD","GEL","EUR","GHS","GIP","EUR","DKK","XCD","EUR","USD","GTQ","GBP","GNF","XOF","GYD","HTG","USD","AUD","EUR","HNL","HKD","HUF","ISK","INR","IDR","XDR","IRR","IQD","EUR","GBP","ILS","EUR","JMD","JPY","GBP","JOD","KZT","KES","AUD","KPW","KRW","KWD","KGS","LAK","EUR","LBP","LSL","ZAR","LRD","LYD","CHF","EUR","EUR","MOP","MKD","MGA","MWK","MYR","MVR","XOF","EUR","USD","EUR","MRU","MUR","EUR","XUA","MXN","MXV","USD","MDL","EUR","MNT","EUR","XCD","MAD","MZN","MMK","NAD","ZAR","AUD","NPR","EUR","XPF","NZD","NIO","XOF","NGN","NZD","AUD","USD","NOK","OMR","PKR","USD","PAB","USD","PGK","PYG","PEN","PHP","NZD","PLN","EUR","USD","QAR","EUR","RON","RUB","RWF","EUR","SHP","XCD","XCD","EUR","EUR","XCD","WST","EUR","STN","SAR","XOF","RSD","SCR","SLL","SLE","SGD","ANG","XSU","EUR","EUR","SBD","SOS","ZAR","SSP","EUR","LKR","SDG","SRD","NOK","SEK","CHF","CHE","CHW","SYP","TWD","TJS","TZS","THB","USD","XOF","NZD","TOP","TTD","TND","TRY","TMT","USD","AUD","UGX","UAH","AED","GBP","USD","USD","USN","UYU","UYI","UYW","UZS","VUV","VES","VED","VND","USD","USD","XPF","MAD","YER","ZMW","ZWL","XBA","XBB","XBC","XBD","XTS","XXX","XAU","XPD","XPT","XAG"] any = leg1 -> settlementCurrency
    condition UKEMIR_VR_2019_04: <"Settlement currency 1 Validation Condition 4 ">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "19" validationRule "Contract information"
    provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> settlementCurrency exists
            then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, // ISOCurrencyCodeEnum -> XEU,
//                    ISOCurrencyCodeEnum -> XFU,
                    ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] any <> leg1 -> settlementCurrency

    condition UKEMIR_VR_2019_05: <"Settlement currency 1 Validation Condition 5 ">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "19" validationRule "Contract information"
    provision "If field 2.47 is populated with 'PHYS' this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if deliveryType = PHYS
            then leg1 -> settlementCurrency is absent

//condition UKEMIR_VR_2020_01:<"Settlement currency 2 Validation Condition 1 ">
//    [docReference FCA UKEMIR ValidationRules table "2" dataElement "20" validationRule "Contract information"
//        provision "When populated, this field shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters."]
//        if leg2 -> settlementCurrency  exists then
//        ["AFN","EUR","ALL","DZD","USD","EUR","AOA","XCD","XCD","ARS","AMD","AWG","AUD","EUR","AZN","BSD","BHD","BDT","BBD","BYN","EUR","BZD","XOF","BMD","INR","BTN","BOB","BOV","USD","BAM","BWP","NOK","BRL","USD","BND","BGN","XOF","BIF","CVE","KHR","XAF","CAD","KYD","XAF","XAF","CLP","CLF","CNY","AUD","AUD","COP","COU","KMF","CDF","XAF","NZD","CRC","XOF","EUR","CUP","CUC","ANG","EUR","CZK","DKK","DJF","XCD","DOP","USD","EGP","SVC","USD","XAF","ERN","EUR","SZL","ETB","EUR","FKP","DKK","FJD","EUR","EUR","EUR","XPF","EUR","XAF","GMD","GEL","EUR","GHS","GIP","EUR","DKK","XCD","EUR","USD","GTQ","GBP","GNF","XOF","GYD","HTG","USD","AUD","EUR","HNL","HKD","HUF","ISK","INR","IDR","XDR","IRR","IQD","EUR","GBP","ILS","EUR","JMD","JPY","GBP","JOD","KZT","KES","AUD","KPW","KRW","KWD","KGS","LAK","EUR","LBP","LSL","ZAR","LRD","LYD","CHF","EUR","EUR","MOP","MKD","MGA","MWK","MYR","MVR","XOF","EUR","USD","EUR","MRU","MUR","EUR","XUA","MXN","MXV","USD","MDL","EUR","MNT","EUR","XCD","MAD","MZN","MMK","NAD","ZAR","AUD","NPR","EUR","XPF","NZD","NIO","XOF","NGN","NZD","AUD","USD","NOK","OMR","PKR","USD","PAB","USD","PGK","PYG","PEN","PHP","NZD","PLN","EUR","USD","QAR","EUR","RON","RUB","RWF","EUR","SHP","XCD","XCD","EUR","EUR","XCD","WST","EUR","STN","SAR","XOF","RSD","SCR","SLL","SLE","SGD","ANG","XSU","EUR","EUR","SBD","SOS","ZAR","SSP","EUR","LKR","SDG","SRD","NOK","SEK","CHF","CHE","CHW","SYP","TWD","TJS","TZS","THB","USD","XOF","NZD","TOP","TTD","TND","TRY","TMT","USD","AUD","UGX","UAH","AED","GBP","USD","USD","USN","UYU","UYI","UYW","UZS","VUV","VES","VED","VND","USD","USD","XPF","MAD","YER","ZMW","ZWL","XBA","XBB","XBC","XBD","XTS","XXX","XAU","XPD","XPT","XAG"] any = leg2 -> settlementCurrency
    condition UKEMIR_VR_2020_02: <"Settlement currency 2 Validation Condition 2 ">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "20" validationRule "Contract information"
    provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> settlementCurrency exists
            then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, // ISOCurrencyCodeEnum -> XEU, ISOCurrencyCodeEnum -> XFU, //TODO 
                    ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] any <> leg2 -> settlementCurrency

    condition UKEMIR_VR_2020_03: <"Settlement currency 2 Validation Condition 3 ">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "20" validationRule "Contract information"
    provision "If field 2.47 is populated with 'PHYS' this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if deliveryType = PHYS
            then leg2 -> settlementCurrency is absent

    condition UKEMIR_VR_2021_01: <"Valuation amount Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "21" validationRule "Valuation"
    provision "When populated, this field shall contain up to 25 numerical characters including up to 5 decimal places.
    The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
    The negative symbol, if populated, shall not be counted as a numerical character."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists then True

    condition UKEMIR_VR_2022_01: <"Valuation currency Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "22" validationRule "Valuation"
    provision "If field 2.21 is populated, this field shall be populated and shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists then valuationCurrency exists

    condition UKEMIR_VR_2022_02: <"Valuation currency Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "22" validationRule "Valuation"
    provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        // FYI - the following ISOCurrencyCodeEnum  are not present: XEU and XFU
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationCurrency exists
            then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> valuationCurrency

    condition UKEMIR_VR_2022_03: <"Valuation currency Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "22" validationRule "Valuation"
    provision "Otherwise, the field shall be left blank."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount is absent
            then valuationCurrency is absent

    condition UKEMIR_VR_2023_01: <"Valuation timestamp - Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "23" validationRule "Valuation"
    provision "If field 2.21 is populated, this field shall be populated in a common input format: YYYY-MM-DDThh:mm:ssZ."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists then valuationTimestamp exists

    // Platform upgrade to support Date Format
    condition UKEMIR_VR_2023_02: <"Valuation timestamp - Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "23" validationRule "Valuation"
    provision "The valuation timestamp shall be equal or later than 2014-02-12."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then CompareDateTo(executionTimestamp -> date, 2014, 2, 12) >= 0

    condition UKEMIR_VR_2023_03: <"Valuation timestamp - Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "23" validationRule "Valuation"
    provision "The valuation timestamp shall be equal or later than the execution timestamp."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists
            then valuationTimestamp >= executionTimestamp

    condition UKEMIR_VR_2023_04: <"Valuation timestamp - Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "23" validationRule "Valuation"
    provision "The valuation timestamp shall not be greater than the reporting timestamp."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists
            then valuationTimestamp <= reportingTimestamp

    condition UKEMIR_VR_2023_05: <"Valuation timestamp - Condition 5">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "23" validationRule "Valuation"
    provision "The date part of the valuation timestamp shall not be greater than the expiration date or, where populated, the early termination date."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists
            then (if earlyTerminationDate exists
                then valuationTimestamp -> date <= earlyTerminationDate
                else valuationTimestamp -> date <= expirationDate)

    condition UKEMIR_VR_2023_06: <"Valuation timestamp - Condition 6">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "23" validationRule "Valuation"
    provision "The date part of the valuation timestamp shall be equal to 2.153 Event date"]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists
            then valuationTimestamp -> date = eventDate

    condition UKEMIR_VR_2023_07: <"Valuation timestamp - Condition 7">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "23" validationRule "Valuation"
    provision "Otherwise, the field shall be left blank."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount is absent
            then valuationTimestamp is absent

    condition UKEMIR_VR_2024_01: <"Valuation method">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "24" validationRule "Valuation"
      provision "If field 2.21 is populated and field 2.31 is populated with 'Y',  this field shall be populated with 'CCPV'."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists and cleared = Y
            then valuationMethod = ValuationType1Code -> CCPV

    condition UKEMIR_VR_2024_02: <"Valuation method">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "24" validationRule "Valuation"
      provision "If field 2.21 is populated and field 2.31 is populated with 'N', this field shall be populated with 'MTMA' or 'MTMO'.
                4 alphabetical characters."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists and cleared = N
            then [ValuationType1Code -> MTMA, ValuationType1Code -> MTMO] any = valuationMethod

    condition UKEMIR_VR_2024_03: <"Valuation method">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "24" validationRule "Valuation"
    provision "Otherwise, the field shall be left blank."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount is absent
            then valuationMethod is absent

    condition UKEMIR_VR_2025_01: <"Delta">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "25" validationRule "Valuation"
    provision "If field 2.21 is populated, field 2.10 is populated with 'OPTN' or 'SWPT' and field 2.13 is not populated with 'B', this field shall be populated."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if valuationAmount exists
                    and [CommonContractType -> OPTN, CommonContractType -> SWPT] any = contractType
                    and underlyingIdentificationType = B
            then delta exists

    condition UKEMIR_VR_2025_02: <"Delta">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "25" validationRule "Valuation"
    provision "When populated, this field shall contain up to 25 numeric characters including up to 5 decimal places. Otherwise this field shall be left blank.
                The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if delta exists then True else delta is absent

    condition UKEMIR_VR_2025_03: <"Delta">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "25" validationRule "Valuation"
    provision "Any value between -1 and 1 (including -1 and 1) is allowed.
                The negative symbol, if populated, shall not be counted as a numerical character."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> VALU, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI, ActionTypeEnum -> POSC] any = actionType
        then if delta exists then delta >= -1 and delta <= 1

    condition UKEMIR_VR_2026_01: <"Collateral portfolio indicator">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "26" validationRule "Margin information"
    provision "This field shall contain only one of the following values: 'TRUE' or 'FALSE'."]
        if IsVRAllowedForActionType(actionType)
        then if collateralPortfolioIndicator exists then True

    condition UKEMIR_VR_2027_01: <"Collateral portfolio code">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "27" validationRule "Margin information"
    provision "If field 2.26 is populated with 'TRUE', this field shall be populated and shall contain up to 52 alphanumerical characters. Special characters are not allowed.
            Otherwise, the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if collateralPortfolioIndicator = True
            then collateralPortfolioCode exists
            else collateralPortfolioCode is absent

    condition UKEMIR_VR_2028_01: <"Confirmation timestamp">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "28" validationRule "Transaction"
    provision "If field 2.29 is populated with 'ECNF' or 'YCNF', this field shall be populated in a common input format: YYYY-MM-DDThh:mm:ssZ"]
        // Platform upgrade to support Date Format
        if IsVRAllowedForActionType(actionType)
        then if [ConfirmationEnum -> ECNF, ConfirmationEnum -> YCNF] any = confirmed
                    and confirmationTimestamp exists
            then True

    condition UKEMIR_VR_2028_02: <"Confirmation timestamp">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "28" validationRule "Transaction"
    provision "The confirmation timestamp shall be greater than or equal to the Execution timestamp."]
        if IsVRAllowedForActionType(actionType)
        then if confirmationTimestamp exists
            then confirmationTimestamp >= executionTimestamp

    condition UKEMIR_VR_2028_03: <"Confirmation timestamp">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "28" validationRule "Transaction"
    provision "The confirmation timestamp shall not be greater than the reporting timestamp."]
        if IsVRAllowedForActionType(actionType)
        then if confirmationTimestamp exists
            then confirmationTimestamp <= reportingTimestamp

    condition UKEMIR_VR_2028_04: <"Confirmation timestamp">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "28" validationRule "Transaction"
    provision "The date part of the confirmation timestamp shall not be greater than the expiration date or, where populated, the early termination date"]
        if IsVRAllowedForActionType(actionType)
        then if confirmationTimestamp exists
            then if earlyTerminationDate exists
                then confirmationTimestamp -> date <= earlyTerminationDate
                else confirmationTimestamp -> date <= expirationDate

    condition UKEMIR_VR_2028_05: <"Confirmation timestamp">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "28" validationRule "Transaction"
    provision "If field 2.29 is populated with 'NCNF', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if confirmed = ConfirmationEnum -> NCNF
            then confirmationTimestamp is absent

    condition UKEMIR_VR_2029_01: <"Confirmed">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "29" validationRule "Transaction"
      provision "If field 2.41 is not populated with a MIC code of a trading venue that was a regulated market or a third-country market considered as equivalent to a regulated market and field 2.31 is populated with 'N', this field shall be populated and shall contain only one of the following values: 'YCNF', 'NCNF' or 'ECNF'. 4 alphabetical characters. Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if (venueOfExecution exists
                        and GetOrFetchMicData(
                                nonReportable -> enrichment -> micData,
                                venueOfExecution
                            )
                            extract
                                (marketCategory = MicMarketCategoryEnum -> RMKT
                                    or IsFCAThirdCountryEquivalentMarket(mic) = True)) = False
                    and cleared = N
                    and [ConfirmationEnum -> YCNF, ConfirmationEnum -> NCNF, ConfirmationEnum -> ECNF] any = confirmed
            then True
            else confirmed is absent

//Section 2f - Clearing
    condition UKEMIR_VR_2030_01: <"Clearing obligation Validation Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "30" validationRule "Clearing"
    provision "If the trade was concluded after 11pm on 31 December 2020 and field 2.41 is not populated with a MIC code of a trading venue that was a UK regulated market, or
        If the trade was concluded prior to 11pm on 31 December 2020 and field 2.41 is not populated with a MIC code of a trading venue that was a UK or EEA regulated market,
        then this field shall be populated and shall contain one of the following values: 'TRUE' , 'FLSE' or 'UKWN'."]
        if IsVRAllowedForActionType(actionType)
        then if (venueOfExecution exists
                    and GetOrFetchMicData(
                            nonReportable -> enrichment -> micData,
                            venueOfExecution
                        )
                        extract
                            (marketCategory = MicMarketCategoryEnum -> RMKT
                                or IsFCAThirdCountryEquivalentMarket(mic) = True)) = False
            then clearingObligation exists
                    and [ClearingObligationEnum -> TRUE, ClearingObligationEnum -> FLSE, ClearingObligationEnum -> UKWN] any = clearingObligation

//TODO - update rule to check if 2.41 is not MIC of trading venue that was a regulated market or a third-country market
    condition UKEMIR_VR_2030_03: <"Clearing obligation Validation Condition 3 ">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "30" validationRule "Clearing"
    provision "Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if (venueOfExecution is absent
                    or (venueOfExecution exists
                        and GetOrFetchMicData(
                                nonReportable -> enrichment -> micData,
                                venueOfExecution
                            )
                            extract
                                marketCategory = MicMarketCategoryEnum -> RMKT = True
                                    or IsFCAThirdCountryEquivalentMarket(mic) = True))
            then clearingObligation is absent

//TODO - update rule to check if 2.41 is not MIC of trading venue
    condition UKEMIR_VR_2031_01: <"Cleared Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "31" validationRule "Transaction"
    provision "This field shall contain only one of the following values 'Y' <CmonTradData/TxData/TradClr/ClrSts/Clrd> or 'N' <CmonTradData/TxData/TradClr/ClrSts/NonClrd/Rsn>."]
        if IsVRAllowedForActionType(actionType)
        then cleared = Y or cleared = N

    condition UKEMIR_VR_2032_01: <"Clearing TimeStamp Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "32" validationRule "Transaction"
    provision "If field 2.31 is populated with 'Y', this field shall be populated in a common input format:  YYYY-MM-DDThh:mm:ssZ."]
        if IsVRAllowedForActionType(actionType)
        then if cleared = Y then clearingTimestamp exists

    condition UKEMIR_VR_2032_02: <"Clearing TimeStamp Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "32" validationRule "Transaction"
    provision "The clearing timestamp shall be greater than or equal to the Execution timestamp."]
        if IsVRAllowedForActionType(actionType)
        then if clearingTimestamp exists
            then clearingTimestamp >= executionTimestamp

    condition UKEMIR_VR_2032_03: <"Clearing TimeStamp Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "32" validationRule "Transaction"
    provision "The clearing timestamp shall not be greater than the reporting timestamp."]
        if IsVRAllowedForActionType(actionType)
        then if clearingTimestamp exists
            then clearingTimestamp <= reportingTimestamp

    condition UKEMIR_VR_2032_04: <"Clearing Timestamp Validation Condition 4 ">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "32" validationRule "Transaction"
    provision "The date part of the clearing timestamp shall not be greater than the expiration date or, where populated, the early termination date."]
        if IsVRAllowedForActionType(actionType)
        then if clearingTimestamp exists
            then if earlyTerminationDate exists
                then clearingTimestamp -> date <= earlyTerminationDate
                else clearingTimestamp -> date <= expirationDate

    condition UKEMIR_VR_2032_05: <"Clearing TimeStamp Condition 5">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "32" validationRule "Transaction"
    provision " If field 2.31 is populated with 'N', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if cleared = N then clearingTimestamp is absent

    condition UKEMIR_VR_2033_01: <"Central Counterparty Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "33" validationRule "Transaction"
    provision "If field 2.31 is populated with 'Y' this field shall be populated with a valid LEI included in the GLEIF database maintained by the Central Operating Unit."]
        if IsVRAllowedForActionType(actionType)
        then if cleared = Y
            then centralCounterparty exists
                    and GetOrFetchLeiData(
                            nonReportable -> enrichment -> leiData,
                            centralCounterparty
                        )
                        exists

    condition UKEMIR_VR_2033_02: <"Central Counterparty Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "33" validationRule "Transaction"
    provision "The status of the LEI shall be 'Issued', 'Lapsed',  'Pending transfer' or 'Pending archival'.
      Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp. "]
        if IsVRAllowedForActionType(actionType)
        then if centralCounterparty exists
            then LeiRegistrationStatusIsValid(
                        nonReportable -> enrichment -> leiData,
                        centralCounterparty,
                        eventDate,
                        reportingTimestamp -> date
                    )

    condition UKEMIR_VR_2033_03: <"Central Counterparty Validation Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "33" validationRule "Transaction"
    provision "The LEI shall pertain to a legal entity and not a branch."]
        if IsVRAllowedForActionType(actionType)
        then if GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    centralCounterparty
                )
                exists
            then GetOrFetchLeiData(
                        nonReportable -> enrichment -> leiData,
                        centralCounterparty
                    ) -> entityCategory <> LeiCategoryEnum -> Branch

    condition UKEMIR_VR_2033_04: <"Central Counterparty Validation Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "33" validationRule "Transaction"
    provision "If field 2.31 is populated with 'N', this field shall be left blank. "]
        if IsVRAllowedForActionType(actionType)
        then if cleared = N then centralCounterparty is absent

//Section 2g - Details on the transaction
    condition UKEMIR_VR_2034_01: <"Master Agreement Type Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "34" validationRule  "Transaction"
    provision "This field shall be populated and shall contain only one of the following values: 'ISDA', 'CDEA', 'EUMA', 'FPCA', 'FMAT', 'DERV', 'CMOP', 'CHMA', 'IDMA', 'EFMA', 'GMRA', 'GMSL', 'BIAG', 'OTHR'. 4 alphabetical characters. "]
        if IsVRAllowedForActionType(actionType)
        then ([common.contract.MasterAgreementEnum -> ISDA, common.contract.MasterAgreementEnum -> CDEA, common.contract.MasterAgreementEnum -> EUMA, common.contract.MasterAgreementEnum -> FPCA, common.contract.MasterAgreementEnum -> FMAT, common.contract.MasterAgreementEnum -> DERV, common.contract.MasterAgreementEnum -> CMOP, common.contract.MasterAgreementEnum -> CHMA, common.contract.MasterAgreementEnum -> IDMA, common.contract.MasterAgreementEnum -> EFMA, common.contract.MasterAgreementEnum -> GMRA, common.contract.MasterAgreementEnum -> GMSL, common.contract.MasterAgreementEnum -> BIAG, common.contract.MasterAgreementEnum -> OTHR] any = masterAgreementType)

    condition UKEMIR_VR_2035_01: <"Other Master Agreement Type Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "35" validationRule   "Transaction"
    provision "If field 2.34 is populated with 'OTHR', this field shall be populated and shall contain up to 50 alphanumerical characters. Otherwise, it shall be left blank. "]
        if IsVRAllowedForActionType(actionType)
        then if masterAgreementType = OTHR
            then otherMasterAgreementType exists
            else otherMasterAgreementType is absent

// 50 char check done using type
    condition UKEMIR_VR_2036_01: <"Master Agreement Version Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "36" validationRule   "Transaction"
    provision "If field 2.34 is populated with a value different from 'BIAG' or 'OTHR', this field shall be populated. "]
        if IsVRAllowedForActionType(actionType)
        then if masterAgreementType <> BIAG and masterAgreementType <> OTHR
            then masterAgreementVersion exists
            else masterAgreementVersion is absent

    condition UKEMIR_VR_2036_02: <"Master Agreement Version Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "36" validationRule "Transaction"
    provision "When populated, it shall be reported in a common input format: YYYY. First two digits shall be 19 or 20."]
        if IsVRAllowedForActionType(actionType)
        then if masterAgreementVersion exists
            then masterAgreementVersion >= 1900 and masterAgreementVersion <= 2099

    condition UKEMIR_VR_2037_01: <"Intragroup Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "37" validationRule   "Transaction"
    provision "If field 2.41 is not populated with a MIC code of a trading venue that was a regulated market or a third-country market considered as equivalent to a regulated market, or
        If the trade was concluded prior to 11pm on 31 December 2020 and 2.41 is not populated with a MIC code of a trading venue that was a UK or EEA regulated market or a third-country market considered as equivalent to an EEA regulated market, then this field shall be populated and shall contain only one of the following values: 'TRUE' or 'FALSE'. Otherwise, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if (venueOfExecution exists
                    and GetOrFetchMicData(
                            nonReportable -> enrichment -> micData,
                            venueOfExecution
                        )
                        extract
                            (marketCategory = MicMarketCategoryEnum -> RMKT
                                or IsFCAThirdCountryEquivalentMarket(mic) = True)) = False
            then intragroup exists
            else intragroup is absent

    condition UKEMIR_VR_2038_01: <"PTRR Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "38" validationRule "Transaction"
    provision "When Level (2.154) is 'TCTN', and for action types 'NEWT', 'MODI', 'CORR', 'POSC' or 'REVI': this field shall contain only one of the following values: 'TRUE' or 'FALSE'"]
        if IsVRAllowedForActionType(actionType)
        then if level = TCTN
            then if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> POSC, ActionTypeEnum -> REVI] any = actionType
                then [True, False] any = ptrr

    condition UKEMIR_VR_2039_01: <"Type of PTRR technique Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "39" validationRule "Transaction"
      provision "If:
        (i) field 2.38 is populated with 'TRUE', or
        (ii)  if field 2.151 is populated with 'TERM' or 'MODI' and field 2.152 is populated with 'COMP',
        this field shall be populated and shall contain only one of the following values: 'PWOS', 'PWAS', 'PRBM', or 'OTHR'. "]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then if ptrr = True
                    or ([ActionTypeEnum -> TERM, ActionTypeEnum -> MODI] any = actionType and eventType = EventTypeEnum -> COMP)
            then [RiskReductionTechniqueEnum -> PWOS, RiskReductionTechniqueEnum -> PWAS, RiskReductionTechniqueEnum -> PRBM, RiskReductionTechniqueEnum -> OTHR] any = typeOfPTRRTechnique

    condition UKEMIR_VR_2040_01: <"PTRR service provider Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "40" validationRule "Transaction"
      provision "If field 2.39 is populated with 'PWAS', 'PRBM' or 'OTHR', this field shall be populated with a valid LEI included in the GLEIF database maintained by the Central Operating Unit."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then if [RiskReductionTechniqueEnum -> PWAS, RiskReductionTechniqueEnum -> PRBM, RiskReductionTechniqueEnum -> OTHR] any = typeOfPTRRTechnique
            then GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    ptrrServiceProvider
                ) -> lei exists

    condition UKEMIR_VR_2040_02: <"PTRR service provider Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "40" validationRule "Transaction"
      provision "The status of the LEI shall be 'Issued', 'Lapsed',  'Pending transfer' or 'Pending archival'.
                Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then if ptrrServiceProvider exists
            then LeiRegistrationStatusIsValid(
                        nonReportable -> enrichment -> leiData,
                        ptrrServiceProvider,
                        eventDate,
                        reportingTimestamp -> date
                    )

    condition UKEMIR_VR_2040_03: <"PTRR service provider Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "40" validationRule "Transaction"
      provision "The LEI shall pertain to a legal entity and not a branch"]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then if GetOrFetchLeiData(
                    nonReportable -> enrichment -> leiData,
                    ptrrServiceProvider
                )
                exists
            then GetOrFetchLeiData(
                        nonReportable -> enrichment -> leiData,
                        ptrrServiceProvider
                    ) -> entityCategory <> LeiCategoryEnum -> Branch

    condition UKEMIR_VR_2040_04: <"PTRR service provider Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "40" validationRule "Transaction"
      provision "If field 2.39 is populated with 'PWOS', then this field must be left blank."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then if typeOfPTRRTechnique = PWOS
            then ptrrServiceProvider is absent

//Section 2b - Contract information
    condition UKEMIR_VR_2041_01: <"Venue of Execution Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "41" validationRule "Transaction"
    provision "This field shall be populated with a valid MIC code included in the list maintained and updated by ISO and published at: http://www.iso15022.org/MIC/homepageMIC.htm (column 'MIC' in the worksheet 'ISO10383_MIC_NewFormat'."]
        if IsVRAllowedForActionType(actionType)
        then venueOfExecution exists
                and GetOrFetchMicData(
                        nonReportable -> enrichment -> micData,
                        venueOfExecution
                    ) -> mic exists

    condition UKEMIR_VR_2041_02: <"Venue of Execution Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "41" validationRule "Transaction"
    provision "Code 'BILT' is not allowed."]
        if IsVRAllowedForActionType(actionType)
        then if venueOfExecution exists
            then venueOfExecution <> 'BILT'

    condition UKEMIR_VR_2042_01: <"Execution timestamp Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "42" validationRule "Transaction"
      provision "This field shall be populated in a common input format: YYYY-MM-DDThh:mm:ssZ."]
        // Platform upgrade to support Date Format
        if IsVRAllowedForActionType(actionType) then True

    condition UKEMIR_VR_2042_02: <"Execution timestamp Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "42" validationRule "Transaction"
    provision "The execution timestamp shall be equal or later than 1950-01-01."]
        if IsVRAllowedForActionType(actionType)
        then CompareDateTo(executionTimestamp -> date, 1950, 1, 1) >= 0

    condition UKEMIR_VR_2043_01: <"Effective date Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "43" validationRule "Transaction"
      provision "This field shall be populated in a common input format: YYYY-MM-DD."]
        // Platform upgrade to support Date Format
        if IsVRAllowedForActionType(actionType) then True

    condition UKEMIR_VR_2043_02: <"Effective date Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "43" validationRule "Transaction"
    provision "The effective date shall be equal or later than 1950-01-01."]
        if IsVRAllowedForActionType(actionType)
        then CompareDateTo(effectiveDate, 1950, 1, 1) >= 0

    condition UKEMIR_VR_2044_01: <"Expiration date Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "44" validationRule "Transaction"
      provision "If field 2.10 is populated with a value different from 'CFDS' or 'SPDB', this field shall be populated in a common input format: YYYY-MM-DD."]
        // Platform upgrade to support Date Format
        if IsVRAllowedForActionType(actionType)
        then if ([CommonContractType -> CFDS, CommonContractType -> SPDB] all <> contractType)
            then expirationDate exists

    condition UKEMIR_VR_2044_02: <"Expiration date Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "44" validationRule "Transaction"
      provision "The value of this field shall be greater than or equal to  the value of the field 2.42 and 2.43."]
        if IsVRAllowedForActionType(actionType)
        then if expirationDate exists
            then (expirationDate >= (executionTimestamp -> date) and expirationDate >= effectiveDate)

    condition UKEMIR_VR_2044_03: <"Expiration date Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "44" validationRule "Transaction"
      provision "The expiration date should be equal or later than 2014-02-12."]
        if IsVRAllowedForActionType(actionType)
        then CompareDateTo(expirationDate, 2014, 2, 12) >= 0

    condition UKEMIR_VR_2044_04: <"Expiration date Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "44" validationRule "Transaction"
    provision "If field 2.10 is populated with a value 'CFDS' or 'SPDB', this field can be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [CommonContractType -> CFDS, CommonContractType -> SPDB] any = contractType
            then expirationDate is absent

//Section 2g - Details on the transaction
    condition UKEMIR_VR_2045_01: <"Early termination date Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "45" validationRule "Transaction"
    provision "When populated, this field shall be reported in a common input format: YYYY-MM-DD."]
        // Not modeled
        if [ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then True

    condition UKEMIR_VR_2045_02: <"Early termination date Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "45" validationRule "Transaction"
    provision "The value of this field shall be greater than or equal to the value of the date part of the field 2.42 reported for the given UTI."]
        if [ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if earlyTerminationDate exists
            then earlyTerminationDate >= executionTimestamp -> date

    condition UKEMIR_VR_2045_03: <"Early termination date Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "45" validationRule "Transaction"
    provision "If field 2.44 was previously reported for the given UTI, , the value of this field shall be less than the value of the field 2.44."]
        if [ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if expirationDate exists and earlyTerminationDate exists
            then earlyTerminationDate < expirationDate

    condition UKEMIR_VR_2045_04: <"Early termination date Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "45" validationRule "Transaction"
    provision "The early termination date should be equal or later than 2014-02-12."]
        if [ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if earlyTerminationDate exists
            then CompareDateTo(earlyTerminationDate, 2014, 2, 12) >= 0

    condition UKEMIR_VR_2045_05: <"Early termination date Condition 5">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "45" validationRule "Transaction"
    provision "The value of this field shall be earlier than or equal to the value of the date part of the field 1.1."]
        if [ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then if earlyTerminationDate exists
            then earlyTerminationDate <= reportingTimestamp -> date

    condition UKEMIR_VR_2045_06: <"Early termination date Condition 6">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "45" validationRule "Transaction"
    provision "For a given derivative this field can be reported for a first time only with the action type 'TERM'."]
        [docReference ISDA TechnicalExecutionGroup date "20230822"
    provision "Not modelled. The condition cannot be executed in a stateless environment."]
        // if actionType = ActionTypeEnum -> TERM then earlyTerminationDate exists
        if [ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then True

    condition UKEMIR_VR_2045_07: <"Early termination date Condition 7">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "45" validationRule "Transaction"
    provision "If the derivative was terminated (and not revived), this field must be populated in the subsequent reports with action type 'CORR'."]
        [docReference ISDA TechnicalExecutionGroup date "20230822"
    provision "Not modelled. The condition cannot be executed in a stateless environment."]
        if [ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> REVI] any = actionType
        then True

    condition UKEMIR_VR_2046_01: <"Final Contractual Settlement Date Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "46" validationRule "Transaction"
    provision "If field 2.10 is populated with a value different from 'CFDS', this field shall be populated in a common input format: YYYY-MM-DD"]
        if IsVRAllowedForActionType(actionType)
        then if [CommonContractType -> CFDS, CommonContractType -> SPDB] all <> contractType
            then finalContractualSettlementDate exists

    condition UKEMIR_VR_2046_02: <"Final Contractual Settlement Date Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "46" validationRule "Transaction"
    provision "The value of this field shall be greater than or equal to the value of the date part of the field 2.42"]
        if IsVRAllowedForActionType(actionType)
        then if finalContractualSettlementDate exists
            then finalContractualSettlementDate >= (executionTimestamp -> date)

    condition UKEMIR_VR_2046_03: <"Final Contractual Settlement Date Validation Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "46" validationRule "Transaction"
    provision "The settlement date should be equal or later than 2014-02-12"]
        if IsVRAllowedForActionType(actionType)
        then if finalContractualSettlementDate exists
            then CompareDateTo(finalContractualSettlementDate, 2014, 02, 12) >= 0

    condition UKEMIR_VR_2046_04: <"Final Contractual Settlement Date Validation Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "46" validationRule "Transaction"
    provision "If field 2.10  is populated with a value 'CFDS', this field can be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [CommonContractType -> CFDS, CommonContractType -> SPDB] any = contractType
            then finalContractualSettlementDate is absent

    condition UKEMIR_VR_2047_01: <"Delivery Type Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "47" validationRule "Transaction"
    provision "This field shall contain only one of the following values: 'CASH', 'PHYS' or 'OPTL'. 4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then ([DeliveryTypeEnum -> CASH, DeliveryTypeEnum -> PHYS, DeliveryTypeEnum -> OPTL] any = deliveryType)

    condition UKEMIR_VR_2048_01: <"Price Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "48" validationRule "Transaction"
        provision "This field shall be populated:
    - If field 2.10 is populated with 'FORW' and field 2.11 is populated with 'COMM'; or
    - If field 2.10 is populated with 'FORW' or 'SWAP' and field 2.11 is populated with 'EQUI'; or
    - If field 2.10 is populated with 'CFDS' or 'FUTR'.
    Otherwise this field is optional"]
        if IsVRAllowedForActionType(actionType)
        then if (contractType = FORW and assetClass = COMM)
                    or ([CommonContractType -> FORW, CommonContractType -> SWAP] any = contractType and assetClass = EQUI)
                    or [CommonContractType -> CFDS, CommonContractType -> FUTR] any = contractType
            then price -> monetary exists or price -> percentage exists

    condition UKEMIR_VR_2048_02: <"Price Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "48" validationRule "Transaction"
    provision "When populated, this field shall contain:
    up to 18 numeric characters including up to 13 decimals if price is expressed as monetary value,
    The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
    The negative symbol, if populated, is not counted as a numeric character.
    A default value  '999999999999999999' (for monetary values) or '99999999999' (for percentage values) is accepted."]
        if IsVRAllowedForActionType(actionType)
        then if priceNotation = Monetary then price -> monetary exists

    condition UKEMIR_VR_2048_03: <"Price Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "48" validationRule "Transaction"
    provision "When populated, this field shall contain:
    up to 11 numeric characters including up to 10 decimals if price is expressed as percentage
    The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
    The negative symbol, if populated, is not counted as a numeric character.
    A default value  '999999999999999999' (for monetary values) or '99999999999' (for percentage values) is accepted."]
        if IsVRAllowedForActionType(actionType)
        then if priceNotation = Percentage
            then price -> percentage exists

    condition UKEMIR_VR_2049_01: <"Price Currency Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "49" validationRule "Transaction"
    provision "If field 2.48 is populated with a monetary value then the field 2.49 shall be populated and shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if price -> monetary exists then priceCurrency exists

    condition UKEMIR_VR_2049_02: <"Price Currency Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "49" validationRule "Transaction"
    provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        // Following two cg codes are historix "XEU" and "XFU" and are not part of ISOCurrencyCodeEnum
        if IsVRAllowedForActionType(actionType)
        then if priceCurrency exists
            then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> priceCurrency

    condition UKEMIR_VR_2049_03: <"Price Currency Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "49" validationRule "Transaction"
    provision "If field 2.48 is populated with a percentage or is left blank, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if price -> percentage exists or price is absent
            then priceCurrency is absent

    condition UKEMIR_VR_2050_01: <"Unadjusted effective date of the price Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "50" validationRule "Transaction"
      provision "If field 2.52 is populated, this field shall be populated  in a common input format: YYYY-MM-DD.
      Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (priceSchedule
            extract
                (if price -> monetary exists or price -> percentage exists
                then effectiveDate exists
                else effectiveDate is absent)
            then all = True)

    condition UKEMIR_VR_2050_02: <"Unadjusted effective date of the price Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "50" validationRule "Transaction"
      provision "When populated, this field shall be populated with the date of the day following the date reported in the field 2.51 for the previous period in the schedule"]
        // ToDo: Not modelled
        if IsVRAllowedForActionType(actionType) then (True)

    condition UKEMIR_VR_2051_01: <"Unadjusted end date of the price Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "51" validationRule "Transaction"
    provision "When populated, this field  shall be reported in a common input format: YYYY-MM-DD."]
        if IsVRAllowedForActionType(actionType)
        then if priceSchedule -> endDate exists then True

    condition UKEMIR_VR_2051_02: <"Unadjusted end date of the price Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "51" validationRule "Transaction"
    provision "If field 2.52 is not populated , this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (priceSchedule
            extract
                (if price -> monetary is absent and price -> percentage is absent then endDate is absent)
            then all = True)

    condition UKEMIR_VR_2052_01: <"Price in effect between the unadjusted effective and end date Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "52" validationRule "Transaction"
    provision "When populated, this field shall contain up to 18 numeric characters including up to 13 decimals if price is expressed as monetary value"]
        if IsVRAllowedForActionType(actionType)
        then if priceSchedule -> price -> monetary exists then True

    condition UKEMIR_VR_2052_02: <"Price in effect between the unadjusted effective and end date Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "52" validationRule "Transaction"
      provision "When populated, this field shall contain:
        up to 11 numeric characters including up to 10 decimals if price is expressed as percentage
        The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
        The negative symbol, if populated, is not counted as a numeric character
        A default value  '999999999999999999' (for monetary values) or '99999999999' (for percentage values)
        is accepted."]
        if IsVRAllowedForActionType(actionType)
        then if priceSchedule -> price -> percentage exists then True

    condition UKEMIR_VR_2053_01: <"Package Transaction Price Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "53" validationRule "Transaction"
      provision "If 2.6 Package identifier is populated and field 2.111 Package transaction spread is blank, this field shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if packageIdentifier exists and packageTransactionSpread is absent
            then packageTransactionPrice exists

    condition UKEMIR_VR_2053_02: <"Package Transaction Price Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "53" validationRule "Transaction"
      provision "When populated this field shall contain: up to 18 numeric characters including up to 13 decimals if price is expressed as monetary value"]
        if IsVRAllowedForActionType(actionType)
        then if packageTransactionPrice -> monetary exists then True

    condition UKEMIR_VR_2053_03: <"Package Transaction Price Validation Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "53" validationRule "Transaction"
      provision "When populated this field shall contain: up to 11 numeric characters including up to 10 decimals if price is expressed as percentage. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. The negative symbol, if populated, is not counted as a numeric character."]
        if IsVRAllowedForActionType(actionType)
        then if packageTransactionPrice -> percentage exists then True

    condition UKEMIR_VR_2053_04: <"Package Transaction Price Validation Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "53" validationRule "Transaction"
      provision "If field 2.6 Package identifier is not populated or if field 2.111 Package transaction spread is populated, this field shall be left blank. A default value  '999999999999999999' (for monetary values) or '99999999999' (for percentage values) is accepted"]
        if IsVRAllowedForActionType(actionType)
        then if packageIdentifier is absent or packageTransactionSpread exists
            then packageTransactionPrice is absent

    condition UKEMIR_VR_2054_01: <"Package Transaction Price Currency Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "54" validationRule "Transaction"
      provision "If field 2.53 is populated with a monetary value then the field 2.54 shall be populated with ISO 4217 Currency Code (official list only),  3 alphabetical characters. "]
        if IsVRAllowedForActionType(actionType)
        then if packageTransactionPrice -> monetary exists
            then packageTransactionPriceCurrency exists

    condition UKEMIR_VR_2054_02: <"Package Transaction Price Currency Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "54" validationRule "Transaction"
      provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX. "]
        if IsVRAllowedForActionType(actionType)
        then if packageTransactionPriceCurrency exists
            then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> packageTransactionPriceCurrency

    condition UKEMIR_VR_2054_03: <"Package Transaction Price Currency Validation Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "54" validationRule "Transaction"
      provision "If field 2.53 is populated with a percentage or is left blank, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if packageTransactionPrice -> percentage exists
                    or packageTransactionPrice is absent
            then packageTransactionPriceCurrency is absent

    condition UKEMIR_VR_2055_01: <"Notional amount of leg 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "55" validationRule "Notional amount of leg 1"
        provision "This field shall contain any value greater than or equal to zero up to 25 numerical characters including up to 5 decimals. The decimal mark is not counted as a numerical character. If populated, it shall be represented with a dot. A default value '9999999999999999999999999'  is accepted."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> notionalAmount >= 0 then True else False

    condition UKEMIR_VR_2056_01: <"Notional currency 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "56" validationRule "Notional currency 1"
        provision "This field shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters."]
        if IsVRAllowedForActionType(actionType) then True

    condition UKEMIR_VR_2056_02: <"Notional currency 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "56" validationRule "Notional currency 1"
        provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        if IsVRAllowedForActionType(actionType)
        then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> leg1 -> notionalCurrency

    condition UKEMIR_VR_2057_01: <"Effective date of the notional amount of leg 1 Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "57" validationRule "Transaction"
         provision "If field 2.59 is populated, this field shall be populated in a common input format: YYYY-MM-DD. Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (leg1 -> notionalAmountSchedule
            extract
                (if value exists
                then effectiveDate exists
                else effectiveDate is absent)
            then all = True)

    condition UKEMIR_VR_2057_02: <"Effective date of the notional amount of leg 1 Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "57" validationRule "Transaction"
         provision "When populated, this field shall be populated with the date of the day following the date reported in the field 2.58 for the previous period in the schedule"]
        // ToDo: Not modelled
        if IsVRAllowedForActionType(actionType) then (True)

// condition UKEMIR_VR_2058_01:<"End date of the notional amount of leg 1">
//     [docReference FCA UKEMIR ValidationRules table "2" dataElement "58" validationRule "Transaction"
//       provision "When populated this field shall be reported in a common input format: YYYY-MM-DD."]
//        //ToDo: format validation
//         True
// condition UKEMIR_VR_2058_02:<"End date of the notional amount of leg 1">
//     [docReference FCA UKEMIR ValidationRules table "2" dataElement "58" validationRule "Transaction"
//       provision "If field 2.59 is not populated this field shall be left blank."]
//        if notionalAmountSchedule -> amount exists then notionalAmountSchedule -> endDate is absent
    condition UKEMIR_VR_2059_01: <"Notional amount in effect on associated effective date of leg 1 Validation Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "59" validationRule "Transaction"
      provision "When populated, this field shall contain any value greater than or equal to zero up to 25 numerical characters including up to 5 decimals.
      The decimal mark is not counted as a numerical character.
      If populated, it shall be represented with a dot. A default value '9999999999999999999999999' is accepted."]
        if IsVRAllowedForActionType(actionType)
        then (leg1 -> notionalAmountSchedule
            extract (if value exists then value >= 0 else True)
            then all = True)

    condition UKEMIR_VR_2060_01: <"Total notional quantity leg 1 Validation Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "60" validationRule "Transaction"
        provision "If field 2.11 (Asset class) is populated with 'EQUI' or 'COMM', this field shall be populated and shall contain  any value greater than or equal to zero up to 25 numeric characters including up to 5 decimals.
            The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
            A default value '9999999999999999999999999'  is accepted."]
        if IsVRAllowedForActionType(actionType)
        then if (assetClass = EQUI or assetClass = COMM)
            then leg1 -> totalNotionalQuantity >= 0

    condition UKEMIR_VR_2061_01: <"Effective date of the notional quantity of leg 1 Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "61" validationRule "Transaction"
    provision "If field 2.63 is populated, this field shall be populated  in a common input format: YYYY-MM-DD.
    Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (leg1 -> notionalQuantitySchedule
            extract
                (if value exists
                then effectiveDate exists
                else effectiveDate is absent)
            then all = True)

    condition UKEMIR_VR_2061_02: <"Effective date of the notional quantity of leg 1 Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "61" validationRule "Transaction"
    provision "When populated, this field shall be populated with the date of the day following the date reported in the field 2.62 for the previous period in the schedule"]
        // ToDo: Not modelled
        if IsVRAllowedForActionType(actionType) then (True)

    condition UKEMIR_VR_2062_01: <"End date of the notional quantity of leg 1 Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "62" validationRule "Transaction"
    provision "When populated this field shall be reported in a common input format: YYYY-MM-DD."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> notionalQuantitySchedule -> endDate exists
            then True

    condition UKEMIR_VR_2062_02: <"End date of the notional quantity of leg 1 Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "62" validationRule "Transaction"
    provision "If field 2.63 is not populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (leg1 -> notionalQuantitySchedule
            extract (if value is absent then endDate is absent else True)
            then all = True)

    condition UKEMIR_VR_2063_01: <"Notional quantity leg 1 Validation Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "63" validationRule "Transaction"
    provision "When populated ,this field shall contain any value greater than or equal to zero up to 25 numeric characters including up to 5 decimals.
            The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
            A default value '9999999999999999999999999'  is accepted."]
        if IsVRAllowedForActionType(actionType)
        then (leg1 -> notionalQuantitySchedule
            extract (if value exists then value >= 0 else True)
            then all = True)

    condition UKEMIR_VR_2064_01: <"Notional amount of leg 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "64" validationRule "Notional amount of leg 2"
    provision "When populated, this field shall contain any value greater than or equal to zero up to 25 numerical characters including up to 5 decimals. The decimal mark is not counted as a numerical character. If populated, it shall be represented with a  dot. A default value '9999999999999999999999999'  is accepted."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> notionalAmount exists
            then if leg2 -> notionalAmount >= 0 then True else False

    condition UKEMIR_VR_2065_01: <"Notional currency 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "65" validationRule "Notional currency 2"
    provision "If field 2.64 is populated, this field shall be populated and shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters. Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> notionalAmount exists
            then True
            else leg2 -> notionalCurrency is absent

    condition UKEMIR_VR_2065_02: <"Notional currency 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "65" validationRule "Notional currency 2"
        provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX. Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> notionalCurrency exists
            then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> leg2 -> notionalCurrency
            else leg2 -> notionalCurrency is absent

    condition UKEMIR_VR_2066_01: <"Effective date of the notional amount of leg 2 Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "66" validationRule "Transaction"
    provision "If field 2.68 is populated, this field shall be populated in a common input format: YYYY-MM-DD. Otherwise it shall be left blank."]
        // ToDo: format validation
        if IsVRAllowedForActionType(actionType)
        then (leg2 -> notionalAmountSchedule
            extract
                (if value exists
                then effectiveDate exists
                else effectiveDate is absent)
            then all = True)

    condition UKEMIR_VR_2066_02: <"Effective date of the notional amount of leg 2 Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "66" validationRule "Transaction"
    provision "When populated, this field shall be populated with the date of the day following the date reported in the field 2.67 for the previous period in the schedule"]
        // ToDo: Not modelled
        if IsVRAllowedForActionType(actionType) then (True)

// condition UKEMIR_VR_2067_01:<"End date of the notional amount of leg 2">
//     [docReference FCA UKEMIR ValidationRules table "2" dataElement "67" validationRule "Transaction"
//     provision "When populated, this field shall be reported in a common input format: YYYY-MM-DD."]
//     if IsVRAllowedForActionType(actionType) then
//         if leg2 -> notionalAmountScheduleLeg -> endDate exists
//         then True
// condition UKEMIR_VR_2067_02:<"End date of the notional amount of leg 2">
//     [docReference FCA UKEMIR ValidationRules table "2" dataElement "67" validationRule "Transaction"
//     provision "If field 2.68 is not populated , this field shall be left blank."]
//     if IsVRAllowedForActionType(actionType) then (
//         leg2 -> notionalAmountScheduleLeg
//         extract
//         (if amount is absent
//         then endDate is absent) then all = True )
    condition UKEMIR_VR_2068_01: <"Notional amount in effect on associated effective date of leg 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "68" validationRule "Transaction"
      provision "When populated, this field shall contain any value greater than or equal to zero up to 25 numerical characters including up to 5 decimals.
      The decimal mark is not counted as a numerical character.
      If populated, it shall be represented with a dot. A default value '9999999999999999999999999' is accepted."]
        if IsVRAllowedForActionType(actionType)
        then (leg2 -> notionalAmountSchedule
            extract (if value exists then value >= 0 else True)
            then all = True)

    condition UKEMIR_VR_2069_01: <"Total notional quantity leg 2 Validation Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "69" validationRule "Transaction"
    provision "When populated, this field shall contain any value greater than or equal to zero up to 25 numeric characters including up to 5 decimals.
        The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
        A default value '9999999999999999999999999'  is accepted."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> totalNotionalQuantity exists
            then leg2 -> totalNotionalQuantity >= 0

    condition UKEMIR_VR_2070_01: <"Effective date of the notional quantity of leg 2 Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "70" validationRule "Transaction"
    provision "If field 2.72 is populated, this field shall be populated in a common input format: YYYY-MM-DD.
    Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (leg2 -> notionalQuantitySchedule
            extract
                (if value exists
                then effectiveDate exists
                else effectiveDate is absent)
            then all = True)

    condition UKEMIR_VR_2070_02: <"Effective date of the notional quantity of leg 2 Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "70" validationRule "Transaction"
    provision "When populated, this field shall be populated with the date of the day following the date reported in the field 2.71 for the previous period in the schedule."]
        // ToDo: Not modelled
        if IsVRAllowedForActionType(actionType) then (True)

    condition UKEMIR_VR_2071_01: <"End date of the notional quantity of leg 2 Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "71" validationRule "Transaction"
    provision "When populated this field shall be reported in a common input format: YYYY-MM-DD."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> notionalQuantitySchedule -> endDate exists
            then True

    condition UKEMIR_VR_2071_02: <"End date of the notional quantity of leg 2 Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "71" validationRule "Transaction"
    provision "If field 2.72 is not populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (leg2 -> notionalQuantitySchedule
            extract (if value is absent then endDate is absent else True)
            then all = True)

    condition UKEMIR_VR_2072_01: <"Notional quantity leg 2 Validation Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "69" validationRule "Transaction"
    provision "When populated ,this field shall contain any value greater than or equal to zero up to 25 numeric characters including up to 5 decimals.
            The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
            A default value '9999999999999999999999999'  is accepted."]
        if IsVRAllowedForActionType(actionType)
        then (leg2 -> notionalQuantitySchedule
            extract (if value exists then value >= 0 else True)
            then all = True)

    condition UKEMIR_VR_2073_01: <"Other payment type">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "73" validationRule "Transaction"
      provision "When populated, this field shall contain only one of the following values: 'UFRO', 'UWIN', or 'PEXH'. 4 alphabetic characters."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                (if paymentType exists
                then [PaymentType4Code -> UFRO, PaymentType4Code -> UWIN, PaymentType4Code -> PEXH] contains paymentType
                else True)
            then all = True)

    condition UKEMIR_VR_2074_01: <"Other payment amount">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "74" validationRule "Transaction"
      provision "If field 2.73 is populated, this field shall be populated and shall contain any value greater than or equal to zero up to 25 numeric characters including up to 5 decimals. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. Otherwise it shall be left blank"]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                (if paymentType exists
                then amount >= 0
                else amount is absent)
            then all = True)

    condition UKEMIR_VR_2075_01: <"Other payment currency">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "75" validationRule "Transaction"
      provision "If field 2.73 is populated, this field shall be populated and shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters. Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                (if paymentType exists
                then currency exists
                else currency is absent)
            then all = True)

    condition UKEMIR_VR_2075_02: <"Other payment currency">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "75" validationRule "Transaction"
      provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                ([ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> item -> currency)
            then all = True)

    condition UKEMIR_VR_2076_01: <"Other payment date">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "76" validationRule "Transaction"
      provision "If field 2.73 is populated, this field shall be populated in a common input format: YYYY-MM-DD. Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract
                (if paymentType exists and date exists
                then True
                else date is absent)
            then all = True)

    condition UKEMIR_VR_2077_01: <"Other payment payer">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "77" validationRule "Transaction"
      provision "If field 2.73 is populated, this field shall be populated with a valid LEI included in the GLEIF database maintained by the Central Operating Unit or up to 72 alphanumeric character code for natural persons who are acting as private individuals (not business entities). Otherwise it shall be left blank."]
        // ToDo: Partially modelled
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment // Loop through each other payment item
            extract
                (if paymentType exists
                then if payerFormat = PartyIdentifierFormatEnum -> Lei
                    then GetOrFetchLeiData(empty, payer) -> lei exists
                    else payer exists
                else payer is absent)
            then all = True)

    condition UKEMIR_VR_2077_02: <"Other payment payer">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "77" validationRule "Transaction"
      provision "The status of the LEI shall be 'Issued', 'Lapsed',  'Pending transfer' or 'Pending archival'. Up to 72 alphanumeric characters code. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp."]
        // ToDo: Partially modelled
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment // Loop through each other payment item
            extract
                (if payerFormat = PartyIdentifierFormatEnum -> Lei
                then // ToDo: Add the following call ==> LeiRegistrationStatusIsValid(empty, payer, eventDate, reportingTimestamp -> date)
                    if GetOrFetchLeiData(empty, payer) exists
                    then [LeiRegistrationStatusEnum -> Issued, LeiRegistrationStatusEnum -> Lapsed, LeiRegistrationStatusEnum -> PendingTransfer, LeiRegistrationStatusEnum -> PendingArchival] any = GetOrFetchLeiData(
                                empty,
                                payer
                            ) -> registrationStatus
                    else True)
            then all = True)

    condition UKEMIR_VR_2077_03: <"Other payment payer">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "77" validationRule "Transaction"
      provision "The LEI shall pertain to a legal entity and not a branch."]
        // ToDo: Partially modelled
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment // Loop through each other payment item
            extract
                (if payerFormat = PartyIdentifierFormatEnum -> Lei
                then if GetOrFetchLeiData(empty, payer) exists
                    then GetOrFetchLeiData(empty, payer) -> entityCategory <> LeiCategoryEnum -> Branch
                    else True)
            then all = True)

    condition UKEMIR_VR_2077_04: <"Other payment payer">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "77" validationRule "Transaction"
      provision "The identifier provided in this field should be equal to the identifier reported in the field  1.4 or 1.9."]
        // ToDo: Partially modelled
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract payment [
                if payment -> payer exists
                then payment -> payer = counterparty1 or payment -> payer = counterparty2
                else payment -> payer is absent
            ]
            then all = True)

    condition UKEMIR_VR_2077_05: <"Other payment payer">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "77" validationRule "Transaction"
      provision "The identifier provided in this field should be different from the identifier reported in the field 2.78 unless it is equal to the identifier provided in the field 2.33."]
        // ToDo: Partially modelled
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract payment [
                (payment -> payer <> payment -> receiver)
                    or (payment -> payer = payment -> receiver and payment -> payer = centralCounterparty)
            ]
            then all = True)

    condition UKEMIR_VR_2078_01: <"Other payment receiver">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "78" validationRule "Transaction"
      provision "If field 2.73 is populated, this field shall be populated with a valid LEI included in the GLEIF database maintained by the Central Operating Unit or up to 72 alphanumeric character code for natural persons who are acting as private individuals (not business entities). Otherwise it shall be left blank."]
        // ToDo: Partially modelled
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment // Loop through each other payment item
            extract
                (if paymentType exists
                then if receiverFormat = PartyIdentifierFormatEnum -> Lei
                    then GetOrFetchLeiData(empty, receiver) -> lei exists
                    else receiver exists
                else receiver is absent)
            then all = True)

    condition UKEMIR_VR_2078_02: <"Other payment receiver">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "78" validationRule "Transaction"
      provision "The status of the LEI shall be 'Issued', 'Lapsed',  'Pending transfer' or 'Pending archival'. Up to 72 alphanumeric characters code. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp."]
        // ToDo: Partially modelled
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment // Loop through each other payment item
            extract
                (if receiverFormat = PartyIdentifierFormatEnum -> Lei
                then // ToDo: Add the following call ==> LeiRegistrationStatusIsValid(empty, receiver, eventDate, reportingTimestamp -> date)
                    if GetOrFetchLeiData(empty, receiver) exists
                    then [LeiRegistrationStatusEnum -> Issued, LeiRegistrationStatusEnum -> Lapsed, LeiRegistrationStatusEnum -> PendingTransfer, LeiRegistrationStatusEnum -> PendingArchival] any = GetOrFetchLeiData(
                                empty,
                                receiver
                            ) -> registrationStatus
                    else True)
            then all = True)

    condition UKEMIR_VR_2078_03: <"Other payment receiver">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "78" validationRule "Transaction"
      provision "The LEI shall pertain to a legal entity and not a branch."]
        // ToDo: Partially modelled
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment // Loop through each other payment item
            extract
                (if receiverFormat = PartyIdentifierFormatEnum -> Lei
                then if GetOrFetchLeiData(empty, receiver) exists
                    then GetOrFetchLeiData(empty, receiver) -> entityCategory <> LeiCategoryEnum -> Branch
                    else True)
            then all = True)

    condition UKEMIR_VR_2078_04: <"Other payment receiver">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "78" validationRule "Transaction"
      provision "The identifier provided in this field should be equal to the identifier reported in the field  1.4 or 1.9."]
        // ToDo: Partially modelled
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract payment [
                (if payment -> receiver exists then payment -> receiver = counterparty1 or payment -> receiver = counterparty2 else payment -> receiver is absent)
            ]
            then all = True)

    condition UKEMIR_VR_2078_05: <"Other payment receiver">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "78" validationRule "Transaction"
      provision "The identifier provided in this field should be different from the identifier reported in the field 2.77 unless it is equal to the identifier provided in the field 2.33."]
        // ToDo: Partially modelled
        if IsVRAllowedForActionType(actionType) or actionType = ActionTypeEnum -> TERM
        then (otherPayment
            extract payment [
                (payment -> receiver <> payment -> payer)
                    or (payment -> receiver = payment -> payer and payment -> receiver = centralCounterparty)
            ]
            then all = True)

    condition UKEMIR_VR_2079_01: <"Fixed rate of leg 1 or coupon Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "79" validationRule "Interest Rates"
      provision "If field 2.11 (Asset class) is populated with 'INTR', at least one of the following fields shall be populated: 2.13, 2.79, 2.85."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = INTR
            then underlyingIdentificationType exists
                    or leg1 -> periodicPayment -> nameOfTheFloatingRate exists
                    or leg1 -> fixedRate exists

    condition UKEMIR_VR_2079_02: <"Fixed rate of leg 1 or coupon Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "79" validationRule "Interest Rates"
    provision "Only one of the fields 2.79 and 2.85 can be populated."]
        if IsVRAllowedForActionType(actionType)
        then (leg1 -> fixedRate exists and leg1 -> periodicPayment -> nameOfTheFloatingRate exists) = False

    condition UKEMIR_VR_2079_03: <"Fixed rate of leg 1 or coupon Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "79" validationRule "Interest Rates"
      provision "When populated, this field shall contain up to 11 numerical characters including up to 10 decimals. The decimal mark is not counted as a numerical character. If populated, it shall be represented with a  dot. Negative values are allowed. The negative symbol, if populated, is not counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> fixedRate exists then True

    condition UKEMIR_VR_2080_01: <"Fixed rate or coupon day count convention leg 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "80" validationRule "Transaction"
    provision "If field 2.79 is populated, then this field shall be populated and shall contain only one of the following values: 'A001', 'A002', 'A003', 'A004','A005', 'A006', 'A007', 'A008', 'A009', 'A010', 'A011', 'A012', 'A013', 'A014', 'A015', 'A016', 'A017', 'A018', 'A019', 'A020' or 'NARR'.  4 alphanumerical characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> fixedRate exists
                    and leg1 -> periodicPayment -> fixedRateDayCountConvention exists
            then True
            else leg1 -> periodicPayment -> fixedRateDayCountConvention is absent

    condition UKEMIR_VR_2081_01: <"Fixed rate or coupon payment frequency period leg 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "81" validationRule "Transaction"
    provision "If field 2.79 is populated, this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK', 'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> fixedRate exists
                    and [FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL, FrequencyPeriodEnum -> ADHO, FrequencyPeriodEnum -> EXPI] any = leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriod
            then True
            else leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriod is absent

    condition UKEMIR_VR_2082_01: <"Fixed rate or coupon payment frequency period multiplier leg 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "82" validationRule "Transaction"
    provision "If field 2.81 is populated with 'EXPI', 'YEAR', 'MNTH', 'WEEK' or 'DAIL', then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> fixedRate exists
            then if [FrequencyPeriodEnum -> EXPI, FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL] any = leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriod and leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier >= 0
                then True
                else False
            else leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier is absent

    condition UKEMIR_VR_2083_01: <"Identifier of the floating rate of leg 1 - Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "83" validationRule "Transaction"
    provision "When populated, this field shall contain 12 alphanumerical characters and a check digit."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> periodicPayment -> floatingRateIdentifier exists
            then True // covered by type
                // the rule is understood as "including a check digit"

    condition UKEMIR_VR_2083_02: <"Identifier of the floating rate of leg 1 - Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "83" validationRule "Transaction"
    provision "If field 2.11 (Asset class) is populated with 'INTR' and field 2.14 is populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = INTR and underlyingIdentification exists
            then leg1 -> periodicPayment -> floatingRateIdentifier is absent

    condition UKEMIR_VR_2084_01: <"Indicator of the floating rate of leg 1 Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "84" validationRule "Transaction"
    provision "When populated, this field shall only contain one of the following values: 'ESTR', 'SONA', 'SOFR', 'EONA, 'EONS', 'EURI', 'EUUS', 'EUCH', 'GCFR', 'ISDA', 'LIBI', 'LIBO', 'MAAA', 'PFAN, 'TIBO', 'STBO', 'BBSW', 'JIBA', 'BUBO', 'CDOR', 'CIBO', 'MOSP', 'NIBO', 'PRBO', 'TLBO', 'WIBO, 'TREA', 'SWAP', 'FUSW', 'EFFR', 'OBFR', 'CZNA', or 'TONA'.  4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> periodicPayment -> floatingRateIndicator exists
            then [IndexEnum -> ESTR, IndexEnum -> SONA, IndexEnum -> SOFR, IndexEnum -> EONA, IndexEnum -> EONS, IndexEnum -> EURI, IndexEnum -> EUUS, IndexEnum -> EUCH, IndexEnum -> GCFR, IndexEnum -> ISDA, IndexEnum -> LIBI, IndexEnum -> LIBO, IndexEnum -> MAAA, IndexEnum -> PFAN, IndexEnum -> TIBO, IndexEnum -> STBO, IndexEnum -> BBSW, IndexEnum -> JIBA, IndexEnum -> BUBO, IndexEnum -> CDOR, IndexEnum -> CIBO, IndexEnum -> MOSP, IndexEnum -> NIBO, IndexEnum -> PRBO, IndexEnum -> TLBO, IndexEnum -> WIBO, IndexEnum -> TREA, IndexEnum -> SWAP, IndexEnum -> FUSW, IndexEnum -> EFFR, IndexEnum -> OBFR, IndexEnum -> CZNA, IndexEnum -> TONA] any = leg1 -> periodicPayment -> floatingRateIndicator

    condition UKEMIR_VR_2084_02: <"Indicator of the floating rate of leg 1 Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "84" validationRule "Transaction"
    provision "If field 2.11 (Asset class) is populated with 'INTR' and field 2.15 is populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = INTR and indicatorOfTheUnderlyingIndex exists
            then leg1 -> periodicPayment -> floatingRateIndicator is absent

    condition UKEMIR_VR_2085_01: <"Name of the floating rate of leg 1 Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "85" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'INTR', at least one of the following fields shall be populated: 2.13, 2.79, 2.85."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = INTR
            then underlyingIdentificationType exists
                    or leg1 -> fixedRate exists
                    or leg1 -> periodicPayment -> nameOfTheFloatingRate exists

    condition UKEMIR_VR_2085_02: <"Name of the floating rate of leg 1 Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "85" validationRule "Transaction"
    provision "When populated, this field shall contain up to 50 alphanumerical characters."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> periodicPayment -> nameOfTheFloatingRate exists
            then True

    condition UKEMIR_VR_2086_01: <"Floating rate day count convention of leg 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "86" validationRule "Transaction"
    provision " If field 2.85 is populated, then this field shall be populated and shall contain only one of the following values: 'A001', 'A002', 'A003', 'A004', 'A005', 'A006', 'A007', 'A008', 'A009', 'A010', 'A011', 'A012', 'A013', 'A014', 'A015', 'A016', 'A017',  'A018', 'A019', 'A020' or 'NARR'.  4 alphabetic characters.
    Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> periodicPayment -> nameOfTheFloatingRate exists
            then leg1 -> periodicPayment -> floatingRateDayCountConvention exists
                    and leg1 -> periodicPayment -> floatingRateDayCountConvention exists
            else leg1 -> periodicPayment -> floatingRateDayCountConvention is absent

    condition UKEMIR_VR_2087_01: <"Floating rate payment frequency period of leg 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "87" validationRule "Transaction"
    provision "If field 2.85 is populated, then this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK', 'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> periodicPayment -> nameOfTheFloatingRate exists
            then leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriod exists
                    and [FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL, FrequencyPeriodEnum -> EXPI, FrequencyPeriodEnum -> ADHO] any = leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriod
            else leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriod is absent

    condition UKEMIR_VR_2088_01: <"Floating rate payment frequency period multiplier of leg 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "104" validationRule "Transaction"
    provision "If field 2.87 is populated with 'EXPI', 'YEAR', 'MNTH', 'WEEK' or 'DAIL', then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [FrequencyPeriodEnum -> EXPI, FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL] any = leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriod
            then leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier exists and leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier >= 0
            else leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier is absent

    condition UKEMIR_VR_2089_01: <"Floating rate reference period of leg 1 - time period">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "89" validationRule "Transaction"
    provision "If field 2.85 is populated, then this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK' ,'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> periodicPayment -> nameOfTheFloatingRate exists
            then leg1 -> periodicPayment -> floatingRateReferencePeriod exists
                    and [FrequencyPeriodEnum -> EXPI, FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL] any = leg1 -> periodicPayment -> floatingRateReferencePeriod
            else leg1 -> periodicPayment -> floatingRateReferencePeriod is absent

    condition UKEMIR_VR_2090_01: <"Floating rate reference period of leg 1 - multiplier">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "90" validationRule "Transaction"
    provision "If field 2.89 is populated with 'EXPI', 'YEAR', 'MNTH', 'WEEK'or 'DAIL', then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [FrequencyPeriodEnum -> EXPI, FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL] any = leg1 -> periodicPayment -> floatingRateReferencePeriod
            then leg1 -> periodicPayment -> floatingRateReferencePeriodMultiplier exists and leg1 -> periodicPayment -> floatingRateReferencePeriodMultiplier < 1000 and leg1 -> periodicPayment -> floatingRateReferencePeriodMultiplier >= 0
            else leg1 -> periodicPayment -> floatingRateReferencePeriodMultiplier is absent

    condition UKEMIR_VR_2091_01: <"Floating rate reset frequency period of leg 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "91" validationRule "Transaction"
      provision "If field 2.85 is populated, then this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK' ,'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> periodicPayment -> nameOfTheFloatingRate exists
            then leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod exists
                    and [FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL, FrequencyPeriodEnum -> ADHO, FrequencyPeriodEnum -> EXPI] any = leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod
            else leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod is absent

    condition UKEMIR_VR_2092_01: <"Floating rate reset frequency multiplier of leg 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "92" validationRule "Transaction"
      provision "If field 2.91 is populated with 'EXPI', 'YEAR', 'MNTH', 'WEEK' or 'DAIL' , then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank"]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod exists
                    and [FrequencyPeriodEnum -> EXPI, FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL] any = leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod
            then leg1 -> periodicPayment -> floatingRateResetFrequencyMultiplier exists and leg1 -> periodicPayment -> floatingRateResetFrequencyMultiplier >= 0 and leg1 -> periodicPayment -> floatingRateResetFrequencyMultiplier < 1000
            else leg1 -> periodicPayment -> floatingRateResetFrequencyMultiplier is absent

    condition UKEMIR_VR_2093_01: <"Spread of leg 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "93" validationRule "Transaction"
      provision "If field 2.15 or 2.85 is populated, then this field shall be populated and shall contain:
                    1. up to 18 numeric characters including up to 13 decimals, if spread is expressed as monetary value,
                    The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
                    The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if indicatorOfTheUnderlyingIndex exists
                    or leg1 -> periodicPayment -> nameOfTheFloatingRate exists
            then if leg1 -> spreadNotation = Monetary
                then leg1 -> spread -> monetary exists

    condition UKEMIR_VR_2093_02: <"Spread of leg 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "93" validationRule "Transaction"
      provision "If field 2.15 or 2.85 is populated, then this field shall be populated and shall contain:
                    2. up to 11 numeric characters including up to 10 decimals, if spread is expressed as percentage,
                    The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
                    The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if indicatorOfTheUnderlyingIndex exists
                    or leg1 -> periodicPayment -> nameOfTheFloatingRate exists
            then if leg1 -> spreadNotation = Percentage
                then leg1 -> spread -> percentage exists

    condition UKEMIR_VR_2093_03: <"Spread of leg 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "93" validationRule "Transaction"
      provision "If field 2.15 or 2.85 is populated, then this field shall be populated and shall contain:
                    3. up to 5 numeric characters, if spread is expressed as basis points.
                    The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
                    The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if (indicatorOfTheUnderlyingIndex exists or leg1 -> periodicPayment -> nameOfTheFloatingRate exists)
            then if leg1 -> spreadNotation = Basis
                then leg1 -> spread -> basis exists

    condition UKEMIR_VR_2094_01: <"Spread currency of leg 1 condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "94" validationRule "Interest Rates"
      provision "If field 2.93 is populated with a monetary value, this field should be populated with ISO 4217 Currency Code (official list only), 3 alphabetical characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> spread -> monetary exists
            then leg1 -> spreadCurrency exists
            else leg1 -> spreadCurrency is absent

    condition UKEMIR_VR_2094_02: <"Spread currency of leg 1 condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "94" validationRule "Interest Rates"
      provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX. "]
        if IsVRAllowedForActionType(actionType)
        then if leg1 -> spreadCurrency exists
            then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, // ISOCurrencyCodeEnum -> XEU,
                    // ISOCurrencyCodeEnum -> XFU, //T
                    ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> leg1 -> spreadCurrency

    condition UKEMIR_VR_2095_01: <"Fixed rate of leg 2 Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "95" validationRule "Interest Rates"
      provision "If field 2.11 (Asset class) is populated with 'INTR' and field 2.10 (Contract type) is populated with 'FRAS', 'SWAP' or 'SWPT', one of the following fields shall be populated: 2.95 or 2.101. The other field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = INTR
                    and [CommonContractType -> FRAS, CommonContractType -> SWAP, CommonContractType -> SWPT] any = contractType
            then (leg2 -> fixedRate exists and leg2 -> periodicPayment -> nameOfTheFloatingRate is absent)
                    or (leg2 -> fixedRate is absent and leg2 -> periodicPayment -> nameOfTheFloatingRate exists)

    condition UKEMIR_VR_2095_02: <"Fixed rate of leg 2 Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "95" validationRule "Interest Rates"
      provision "When populated, this field shall contain up to 11 numerical characters including up to 10 decimals. The decimal mark is not counted as a numerical character. If populated, it shall be represented with a dot. Negative values are allowed. The negative symbol, if populated, is not counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> fixedRate exists then True

    condition UKEMIR_VR_2096_01: <"Fixed rate day count convention leg 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "96" validationRule "Transaction"
      provision "If field 2.95 is populated, then this field shall be populated and shall contain only one of the following values: 'A001', 'A002', 'A003', 'A004','A005', 'A006', 'A007', 'A008', 'A009', 'A010', 'A011', 'A012', 'A013', 'A014', 'A015', 'A016', 'A017', 'A018', 'A019', 'A020' or 'NARR'. 4 alphanumerical characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> fixedRate exists
                    and leg2 -> periodicPayment -> fixedRateDayCountConvention exists
            then True
            else leg2 -> periodicPayment -> fixedRateDayCountConvention is absent

    condition UKEMIR_VR_2097_01: <"Fixed rate payment frequency period leg 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "97" validationRule "Transaction"
      provision "If field 2.95 is populated, this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK', 'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> fixedRate exists
                    and [FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL, FrequencyPeriodEnum -> ADHO, FrequencyPeriodEnum -> EXPI] any = leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriod
            then True
            else leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriod is absent

    condition UKEMIR_VR_2098_01: <"Fixed rate payment frequency period multiplier leg 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "98" validationRule "Transaction"
      provision "If field 2.97 is populated with 'EXPI', 'YEAR', 'MNTH', 'WEEK' or 'DAIL', then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriod exists
            then if [FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL, FrequencyPeriodEnum -> EXPI] any = leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriod and leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier >= 0
                then True
                else False
            else leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier is absent

    condition UKEMIR_VR_2099_01: <"Identifier of the floating rate of leg 2 - Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "99" validationRule "Transaction"
      provision "When populated, this field shall contain 12 alphanumerical characters and a check digit."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> periodicPayment -> floatingRateIdentifier exists
            then True

    condition UKEMIR_VR_2099_02: <"Identifier of the floating rate of leg 2 - Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "99" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'INTR' and field 2.14 is populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = INTR and underlyingIdentification exists
            then leg2 -> periodicPayment -> floatingRateIdentifier is absent

    condition UKEMIR_VR_2100_01: <"Indicator of the floating rate of leg 2 Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "100" validationRule "Transaction"
    provision "When populated, this field shall only contain one of the following values: 'ESTR', 'SONA', 'SOFR', 'EONA, 'EONS', 'EURI', 'EUUS', 'EUCH', 'GCFR', 'ISDA', 'LIBI', 'LIBO', 'MAAA', 'PFAN, 'TIBO', 'STBO', 'BBSW', 'JIBA', 'BUBO', 'CDOR', 'CIBO', 'MOSP', 'NIBO', 'PRBO', 'TLBO', 'WIBO, 'TREA', 'SWAP', 'FUSW', 'EFFR', 'OBFR', 'CZNA', or 'TONA'.  4 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> periodicPayment -> floatingRateIndicator exists
            then [IndexEnum -> ESTR, IndexEnum -> SONA, IndexEnum -> SOFR, IndexEnum -> EONA, IndexEnum -> EONS, IndexEnum -> EURI, IndexEnum -> EUUS, IndexEnum -> EUCH, IndexEnum -> GCFR, IndexEnum -> ISDA, IndexEnum -> LIBI, IndexEnum -> LIBO, IndexEnum -> MAAA, IndexEnum -> PFAN, IndexEnum -> TIBO, IndexEnum -> STBO, IndexEnum -> BBSW, IndexEnum -> JIBA, IndexEnum -> BUBO, IndexEnum -> CDOR, IndexEnum -> CIBO, IndexEnum -> MOSP, IndexEnum -> NIBO, IndexEnum -> PRBO, IndexEnum -> TLBO, IndexEnum -> WIBO, IndexEnum -> TREA, IndexEnum -> SWAP, IndexEnum -> FUSW, IndexEnum -> EFFR, IndexEnum -> OBFR, IndexEnum -> CZNA, IndexEnum -> TONA] any = leg2 -> periodicPayment -> floatingRateIndicator

    condition UKEMIR_VR_2100_02: <"Indicator of the floating rate of leg 2 Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "100" validationRule "Transaction"
    provision "If field 2.11 (Asset class) is populated with 'INTR' and field 2.15 is populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = INTR and indicatorOfTheUnderlyingIndex exists
            then leg2 -> periodicPayment -> floatingRateIndicator is absent

    condition UKEMIR_VR_2101_01: <"Name of the floating rate of leg 2 Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "101" validationRule "Transaction"
    provision "If field 2.11 (Asset class) is populated with 'INTR' and field 2.10 (Contract type) is populated with 'FRAS', 'SWAP' or 'SWPT', one of the following fields shall be populated: 2.95 or 2.101. The other field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = INTR
                    and [CommonContractType -> FRAS, CommonContractType -> SWAP, CommonContractType -> SWPT] any = contractType
            then leg2 -> fixedRate exists
                    or leg2 -> periodicPayment -> nameOfTheFloatingRate exists

    condition UKEMIR_VR_2101_02: <"Name of the floating rate of leg 2 Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "101" validationRule "Transaction"
    provision "When populated, this field shall contain up to 50 alphanumerical characters."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> periodicPayment -> nameOfTheFloatingRate exists
            then True

    condition UKEMIR_VR_2102_01: <"Floating rate day count convention of leg 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "102" validationRule "Transaction"
    provision " If field 2.101 is populated, then this field shall be populated and shall contain only one of the following values: 'A001', 'A002', 'A003', 'A004', 'A005', 'A006', 'A007', 'A008', 'A009', 'A010', 'A011', 'A012', 'A013', 'A014', 'A015', 'A016', 'A017',  'A018', 'A019', 'A020' or 'NARR'.  4 alphabetic characters.
    Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> periodicPayment -> nameOfTheFloatingRate exists
            then leg2 -> periodicPayment -> floatingRateDayCountConvention exists
                    and leg2 -> periodicPayment -> floatingRateDayCountConvention exists
            else leg2 -> periodicPayment -> floatingRateDayCountConvention is absent

    condition UKEMIR_VR_2103_01: <"Floating rate payment frequency period of leg 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "103" validationRule "Transaction"
    provision "If field 2.101 is populated, then this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK', 'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> periodicPayment -> nameOfTheFloatingRate exists
            then leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriod exists
                    and [FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL, FrequencyPeriodEnum -> ADHO, FrequencyPeriodEnum -> EXPI] any = leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriod
            else leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriod is absent

    condition UKEMIR_VR_2104_01: <"Floating rate payment frequency period multiplier of leg 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "104" validationRule "Transaction"
    provision "If field 2.103 is populated with 'EXPI', 'YEAR', 'MNTH', 'WEEK' or 'DAIL', then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL, FrequencyPeriodEnum -> EXPI] any = leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriod
            then leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier exists and leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier >= 0
            else leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier is absent

    condition UKEMIR_VR_2105_01: <"Floating rate reference period of leg 2 - time period">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "105" validationRule "Transaction"
    provision "If field 2.101 is populated, then this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK' ,'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> periodicPayment -> nameOfTheFloatingRate exists
            then leg2 -> periodicPayment -> floatingRateReferencePeriod exists
                    and [FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL] any = leg2 -> periodicPayment -> floatingRateReferencePeriod
            else leg2 -> periodicPayment -> floatingRateReferencePeriod is absent

    condition UKEMIR_VR_2106_01: <"Floating rate reference period of leg 2 - multiplier">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "106" validationRule "Transaction"
    provision "If field 2.105 is populated with 'EXPI', 'YEAR', 'MNTH', 'WEEK'or 'DAIL', then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> periodicPayment -> floatingRateReferencePeriod exists
                    and [FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL] any = leg2 -> periodicPayment -> floatingRateReferencePeriod
            then leg2 -> periodicPayment -> floatingRateReferencePeriodMultiplier exists and leg2 -> periodicPayment -> floatingRateReferencePeriodMultiplier >= 0 and leg2 -> periodicPayment -> floatingRateReferencePeriodMultiplier < 1000
            else leg2 -> periodicPayment -> floatingRateReferencePeriodMultiplier is absent

    condition UKEMIR_VR_2107_01: <"Floating rate reset frequency period of leg 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "107" validationRule "Transaction"
      provision "If field 2.101 is populated, then this field shall be populated and shall contain only one of the following values: 'YEAR', 'MNTH', 'WEEK' ,'DAIL', 'ADHO' or 'EXPI'. 4 alphabetic characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> periodicPayment -> nameOfTheFloatingRate exists
            then leg2 -> periodicPayment -> floatingRateResetFrequencyPeriod exists
                    and [FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL, FrequencyPeriodEnum -> ADHO, FrequencyPeriodEnum -> EXPI] any = leg2 -> periodicPayment -> floatingRateResetFrequencyPeriod
            else leg2 -> periodicPayment -> floatingRateResetFrequencyPeriod is absent

    condition UKEMIR_VR_2108_01: <"Floating rate reset frequency multiplier of leg 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "108" validationRule "Transaction"
      provision "If field 2.107 is populated with 'EXPI', 'YEAR', 'MNTH', 'WEEK' or 'DAIL', then this field shall be populated and shall contain any integer value greater than or equal to zero up to 3 numeric characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [FrequencyPeriodEnum -> EXPI, FrequencyPeriodEnum -> YEAR, FrequencyPeriodEnum -> MNTH, FrequencyPeriodEnum -> WEEK, FrequencyPeriodEnum -> DAIL] any = leg2 -> periodicPayment -> floatingRateResetFrequencyPeriod
            then leg2 -> periodicPayment -> floatingRateResetFrequencyMultiplier exists and 0 <= leg2 -> periodicPayment -> floatingRateResetFrequencyMultiplier and leg2 -> periodicPayment -> floatingRateResetFrequencyMultiplier < 1000
            else leg2 -> periodicPayment -> floatingRateResetFrequencyMultiplier is absent

    condition UKEMIR_VR_2109_01: <"Spread of leg 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "109" validationRule "Transaction"
      provision "If field 2.101 is populated, then this field shall be populated and shall contain:
                    1. up to 18 numeric characters including up to 13 decimals, if spread is expressed as monetary value,
                The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
                The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if (leg2 -> periodicPayment -> nameOfTheFloatingRate exists)
            then if (leg2 -> spreadNotation = Monetary)
                then (leg2 -> spread -> monetary exists)

    condition UKEMIR_VR_2109_02: <"Spread of leg 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "109" validationRule "Transaction"
      provision "If field 2.101 is populated, then this field shall be populated and shall contain:
                    2. up to 11 numeric characters including up to 10 decimals, if spread is expressed as percentage,
                The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
                The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if (leg2 -> periodicPayment -> nameOfTheFloatingRate exists)
            then if (leg2 -> spreadNotation = Percentage)
                then (leg2 -> spread -> percentage exists)

    condition UKEMIR_VR_2109_03: <"Spread of leg 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "109" validationRule "Transaction"
      provision "If field 2.101 is populated, then this field shall be populated and shall contain:
                    3. up to 5 numeric characters, if spread is expressed as basis points.
                The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
                The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if (leg2 -> periodicPayment -> nameOfTheFloatingRate exists)
            then if (leg2 -> spreadNotation = Basis)
                then (leg2 -> spread -> basis exists)

    condition UKEMIR_VR_2110_01: <"Spread currency of leg 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "110" validationRule "Interest Rates"
      provision "If field 2.109 is populated with a monetary value, this field should be populated with ISO 4217 Currency Code (official list only), 3 alphabetical characters. The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if leg2 -> spread -> monetary exists
            then leg2 -> spreadCurrency exists
                    and [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, // ISOCurrencyCodeEnum -> XEU, ISOCurrencyCodeEnum -> XFU, //TODO
                        ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> leg2 -> spreadCurrency
            else leg2 -> spreadCurrency is absent

    condition UKEMIR_VR_2111_01: <"Package transaction spread Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "111" validationRule "Transaction"
      provision "If 2.6 Package identifier is populated and field 2.53 Package transaction price is blank, this field shall be populated and shall contain:
                Up to 18 numeric characters including up to 13 decimals, if spread is expressed as monetary value,
                The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
                The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if packageIdentifier exists and packageTransactionPrice is absent
            then if packageTransactionSpread exists
                then if packageTransactionSpreadNotation = Monetary
                    then packageTransactionSpread -> monetary exists

    condition UKEMIR_VR_2111_02: <"Package transaction spread Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "111" validationRule "Transaction"
      provision "If 2.6 Package identifier is populated and field 2.53 Package transaction price is blank, this field shall be populated and shall contain:
                Up to 11 numeric characters including up to 10 decimals, if spread is expressed as percentage,
                The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
                The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if packageIdentifier exists and packageTransactionPrice is absent
            then if packageTransactionSpread exists
                then if packageTransactionSpreadNotation = Percentage
                    then packageTransactionSpread -> percentage exists

    condition UKEMIR_VR_2111_03: <"Package transaction spread Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "111" validationRule "Transaction"
      provision "If 2.6 Package identifier is populated and field 2.53 Package transaction price is blank, this field shall be populated and shall contain:
                Up to 5 numeric characters, if spread is expressed as basis points.
                The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
                The negative symbol, if populated, shall not be counted as a numerical character."]
        if IsVRAllowedForActionType(actionType)
        then if packageIdentifier exists and packageTransactionPrice is absent
            then if packageTransactionSpread exists
                then if packageTransactionSpreadNotation = Basis
                    then packageTransactionSpread -> basis exists

    condition UKEMIR_VR_2111_04: <"Package transaction spread Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "111" validationRule "Transaction"
      provision "If field 2.6 Package identifier is not populated or if field 2.53 Package transaction price is populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if packageIdentifier is absent or packageTransactionPrice exists
            then packageTransactionSpread is absent

    condition UKEMIR_VR_2112_01: <"Package transaction spread currency Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "112" validationRule "Transaction"
      provision "If field 2.111 is populated with a monetary value, this field should be populated with ISO 4217 Currency Code (official list only), 3 alphabetical characters."]
        if IsVRAllowedForActionType(actionType)
        then if packageTransactionSpread exists
                    and packageTransactionSpreadNotation = Monetary
            then packageTransactionSpreadCurrency exists
            else packageTransactionSpreadCurrency is absent

    condition UKEMIR_VR_2112_02: <"Package transaction spread currency Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "112" validationRule "Transaction"
      provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        if IsVRAllowedForActionType(actionType)
        then if packageTransactionSpreadCurrency exists
            then if [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] any = packageTransactionSpreadCurrency
                then False

//Section 2i - Foreign Exchange
    condition UKEMIR_VR_2113_01: <"Exchange rate 1 Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "113" validationRule "Transaction"
    provision "If field 2.11 (Asset class) is populated with 'CURR' then at least one field out of fields 2.113 and 2.114 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = CURR
            then exchangeRate exists or forwardExchangeRate exists

    condition UKEMIR_VR_2113_02: <"Exchange Rate 1 Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "113" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CURR' and 2.10 (Contract type) is populated with 'FORW' then only one field out of fields 2.113 and 2.114 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = CURR and contractType = FORW
            then (exchangeRate exists and forwardExchangeRate is absent)
                    or (exchangeRate is absent and forwardExchangeRate exists)

    condition UKEMIR_VR_2113_03: <"Exchange Rate 1 Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "113" validationRule "Transaction"
      provision "When populated, this field shall contain any value greater than zero up to 18 numeric digits including up to 13 decimals. The decimal mark is not counted as a numerical character. If populated, it shall be represented with a  dot."]
        if IsVRAllowedForActionType(actionType)
        then if exchangeRate exists then exchangeRate > 0.0

    condition UKEMIR_VR_2114_01: <"Forward Exchange Rate Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "114" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CURR' then at least one field out of fields 2.113 and 2.114 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = CURR
            then exchangeRate exists or forwardExchangeRate exists

    condition UKEMIR_VR_2114_02: <"Forward Exchange Rate Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "114" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CURR' and 2.10 (Contract type) is populated with 'FORW' then only one field out of fields 2.113 and 2.114 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = CURR and contractType = FORW
            then (exchangeRate exists and forwardExchangeRate is absent)
                    or (exchangeRate is absent and forwardExchangeRate exists)

    condition UKEMIR_VR_2114_03: <"Forward Exchange Rate Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "114" validationRule "Transaction"
      provision "When populated, this field shall contain any value greater than zero up to 18 numeric digits including up to 13 decimals. The decimal mark is not counted as a numerical character. If populated, it shall be represented with a  dot."]
        if IsVRAllowedForActionType(actionType)
        then if forwardExchangeRate exists
            then forwardExchangeRate > 0.0

    condition UKEMIR_VR_2115_01: <"Exchange Rate Basis Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "115" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CURR', this field shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = CURR then exchangeRateBasis exists

    condition UKEMIR_VR_2115_02: <"Exchange Rate Basis Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "115" validationRule "Transaction"
      provision "When populated, this field shall contain 7 characters representing two ISO 4217 currency codes separated by / ."]
        if IsVRAllowedForActionType(actionType)
        then if exchangeRateBasis exists then True

    condition UKEMIR_VR_2116_01: <"Base product">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "116" validationRule "Transaction"
        provision "If field 2.11 is populated with 'COMM', this field shall be populated and shall contain only  one of the following values: 'AGRI', 'NRGY',  'ENVR', 'FRGT', 'FRTL', 'INDP', 'METL', 'MCEX', 'PAPR', 'POLY' , 'INFL' 'OEST', 'OTHC' or 'OTHR'. Otherwise this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = COMM
            then baseProduct exists
                    and ["AGRI", "NRGY", "ENVR", "FRGT", "FRTL", "INDP", "METL", "MCEX", "PAPR", "POLY", "INFL", "OEST", "OTHC", "OTHR"] any = baseProduct
            else baseProduct is absent

    condition UKEMIR_VR_2117_01: <"Sub-product Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
      provision "If field 2.116 is populated with 'AGRI', this field shall be populated and shall contain only one of the following values: 'GROS', 'SOFT', 'POTA', 'OOLI', 'DIRY', 'FRST', 'SEAF', 'LSTK', 'GRIN' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "AGRI"
            then subProduct exists
                    and ["GROS", "SOFT", "POTA", "OOLI", "DIRY", "FRST", "SEAF", "LSTK", "GRIN", "OTHR"] any = subProduct

    condition UKEMIR_VR_2117_02: <"Sub-product Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
      provision "If field 2.116 is populated with 'NRGY', this field shall be populated and shall contain only one of the following values: 'ELEC', 'NGAS', 'OILP', 'COAL', 'INRG', 'RNNG', 'LGHT', 'DIST' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "NRGY"
            then subProduct exists
                    and ["ELEC", "NGAS", "OILP", "COAL", "INRG", "RNNG", "LGHT", "DIST", "OTHR"] any = subProduct

    condition UKEMIR_VR_2117_03: <"Sub-product Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
      provision "If field 2.116 is populated with 'ENVR', this field shall be populated and shall contain only one of the following values: 'EMIS', 'WTHR', 'CRBR' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "ENVR"
            then subProduct exists and ["EMIS", "WTHR", "CRBR", "OTHR"] any = subProduct

    condition UKEMIR_VR_2117_04: <"Sub-product Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
      provision "If field 2.116 is populated with 'FRGT', this field shall be populated and shall contain only one of the following values: 'WETF', 'DRYF', 'CSHP' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "FRGT"
            then subProduct exists and ["WETF", "DRYF", "CSHP", "OTHR"] any = subProduct

    condition UKEMIR_VR_2117_05: <"Sub-product Condition 5">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
        provision "If field 2.116 is populated with 'FRTL', this field shall be populated and shall contain only one of the following values: 'AMMO', 'DAPH', 'PTSH', SLPH', 'UREA', 'UAAN' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "FRTL"
            then subProduct exists
                    and ["AMMO", "DAPH", "PTSH", "SLPH", "UREA", "UAAN", "OTHR"] any = subProduct

    condition UKEMIR_VR_2117_06: <"Sub-product Condition 6">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
      provision "If field 2.116 is populated with 'INDP', this field shall be populated and shall contain only one of the following values: 'CSTR' or 'MFTG'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "INDP"
            then subProduct exists and ["CSTR", "MFTG"] any = subProduct

    condition UKEMIR_VR_2117_07: <"Sub-product Condition 7">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
    provision "If field 2.116 is populated with 'METL', this field shall be populated and shall contain only one of the following values: 'NPRM' or 'PRME'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "METL"
            then subProduct exists and ["NPRM", "PRME"] any = subProduct

    condition UKEMIR_VR_2117_08: <"Sub-product Condition 8">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
    provision "If field 2.116 is populated with 'PAPR', this field shall be populated and shall contain only one of the following values: 'CBRD', 'NSPT', 'PULP', 'RCVP' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "PAPR"
            then subProduct exists
                    and ["CBRD", "NSPT", "PULP", "RCVP", "OTHR"] any = subProduct

    condition UKEMIR_VR_2117_09: <"Sub-product Condition 9">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
    provision "If field 2.116 is populated with 'POLY', this field shall be populated and shall contain only one of the following values: 'PLST' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct = "POLY"
            then subProduct exists and ["PLST", "OTHR"] any = subProduct

    condition UKEMIR_VR_2117_10: <"Sub-product Condition 10">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "117" validationRule "Transaction"
      provision "If field 2.116 is populated with 'MCEX', 'INFL', 'OEST', 'OTHC' or 'OTHR', or if field 2.116 is blank, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if baseProduct exists
                    and ["MCEX", "INFL", "OEST", "OTHC", "OTHR"] any = baseProduct
            then subProduct is absent

    condition UKEMIR_VR_2118_01: <"Further sub-product Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'GROS', this field shall be populated and shall contain only one of the following values: 'FWHT', 'SOYB', 'CORN', 'RPSD', 'RICE' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "GROS"
            then ["FWHT", "SOYB", "CORN", "RPSD", "RICE", "OTHR"] any = furtherSubProduct

    condition UKEMIR_VR_2118_02: <"Further sub-product Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'SOFT', this field shall be populated and shall contain only one of the following values: 'CCOA', 'ROBU', 'WHSG', 'BRWN' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "SOFT"
            then ["CCOA", "ROBU", "WHSG", "BRWN", "OTHR"] any = furtherSubProduct

    condition UKEMIR_VR_2118_03: <"Further sub-product Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'OOLI', this field shall be populated and shall contain only one of the following values: 'LAMP' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "OOLI"
            then ["LAMP", "OTHR"] any = furtherSubProduct

    condition UKEMIR_VR_2118_04: <"Further sub-product Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'GRIN', this field shall be populated and shall contain only one of the following values: 'MWHT' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "GRIN"
            then ["MWHT", "OTHR"] any = furtherSubProduct

    condition UKEMIR_VR_2118_05: <"Further sub-product Condition 5">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'ELEC', this field shall be populated and shall contain only one of the following values: 'BSLD', 'FITR', 'PKLD', 'OFFP' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "ELEC"
            then ["BLSD", "FITR", "PKLD", "OFFP", "OTHR"] any = furtherSubProduct

    condition UKEMIR_VR_2118_06: <"Further sub-product Condition 7">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'NGAS', this field shall be populated and shall contain only one of the following values: 'GASP', 'LNGG', 'NBPG', 'NCGG', 'TTFG' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "NGAS"
            then ["GASP", "LNGG", "NBPG", "NCGG", "TTFG", "OTHR"] any = furtherSubProduct

    condition UKEMIR_VR_2118_07: <"Further sub-product Condition 7">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'OILP', this field shall be populated and shall contain only one of the following values: 'BAKK', 'BDSL', 'BRNT', 'BRNX', 'CNDA', 'COND', 'DSEL', 'DUBA', 'ESPO', 'ETHA', 'FUEL', 'FOIL', 'GOIL', 'GSLN', 'HEAT', 'JTFL', 'KERO', 'LLSO', 'MARS', 'NAPH', 'NGLO', 'TAPI', 'URAL', 'WTIO' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "OIP"
            then ["BAKK", "BDSL", "BRNT", "BRNX", "CNDA", "COND", "DSEL", "DUBA", "ESPO", "ETHA", "FUEL", "FOIL", "GOIL", "GSLN", "HEAT", "JTFL", "KERO", "LLSO", "MARS", "NAPH", "NGLO", "TAPI", "URAL", "WTIO", "OTHR"] any = furtherSubProduct

    condition UKEMIR_VR_2118_08: <"Further sub-product Condition 8">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'EMIS', this field shall be populated and shall contain only one of the following values: 'CERE', 'ERUE', 'EUAE', 'EUAA' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "EMIS"
            then ["CERE", "ERUE", "EUAE", "EUAA", "OTHR"] any = furtherSubProduct

    condition UKEMIR_VR_2118_09: <"Further sub-product Condition 9">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'WETF', this field shall be populated and shall contain only one of the following values: 'TNKR' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "WETF"
            then ["TNKR", "OTHR"] any = furtherSubProduct

    condition UKEMIR_VR_2118_10: <"Further sub-product Condition 10">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'DRYF', this field shall be populated and shall contain only one of the following values: 'DBCR' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "DRYF"
            then ["DBCR", "OTHR"] any = furtherSubProduct

    condition UKEMIR_VR_2118_11: <"Further sub-product Condition 11">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'NPRM', this field shall be populated and shall contain only one of the following values: 'ALUM', 'ALUA', 'CBLT', 'COPR', 'IRON', 'LEAD', 'MOLY', 'NASC', 'NICK', 'STEL', 'TINN', 'ZINC' or OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "NPRM"
            then ["ALUM", "ALUA", "CBLT", "COPR", "IRON", "LEAD", "MOLY", "NASC", "NICK", "STEL", "TINN", "ZINC", "OTHR"] any = furtherSubProduct

    condition UKEMIR_VR_2118_12: <"Further sub-product Condition 12">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'PRME', this field shall be populated and shall contain only one of the following values: 'GOLD', 'SLVR', 'PTNM', 'PLDM' or 'OTHR'."]
        if IsVRAllowedForActionType(actionType)
        then if subProduct = "PRME"
            then ["GOLD", "SLVR", "PRNM", "PLDM", "OTHR"] any = furtherSubProduct

    condition UKEMIR_VR_2118_13: <"Further sub-product Condition 13">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "118" validationRule "Transaction"
      provision "If field 2.117 is populated with 'POTA', 'DIRY', 'FRST', 'SEAF', 'LSTK', 'COAL', 'INRG', 'RNNG', 'LGHT', 'DIST', 'WTHR', 'CRBR', 'CSHP', 'AMMO', 'DAPH', 'PTSH', 'SLPH', 'UREA', 'UAAN', 'CSTR', 'MFTG', 'CBRD', 'NSPT', 'PULP', 'RCVP', 'PLST'or 'OTHR', or if 2.117 is blank, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if ["POTA", "DIRY", "FRST", "SEAF", "LSTK", "COAL", "INRG", "RNNG", "LGHT", "DIST", "WTHR", "CRBR", "CSHP", "AMMO", "DAPH", "PTSH", "SLPH", "UREA", "UAAN", "CSTR", "MFTG", "CBRD", "NSPT", "PULP", "RCVP", "PLST", "OTHR"] any = subProduct
            then furtherSubProduct is absent

    condition UKEMIR_VR_2119_01: <"Delivery point or zone Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "119" validationRule "Transaction"
        provision " If field 2.117 is populated with 'NGAS' or 'ELEC', this field shall be populated and shall contain 
                    - an EIC code as specified in the EIC code list and pertaining to a delivery point within the European Union or UK, or
                    - 16 alphanumerical characters XXXXXXXXXXXXXXXX if the delivery point is not within the European Union or UK.
                    Otherwise the field shall be left blank."]
    [regulatoryReference ISDA PeerReviewGroup date "20231020"
        provision " Format validation handled with type check EICIdentifier"]
        if IsVRAllowedForActionType(actionType)
        then if ["NGAS", "ELEC"] any = subProduct
            then (deliveryPoint
                extract (IsAcceptedEicCode(item) or item = "XXXXXXXXXXXXXXXX")
                then all = True)
            else deliveryPoint is absent

    condition UKEMIR_VR_2120_01: <"Interconnection Point Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "120" validationRule "Transaction"
        provision " If field 2.117  is populated with 'NGAS' or 'ELEC', this field  shall be populated and shall contain 
                    - an EIC code as specified in the EIC Area Codes (Z) or (Y) code list and pertaining to a interconnection point within the European Union or UK, or
                    - 16 alphanumerical characters XXXXXXXXXXXXXXXX if the interconnection point is not within the European Union or UK."]
    [regulatoryReference ISDA PeerReviewGroup date "20231020"
        provision " Format validation handled with type check EICIdentifier"]
        if IsVRAllowedForActionType(actionType)
        then if ["NGAS", "ELEC"] any = subProduct
            then interconnectionPoint exists
                    and (IsAcceptedEicCode(interconnectionPoint)
                        or interconnectionPoint = "XXXXXXXXXXXXXXXX")

    condition UKEMIR_VR_2121_01: <"Load Type Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "121" validationRule "Transaction"
        provision " If field 2.119 or 2.120 is populated with EIC code, this field shall be populated and shall contain one of the following values: 'BSLD', 'PKLD', 'OFFP', 'HABH', 'SHPD', 'GASD' or 'OTHR'. 4 alphabetical characters.
                    Otherwise the field shall be left blank."]
    [regulatoryReference ISDA PeerReviewGroup date "20231103"
        provision "The condition on the values are being performed via the enum EnergyLoadType1Code used to defined the type of field loadType"]
        if IsVRAllowedForActionType(actionType)
        then deliveryPoint
            extract dp [
                if IsAcceptedEicCode(dp) or IsAcceptedEicCode(interconnectionPoint)
                then loadType exists
                else loadType is absent
            ]
            then all = True

    condition UKEMIR_VR_2122_01: <"Delivery interval start time Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "122" validationRule "Transaction"
        provision " If field 2.119 or 2.120 is populated with EIC code, this field shall be populated in a common input format: hh:mm:ssZ.
                    Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> deliveryStartTime exists
                else dr -> deliveryStartTime is absent
            ]
            then all = True

    condition UKEMIR_VR_2123_01: <"Delivery interval end time Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "123" validationRule "Transaction"
        provision " If field 2.119 or 2.120 is populated with EIC code, this field shall be populated in a common input format: hh:mm:ssZ.
                    Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> deliveryEndTime exists
                else dr -> deliveryEndTime is absent
            ]
            then all = True

    condition UKEMIR_VR_2124_01: <" Delivery start date">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "124" validationRule "Transaction"
      provision "If field 2.119 or 2.120 is populated with EIC code, this field shall be populated in a ISO 8601 common input format: YYYY-MM-DD. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> deliveryStartDate exists
                else dr -> deliveryStartDate is absent
            ]
            then all = True

    condition UKEMIR_VR_2125_01: <"Delivery end date">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "125" validationRule "Transaction"
      provision "If field 2.119 or 2.120 is populated with EIC code, this field shall be populated in a ISO 8601 common input format: YYYY-MM-DD. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> deliveryEndDate exists
                else dr -> deliveryEndDate is absent
            ]
            then all = True

    condition UKEMIR_VR_2126_01: <"Duration Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "123" validationRule "Transaction"
        provision " If field 2.119 or 2.120 is populated with EIC code, this field shall be populated and shall contain one of the following values: 'MNUT', 'HOUR', 'DASD', 'WEEK', 'MNTH', 'QURT', 'SEAS',
                    'YEAR' or 'OTHR'. 4 alphabetical characters.
                    Otherwise the field shall be left blank."]
    [regulatoryReference ISDA PeerReviewGroup date "20231102"
        provision "The condition on the values are being performed via the enum DurationType1Code used to defined the type of field duration"]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> duration exists
                else dr -> duration is absent
            ]
            then all = True

    condition UKEMIR_VR_2127_01: <"Days of the week Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "127" validationRule "Transaction"
    provision " If field 2.119 or 2.120 is populated with EIC code, this field shall be populated and shall contain  at least one of the following values: 'WDAY', 'WEND', 'MOND', 'TUED', 'WEDD', 'THUD', 'FRID', 'SATD', 'SUND', 'XBHL', 'IBHL'.
                4 alphabetical characters.
                Otherwise the field shall be left blank."]
    [regulatoryReference ISDA PeerReviewGroup date "20231020"
        provision "Not fully modelled. The following EIC referentiel must be made available in some way to digitizers: https://data.europa.eu/data/datasets/acer-remit-list-of-accepted-delivery-point-or-zone-eic-codes/?locale=en"]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then ["WDAY", "WEND", "MOND", "TUED", "WEDD", "THUD", "FRID", "SATD", "SUND", "XBHL", "IBHL"] = dr -> daysOfTheWeek
                else dr -> daysOfTheWeek is absent
            ]
            then all = True

    condition UKEMIR_VR_2128_01: <"Delivery capacity">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "128" validationRule "Transaction"
      provision "If field 2.119 or 2.120 is populated with EIC code, this field shall be populated and shall contain up to 20 numeric digits including up to 19 decimals. The decimal mark is not counted
       as a numeric character. If populated, it shall be represented by a dot. Negative values are allowed. The negative symbol, if populated, is not counted as a numerical character. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> deliveryCapacity exists
                else dr -> deliveryCapacity is absent
            ]
            then all = True

    condition UKEMIR_VR_2129_01: <"Quantity Unit">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "129" validationRule "Transaction"
      provision "If field 2.119 or 2.120 is populated with EIC code, this field shall be populated and shall contain one of the following values: 'KWAT', 'KWHH', 'KWHD', 'MWAT', 'MWHH',
      'MWHD', 'GWAT', 'GWHH', 'GWHD', 'THMD', 'KTMD', 'MTMD', 'CMPD', 'MCMD', 'BTUD', 'MBTD', 'MJDD', 'HMJD', 'MMJD', or 'GJDD'.Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> quantityUnit exists
                else dr -> quantityUnit is absent
            ]
            then all = True

    condition UKEMIR_VR_2130_01: <"Price/time interval quantity">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "130" validationRule "Transaction"
      provision "If field 2.119 or 2.120 is populated with EIC code, this field shall be populated and shall contain up to 20 numeric characters including up to 19 decimals. The decimal mark
       is not counted as a numeric character. If populated, it shall be represented by a dot. Negative values are allowed. The negative symbol, if populated, is not counted as a numeric character. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> priceTimeIntervalQuantity exists
                else dr -> priceTimeIntervalQuantity is absent
            ]
            then all = True

    condition UKEMIR_VR_2131_01: <" Currency of the price/time interval quantity">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "131" validationRule "Transaction"
      provision "If field 2.119 or 2.120 is populated with EIC code, this field shall be populated and shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters.
      The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then deliveryReport
            extract dr [
                if IsAcceptedEicCode(deliveryPoint)
                        or IsAcceptedEicCode(interconnectionPoint)
                then dr -> currencyOfThePriceTimeIntervalQuantity exists
                else dr -> currencyOfThePriceTimeIntervalQuantity is absent
            ]
            then all = True

//Section 2L - Options
    condition UKEMIR_VR_2132_01: <"Option type">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "132" validationRule "Transaction"
    provision " If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT' this field shall be populated and shall contain one of the following values: 'PUTO', 'CALL' or 'OTHR'. 4 alphabetical characters.
    Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [CommonContractType -> OPTN, CommonContractType -> SWPT] any = contractType
            then optionType exists
                    and [OptionTypeCode -> PUTO, OptionTypeCode -> CALL, OptionTypeCode -> OTHR] any = optionType
            else optionType is absent

    condition UKEMIR_VR_2133_01: <"Option style">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "133" validationRule "Transaction"
    provision " If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT' this field shall be populated and shall contain  one of the following values: 'AMER', 'BERM', or 'EURO'. Up to 4 alphabetical characters.
    Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [CommonContractType -> OPTN, CommonContractType -> SWPT] any = contractType
            then optionStyle exists
                    and [OptionStyleEnum -> AMER, OptionStyleEnum -> BERM, OptionStyleEnum -> EURO] any = optionStyle
            else optionStyle is absent

    condition UKEMIR_VR_2134_01: <"Strike price Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "134" validationRule "Transaction"
      provision "If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT' this field shall be populated"]
        if IsVRAllowedForActionType(actionType)
        then if [CommonContractType -> OPTN, CommonContractType -> SWPT] any = contractType
            then strikePrice exists

    condition UKEMIR_VR_2134_02: <"Strike price Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "134" validationRule "Transaction"
      provision "If field 2.10 (Contract type) is populated with 'SWAP' or 'CFDS' this field is optional"]
        if IsVRAllowedForActionType(actionType)
        then if [CommonContractType -> SWAP, CommonContractType -> CFDS] any = contractType
            then (strikePrice exists or strikePrice is absent)

    condition UKEMIR_VR_2134_03: <"Strike price Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "134" validationRule "Transaction"
      provision "When populated, this field shall contain: Up to 18 numeric characters including up to 13 decimals, if Strike price is expressed as monetary amount.
        The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. Negative values are allowed. The negative symbol, if populated, is not counted as a numeric character. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if strikePrice exists and strikePriceNotation = Monetary
            then strikePrice -> monetary exists

    condition UKEMIR_VR_2134_04: <"Strike price Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "134" validationRule "Transaction"
      provision "When populated, this field shall contain: Up to 11 numeric characters including up to 10 decimals if Strike price is expressed as percentage.
        The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. Negative values are allowed. The negative symbol, if populated, is not counted as a numeric character. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if strikePrice exists and strikePriceNotation = Percentage
            then strikePrice -> percentage exists

    condition UKEMIR_VR_2135_01: <"Effective date of the strike price">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "135" validationRule "Transaction"
      provision "If field 2.137 is populated, this field shall be populated in a common input format: YYYY-MM-DD.
        Otherwise it shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (strikePriceSchedule
            extract
                (if price -> monetary exists or price -> percentage exists
                then effectiveDate exists
                else effectiveDate is absent)
            then all = True)

    condition UKEMIR_VR_2136_01: <"End date of the strike price">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "136" validationRule "Transaction"
      provision "When populated, this field shall be reported in a common input format: YYYY-MM-DD."]
        if IsVRAllowedForActionType(actionType)
        then if strikePriceSchedule -> endDate exists then True

    condition UKEMIR_VR_2136_02: <"End date of the strike price">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "136" validationRule "Transaction"
      provision "If field 2.137 is not populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then (strikePriceSchedule
            extract
                (if price -> monetary is absent and price -> percentage is absent
                then endDate is absent
                else True)
            then all = True)

    // condition UKEMIR_VR_2137_01: <"Strike price in effect on associated effective date">
    // [docReference FCA UKEMIR ValidationRules table "2" dataElement "137" validationRule "Transaction"
    // provision "When populated, this field shall contain up to 18 numeric characters including up to 13 decimals, if Strike price is expressed as monetary amount.
    // The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
    // Negative values are allowed. The negative symbol, if populated, is not counted as a numeric character."]
    // // ToDo: Partially modelled
    // if IsVRAllowedForActionType(actionType)
    // then (strikePriceSchedule
    // extract
    // (if strikePriceNotationInEffectOnAssociatedEffectiveDate = Monetary
    // then strikePriceInEffectOnAssociatedEffectiveDateMonetary exists)
    // then all = True)
    // TODO SEE HERE
    // condition UKEMIR_VR_2137_02: <"Strike price in effect on associated effective date">
    // [docReference FCA UKEMIR ValidationRules table "2" dataElement "137" validationRule "Transaction"
    // provision "When populated, this field shall contain up to 11 numeric characters including up to 10 decimals, if Strike price is expressed as percentage.
    // The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
    // Negative values are allowed. The negative symbol, if populated, is not counted as a numeric character."]
    // if IsVRAllowedForActionType(actionType)
    // then (strikePriceSchedule
    // extract
    // (if strikePriceNotationInEffectOnAssociatedEffectiveDate = Percentage
    // then strikePriceInEffectOnAssociatedEffectiveDatePercentage exists)
    // then all = True)
    condition UKEMIR_VR_2138_01: <"Strike price currency/currency pair Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "138" validationRule "Transaction"
      provision "If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT' and field 2.11 (Asset class) is populated with value different than 'CURR' or 'INTR', this field shall be populated and shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters."]
        // ToDo: currency check not modelled
        if IsVRAllowedForActionType(actionType)
        then if [CommonContractType -> OPTN, CommonContractType -> SWPT] any = contractType
                    and [CommonAssetClass -> CURR, CommonAssetClass -> INTR] all <> assetClass
            then strikePriceCurrency exists

    condition UKEMIR_VR_2138_02: <"Strike price currency/currency pair Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "138" validationRule "Transaction"
      provision "If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT' and field 2.11 (Asset class) is populated with 'CURR', this field shall be populated  and shall contain 7 characters representing two ISO 4217 currency codes."]
        // ToDo: currency check not modelled
        if IsVRAllowedForActionType(actionType)
        then if [CommonContractType -> OPTN, CommonContractType -> SWPT] any = contractType
                    and assetClass = CURR
            then strikePriceCurrency exists

    condition UKEMIR_VR_2138_03: <"Strike price currency/currency pair Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "138" validationRule "Transaction"
      provision "The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX.
        Otherwise this field shall be let blank."]
        if IsVRAllowedForActionType(actionType)
        then if strikePriceCurrency exists
            then [
                    ISOCurrencyCodeEnum -> XAG to-string,
                    ISOCurrencyCodeEnum -> XAU to-string,
                    ISOCurrencyCodeEnum -> XBA to-string,
                    ISOCurrencyCodeEnum -> XBB to-string,
                    ISOCurrencyCodeEnum -> XBC to-string,
                    ISOCurrencyCodeEnum -> XBD to-string,
                    ISOCurrencyCodeEnum -> XDR to-string,
                    ISOCurrencyCodeEnum -> XPD to-string,
                    ISOCurrencyCodeEnum -> XPT to-string,
                    ISOCurrencyCodeEnum -> XXX to-string
                ] all <> strikePriceCurrency
            else strikePriceCurrency is absent

    condition UKEMIR_VR_2139_01: <"Option premium amount">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "139" validationRule "Transaction"
    provision "1. If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT' this field shall be populated and shall contain any value greater than or equal to zero up to 25 numeric characters including up to 5 decimals.
    The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.
    Otherwise this field shall be let blank. A default value '9999999999999999999999999' is accepted."]
        if IsVRAllowedForActionType(actionType)
        then if [CommonContractType -> OPTN, CommonContractType -> SWPT] any = contractType
            then optionPremiumAmount >= 0
            else optionPremiumAmount is absent

    condition UKEMIR_VR_2140_01: <"Option premium currency Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "140" validationRule "Transaction"
    provision "1. If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT' this field shall be populated and shall contain ISO 4217 Currency Code (official list only), 3 alphabetical characters.
        Otherwise this field shall be let blank."]
        if IsVRAllowedForActionType(actionType)
        then if [CommonContractType -> OPTN, CommonContractType -> SWPT] any = contractType
            then optionPremiumCurrency exists
            // To be replaced by dynamic list from ISO 4217
            // then ["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYN","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRU","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","UYI","UYU","UYW","UZS","VES","VND","VUV","WST","XAF","XAG","XAU","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XSU","XUA","XXX","YER","ZAR","ZMW","ZWL"] any = optionPremiumCurrency
            else optionPremiumCurrency is absent

    condition UKEMIR_VR_2140_02: <"Option premium currency Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "140" validationRule "Transaction"
    provision "2. The following special currency codes are not allowed: XAG, XAU, XBA, XBB, XBC, XBD, XDR, XEU, XFU, XPD, XPT, XXX."]
        // FYI - the following ISOCurrencyCodeEnum  are not present: XEU and XFU
        if IsVRAllowedForActionType(actionType)
        then [ISOCurrencyCodeEnum -> XAG, ISOCurrencyCodeEnum -> XAU, ISOCurrencyCodeEnum -> XBA, ISOCurrencyCodeEnum -> XBB, ISOCurrencyCodeEnum -> XBC, ISOCurrencyCodeEnum -> XBD, ISOCurrencyCodeEnum -> XDR, ISOCurrencyCodeEnum -> XPD, ISOCurrencyCodeEnum -> XPT, ISOCurrencyCodeEnum -> XXX] all <> optionPremiumCurrency

    condition UKEMIR_VR_2141_01: <"Option premium payment date Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "141" validationRule "Transaction"
    provision "If field 2.10 (Contract type) is populated with 'OPTN' or 'SWPT', this field shall be populated in a common input format: YYYY-MM-DD. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if [CommonContractType -> OPTN, CommonContractType -> SWPT] any = contractType
            then optionPremiumPaymentDate exists
            else optionPremiumPaymentDate is absent

    condition UKEMIR_VR_2142_01: <"Maturity date of the underlying Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "142" validationRule "Transaction"
    provision "If field 2.10 (Contract type) is populated with 'SWPT' this field shall be populated in a common input format: YYYY-MM-DD. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if contractType = SWPT
            then maturityDateOfTheUnderlying exists
            else maturityDateOfTheUnderlying is absent

    condition UKEMIR_VR_2142_02: <"Maturity date of the underlying Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "142" validationRule "Transaction"
    provision "The maturity date of the underlying should be equal or later than 2014-02-12."]
        if IsVRAllowedForActionType(actionType)
        then if maturityDateOfTheUnderlying exists
            then CompareDateTo(maturityDateOfTheUnderlying, 2014, 2, 12) >= 0

//Section 2m - Credit derivatives
    condition UKEMIR_VR_2143_01: <"Seniority Validation Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "143" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CRDT', this field shall be populated and shall contain one of the following values: 'SNDB', 'SBOD' or 'OTHR'. 4 alphabetical characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = CRDT
            then seniority exists
                    and [SeniorityEnum -> SNDB, SeniorityEnum -> SBOD, SeniorityEnum -> OTHR] any = seniority
            else seniority is absent

    condition UKEMIR_VR_2144_01: <"Reference entity Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "144" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CRDT', one of the fields 2.13 or 2.144 shall be populated."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = CRDT
            then referenceEntity exists or underlyingIdentificationType exists

    condition UKEMIR_VR_2144_02: <"Reference entity Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "144" validationRule "Transaction"
      provision "When populated, this field shall contain:
      -valid ISO 3166 code - 2 alphabetical characters, or
      -valid ISO 3166-2 code - 2 alphabetical characters followed by dash ('-'), followed by up to 3 alphanumerical characters, or
      -a valid ISO 17442 (LEI) included in the GLEIF database maintained by the Central Operating Unit. The status of the LEI shall be 'Issued', 'Lapsed', 'Pending transfer' or 'Pending archival'. Correct status of the LEI should be verified as of the date reported in the field 1.1 Reporting timestamp. Validation of the status should not be applied if 2.153 Event date is earlier than the day preceding the date reported in 1.1 Reporting timestamp. XXXXXXXXXXXXXXXXXX99 can be reported for non-EEA and non-UK entities that do not have LEI."]
        if IsVRAllowedForActionType(actionType)
        then if referenceEntity exists
            then if GetOrFetchLeiData(empty, referenceEntity) exists
                then LeiRegistrationStatusIsValid(
                            nonReportable -> enrichment -> leiData,
                            referenceEntity,
                            eventDate,
                            reportingTimestamp -> date
                        )
                else if StringLength(referenceEntity) < 7 and IsValidRefEntity(
                            referenceEntity
                        ) = True
                then True
                else False

    condition UKEMIR_VR_2144_03: <"Reference entity Validation Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "144" validationRule "Transaction"
      provision "The LEI shall pertain to a legal entity and not a branch."]
        if IsVRAllowedForActionType(actionType)
        then if referenceEntity exists and GetOrFetchLeiData(empty, referenceEntity) exists
            then GetOrFetchLeiData(empty, referenceEntity) -> entityCategory <> LeiCategoryEnum -> Branch

    condition UKEMIR_VR_2144_04: <"Reference entity Validation Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "144" validationRule "Transaction"
      provision "If field 2.11 is not populated with 'CRDT' or if field 2.13 is populated, this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass <> CRDT or underlyingIdentificationType exists
            then referenceEntity is absent

    condition UKEMIR_VR_2145_01: <"Series Validation Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "145" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CRDT' and field, 2.13 (Underlying identification type) is populated with 'X', this field shall be populated with a positive integer value. Up to 5 numerical characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = CRDT and underlyingIdentificationType = X
            then series exists and series >= 0
            else series is absent

    condition UKEMIR_VR_2146_01: <"Version Validation Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "146" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CRDT' and field 2.13 (Underlying identification type) is populated with 'X', this field shall be populated with a positive integer value. Up to 5 numerical characters. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = CRDT and underlyingIdentificationType = X
            then seriesVersion exists and seriesVersion >= 0
            else seriesVersion is absent

    condition UKEMIR_VR_2147_01: <"Index Factor Validation Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "147" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CRDT' and field 2.13 (Underlying identification type) is populated with 'X', this field shall be populated with any value between 0 and 1 (including 0 and 1). Up to 11 numeric characters, including up to 10 decimals. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot.Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = CRDT and underlyingIdentificationType = X
            then indexFactor exists and indexFactor >= 0 and indexFactor <= 1
            else indexFactor is absent

    condition UKEMIR_VR_2148_01: <"Tranche Validation Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "148" validationRule "Transaction"
      provision "If field 2.11 (Asset class) is populated with 'CRDT', this field shall be populated and shall contain one of the following values: 'TRUE' or 'FALSE'. Otherwise the field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if assetClass = CRDT
            then tranche exists and [True, False] any = tranche
            else tranche is absent

    condition UKEMIR_VR_2149_01: <"CDS index attachment point Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "149" validationRule "Transaction"
      provision "If field 2.148 is populated with 'TRUE', this field shall be populated with any value between 0 and 1 (including 0 and 1) up to 11 numeric characters, including up to 10 decimals. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot."]
        if IsVRAllowedForActionType(actionType)
        then if tranche = True
            then cdSIndexAttachmentPoint exists and cdSIndexAttachmentPoint >= 0 and cdSIndexAttachmentPoint <= 1

    condition UKEMIR_VR_2149_02: <"CDS index attachment point Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "149" validationRule "Transaction"
      provision "If field 2.148 is populated with 'FALSE', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if tranche = False then cdSIndexAttachmentPoint is absent

    condition UKEMIR_VR_2150_01: <"CDS index detachment point Validation Condition">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "150" validationRule "Transaction"
      provision "If field 2.148 is populated with 'TRUE', this field shall be populated with any value between 0 and 1 (including 0 and 1) up to 11 
      numeric characters, including up to 10 decimals. The decimal mark is not counted as a numeric character. If populated, it shall be represented by a dot. If field 2.148 is populated with 'FALSE', this field shall be left blank."]
        if IsVRAllowedForActionType(actionType)
        then if tranche = True
            then cdSIndexDetachmentPoint exists and cdSIndexDetachmentPoint >= 0 and cdSIndexDetachmentPoint <= 1
            else if tranche = False
            then cdSIndexDetachmentPoint is absent

//Section 2n - Modifications to the derivative
    condition UKEMIR_VR_2151_01: <"Action type Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "151" validationRule "Transaction"
      provision "This field shall contain one of the following values: 'NEWT', 'MODI', 'CORR', 'TERM', 'EROR', 'REVI', 'VALU', or 'POSC'. 4 alphabetical characters."]
        ([ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> TERM, ActionTypeEnum -> EROR, ActionTypeEnum -> REVI, ActionTypeEnum -> VALU, ActionTypeEnum -> POSC] any = actionType)

    condition UKEMIR_VR_2151_02: <"Action type Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "151" validationRule "Transaction"
      provision "The first report received for a given UTI by the reporting counterparty shall only contain value 'NEWT' or 'POSC' in this field."]
        // ToDo: Not modelled
        True

    condition UKEMIR_VR_2151_03: <"Action type Validation Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "151" validationRule "Transaction"
      provision "Only one report with the action type 'NEWT' or 'POSC' for a given combination of Counterparty ID-UTI shall be accepted. "]
        // ToDo: Not modelled
        True

    condition UKEMIR_VR_2151_04: <"Action type Validation Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "151" validationRule "Transaction"
      provision "After action type 'EROR' is reported by a counterparty, the only allowed action type to be submitted by that counterparty for the given UTI is 'REVI'. Only when 'REVI' is accepted, other action types can be reported for that UTI. "]
        // ToDo: Not modelled
        True

    condition UKEMIR_VR_2151_05: <"Action type Validation Condition 5">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "151" validationRule "Transaction"
      provision "Where a derivative is non-outstanding, the only action types allowed for that UTI are 'EROR', 'REVI', 'MODI', 'CORR' and 'VALU'."]
        // ToDo: Not modelled
        True

    condition UKEMIR_VR_2151_06: <"Action type Validation Condition 6">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "151" validationRule "Transaction"
      provision "Where a derivative is outstanding, 'REVI' is not allowed."]
        // ToDo: Not modelled
        True

    condition UKEMIR_VR_2152_01: <"Event type Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "152" validationRule "Transaction"
      provision "This field shall contain one of the following values: 'TRAD', 'NOVA', 'COMP', 'ETRM', 'CLRG', 'EXER', 'ALOC', 'CREV', 'CORP', 'INCP', or 'UPDT'. 4 alphabetical characters."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
        then if eventType exists
            then [EventTypeEnum -> TRAD, EventTypeEnum -> NOVA, EventTypeEnum -> COMP, EventTypeEnum -> ETRM, EventTypeEnum -> CLRG, EventTypeEnum -> EXER, EventTypeEnum -> ALOC, EventTypeEnum -> CREV, EventTypeEnum -> CORP, EventTypeEnum -> INCP, EventTypeEnum -> UPDT] any = eventType

    condition UKEMIR_VR_2152_02: <"Event type Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "152" validationRule "Transaction"
      provision "If field 2.151 is populated with 'NEWT', this field shall be populated and shall contain only one of the following values: 'TRAD', 'NOVA', 'COMP', 'CLRG', 'EXER', 'ALOC', 'CORP' or 'INCP'."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
        then if actionType = ActionTypeEnum -> NEWT
            then [EventTypeEnum -> TRAD, EventTypeEnum -> NOVA, EventTypeEnum -> COMP, EventTypeEnum -> CLRG, EventTypeEnum -> EXER, EventTypeEnum -> ALOC] any = eventType

    condition UKEMIR_VR_2152_03: <"Event type Validation Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "152" validationRule "Transaction"
      provision "If field 2.151 is populated with 'MODI', this field, when populated, shall contain only one of the following values: 'TRAD', 'NOVA', 'COMP', 'ETRM', 'EXER', 'ALOC', 'CREV', 'CORP', 'INCP' or 'UPDT'."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
        then if actionType = ActionTypeEnum -> MODI
            then [EventTypeEnum -> TRAD, EventTypeEnum -> NOVA, EventTypeEnum -> COMP, EventTypeEnum -> ETRM, EventTypeEnum -> EXER, EventTypeEnum -> ALOC, EventTypeEnum -> CREV, EventTypeEnum -> CORP, EventTypeEnum -> INCP, EventTypeEnum -> UPDT] any = eventType

    condition UKEMIR_VR_2152_04: <"Event type Validation Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "152" validationRule "Transaction"
      provision "If field 2.151 is populated with 'TERM', this field shall contain only one of the following values: 'NOVA', 'COMP', 'ETRM', 'CLRG', 'EXER', 'ALOC', 'CREV', 'CORP 'or 'INCP'."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
        then if actionType = ActionTypeEnum -> TERM
            then [EventTypeEnum -> NOVA, EventTypeEnum -> COMP, EventTypeEnum -> ETRM, EventTypeEnum -> CLRG, EventTypeEnum -> EXER, EventTypeEnum -> ALOC, EventTypeEnum -> CREV, EventTypeEnum -> CORP, EventTypeEnum -> INCP] any = eventType

    condition UKEMIR_VR_2152_05: <"Event type Validation Condition 5">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "152" validationRule "Transaction"
      provision "If field 2.151 is populated with 'CORR', 'EROR', 'REVI', 'VALU' or 'POSC', this field shall be left blank."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
        then if [ActionTypeEnum -> CORR, ActionTypeEnum -> EROR, ActionTypeEnum -> REVI, ActionTypeEnum -> VALU, ActionTypeEnum -> POSC] any = actionType
            then eventType is absent

    condition UKEMIR_VR_2153_01: <"Event date Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "153" validationRule "Transaction"
      provision "This field shall be populated in a common input format: YYYY-MM-DD."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> TERM] any = actionType
        then True

    condition UKEMIR_VR_2153_02: <"Event date Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "153" validationRule "Transaction"
      provision "The value of this field shall be greater than or equal to the value of the field 2.42. For action types 'NEWT' and 'POSC', the value of this field should be equal to the date part of the field 2.42."]
        if [ActionTypeEnum -> NEWT, ActionTypeEnum -> POSC] any = actionType
        then eventDate = executionTimestamp -> date
        else eventDate >= executionTimestamp -> date

    condition UKEMIR_VR_2153_03: <"Event date Validation Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "153" validationRule "Transaction"
      provision "The event date should be equal or later than 2014-02-12."]
        CompareDateTo(eventDate, 2014, 2, 12) >= 0

    condition UKEMIR_VR_2153_04: <"Event date Validation Condition 4">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "153" validationRule "Transaction"
      provision "The event date should be equal or earlier than the date part of the reporting timestamp (field 1.1). "]
        eventDate <= reportingTimestamp -> date

    condition UKEMIR_VR_2153_05: <"Event date Validation Condition 5">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "153" validationRule "Transaction"
      provision "For action types 'REVI' and 'EROR', the event date should be equal to the date part of the reporting timestamp (field 1.1)."]
        if [ActionTypeEnum -> REVI, ActionTypeEnum -> EROR] any = actionType
        then eventDate = reportingTimestamp -> date

    condition UKEMIR_VR_2153_06: <"Event date Validation Condition 6">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "153" validationRule "Transaction"
      provision "For action type 'TERM' the value of this field should be equal to the value of the field 2.45."]
        if actionType = ActionTypeEnum -> TERM
        then eventDate = earlyTerminationDate

    condition UKEMIR_VR_2153_07: <"Event date Validation Condition 7">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "153" validationRule "Transaction"
      provision "For all action types except for 'REVI' or 'EROR', the event date shall be prior or equal to the Expiration date and -if populated- the Termination date reported for that UTI. "]
        if [ActionTypeEnum -> REVI, ActionTypeEnum -> EROR] all <> actionType
        then (if earlyTerminationDate is absent
            then eventDate <= expirationDate
            else eventDate <= expirationDate and eventDate <= earlyTerminationDate)

    condition UKEMIR_VR_2154_01: <"Level Validation Condition 1">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "154" validationRule "Transaction"
      provision "This field shall contain one of the following values: 'TCTN' or 'PSTN'. 4 alphabetical characters."]
        ([ReportLevelEnum -> TCTN, ReportLevelEnum -> PSTN] any = level)

    condition UKEMIR_VR_2154_02: <"Level Validation Condition 2">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "154" validationRule "Transaction"
      provision "If field 2.151 is populated with 'POSC', this field shall be populated with 'TCTN'"]
        if actionType = ActionTypeEnum -> POSC then level = TCTN

    condition UKEMIR_VR_2154_03: <"Level Validation Condition 3">
        [docReference FCA UKEMIR ValidationRules table "2" dataElement "154" validationRule "Transaction"
      provision "The content of this field can be modified only with action type 'CORR' "]
        // ToDo: Not modelled
        if actionType = ActionTypeEnum -> CORR then True

type FCAUKEMIRNonReportable extends common.NonReportable:
    relationshipRecord string (0..1)
        [nonReportable]
