namespace drr.standards.iosco.cde.version1.basket
version "${project.version}"

import drr.regulation.common.*
import drr.standards.iosco.*
import drr.standards.iosco.cde.base.basket.*
import drr.standards.iosco.cde.version1.* as cdeV1

reporting rule CustomBasketCode from ReportableEvent: <"Custom basket code">
    [regulatoryReference CPMI_IOSCO cdeV1.CDE section "2" field "97"
        provision "If the OTC derivative transaction is based on a custom basket, unique code assigned by the structurer of the custom basket to link its constituents. This data element is not applicable if no custom basket is involved or no unique code has been assigned to it."]
    extract ProductForEvent
    then extract contractualProduct -> economicTerms -> payout
    then extract
        (if forwardPayout exists
        then forwardPayout -> underlier -> basket -> productIdentifier -> identifier first
        else if optionPayout -> underlier -> basket exists
        then optionPayout -> underlier -> basket -> productIdentifier -> identifier first
        else if performancePayout exists
        then performancePayout -> underlier -> basket -> productIdentifier -> identifier first
        else if optionPayout -> underlier -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> basketReferenceInformation exists
        then optionPayout -> underlier -> contractualProduct -> economicTerms -> payout -> creditDefaultPayout -> generalTerms -> basketReferenceInformation -> basketId first
        else if creditDefaultPayout -> generalTerms -> basketReferenceInformation exists
        then creditDefaultPayout -> generalTerms -> basketReferenceInformation -> basketId first)

reporting rule BasketConstituents from TransactionReportInstruction: <"Basket constituents">
    extract TradeForEvent
    then extract GetBasketConstituentsProductIdentifier
    then extract
        BasketConstituentsReport {
            identifier: identifier,
            source: source,
            ...
        }

reporting rule IdentifierOfBasketConstituents from ReportableEvent: <"Identifier of the basket's constituents">
    [regulatoryReference CPMI_IOSCO cdeV1.CDE section "2" field "98"
        provision "Underliers that represent the constituents of a custom basket, in line with the underlier ID within the UPI reference data elements, as defined by the CPMI-IOSCO Technical Guidance: Harmonisation of the Unique Product Identifier. This data element is not applicable if no custom basket is involved."]
    extract TradeForEvent
    then extract GetBasketConstituentsProductIdentifier -> identifier

reporting rule BasketConstituentUnitOfMeasure from TransactionReportInstruction: <"Basket Constituent Unit Of Measure">
    [regulatoryReference CPMI_IOSCO cdeV1.CDE section "2" field "99"
        provision "Unit of measure in which the number of units of a particular custom basket constituent is expressed. This data element is not applicable if no custom basket is involved."]
    extract ProductForEvent
    then extract contractualProduct -> economicTerms -> payout
    then extract
        if forwardPayout -> underlier -> basket exists
        then forwardPayout -> underlier -> basket
        else if optionPayout -> underlier -> basket exists
        then optionPayout -> underlier -> basket
        else if performancePayout -> underlier -> basket exists
        then performancePayout -> underlier -> basket
        else if commodityPayout -> underlier -> basket exists
        then commodityPayout -> underlier -> basket
    then extract portfolioBasketConstituent -> quantity -> unit
    then extract
        if capacityUnit exists
        then CapacityUnitToISO20022UnitOfMeasure(capacityUnit)
        else if weatherUnit exists
        then WeatherUnitToISO20022UnitOfMeasure(weatherUnit)
        else if financialUnit exists
        then FinancialUnitToISO20022UnitOfMeasure(financialUnit)

reporting rule BasketConstituentNumberOfUnits from TransactionReportInstruction: <"Basket Constituent Number Of Units">
    [regulatoryReference CPMI_IOSCO cdeV1.CDE section "2" field "100"
        provision "The number of units of a particular constituent in a custom basket. This data element is not applicable if no custom basket is involved."]
    extract ProductForEvent
    then extract contractualProduct -> economicTerms -> payout
    then extract
        if forwardPayout -> underlier -> basket exists
        then forwardPayout -> underlier -> basket
        else if optionPayout -> underlier -> basket exists
        then optionPayout -> underlier -> basket
        else if performancePayout -> underlier -> basket exists
        then performancePayout -> underlier -> basket
        else if commodityPayout -> underlier -> basket exists
        then commodityPayout -> underlier -> basket
    then extract portfolioBasketConstituent -> quantity -> value
    then flatten

reporting rule SourceOfTheIdentifierOfTheBasketConstituents from ReportableEvent: <"Source of the identifier of the basket constituents">
    [regulatoryReference CPMI_IOSCO cdeV1.CDE section "2" field "101"
        provision "Source of the underliers identifiers that represent the constituents of a custom basket, in line
        with the underlier ID source within the UPI reference data elements, as defined by the CPMIIOSCO Technical Guidance: Harmonisation of the Unique Product Identifier. This data element is
        not applicable if no custom basket is involved."]
    extract TradeForEvent
    then extract GetBasketConstituentsProductIdentifier -> source
