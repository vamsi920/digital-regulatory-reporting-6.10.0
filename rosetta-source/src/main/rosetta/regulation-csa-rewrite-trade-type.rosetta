namespace drr.regulation.csa.rewrite.trade
version "${project.version}"

import cdm.base.*
import cdm.base.staticdata.asset.common.*

import drr.regulation.common.*
import drr.regulation.common.trade.* as common
import drr.regulation.csa.*
import drr.regulation.csa.rewrite.dtcc.*
import drr.standards.iosco.cde.base.* as cde
import drr.standards.iosco.upi.*
import drr.standards.iso.*

type CSATransactionReport extends common.CommonTransactionReport:
    [rootType]
    override leg1 CSALeg (0..1)
    //Periodic Payment
        [label for periodicPayment -> fixedRateDayCountConvention "69 Fixed Rate Day Count Convention-Leg 1"]
        [regulatoryReference for periodicPayment -> fixedRateDayCountConvention CSA Trade dataElement "69" field "Fixed Rate Day Count Convention-Leg 1"
            provision "For each leg of the transaction, where applicable: day count convention (often also referred to as day count fraction or day count basis or day count method) that determines how interest payments are calculated. It is used to compute the year fraction of the calculation period, and indicates the number of days in the calculation period divided by the number of days in the year. See Appendix 3.2 for definitions of values."]

        [label for periodicPayment -> floatingRateDayCountConvention "69 Floating Rate Day Count Convention-Leg 1"]
        [regulatoryReference for periodicPayment -> floatingRateDayCountConvention CSA Trade dataElement "69" field "Floating Rate Day Count Convention-Leg 1"
            provision "For each leg of the transaction, where applicable: day count convention (often also referred to as day count fraction or day count basis or day count method) that determines how interest payments are calculated. It is used to compute the year fraction of the calculation period, and indicates the number of days in the calculation period divided by the number of days in the year. See Appendix 3.2 for definitions of values."]

        [label for periodicPayment -> fixedRatePaymentFrequencyPeriod "142 Fixed Rate Payment Frequency Period-Leg 1"]
        [regulatoryReference for periodicPayment -> fixedRatePaymentFrequencyPeriod CSA Trade dataElement "142" field "Fixed Rate Payment Frequency Period-Leg 1"
            provision "For each leg of the transaction, where applicable: time unit associated with the frequency of payments, e.g., day, week, month, year or term of the stream."]
        [regulatoryReference for periodicPayment -> fixedRatePaymentFrequencyPeriod CSA Trade dataElement "142" field "Fixed RatePayment Frequency Period-Leg 1" footnote "72"
            provision "To represent quarterly payment, report [Payment frequency period] = MNTH and [Payment frequency period multiplier] = 3. For semi-annual payment, report [Payment frequency period] = MNTH and [Payment frequency period multiplier] = 6."]
        [regulatoryReference for periodicPayment -> fixedRatePaymentFrequencyPeriod CSA Trade dataElement "142" field "Fixed Rate Payment Frequency Period-Leg 1" footnote "73"
            provision "Throughout this Technical Manual, for the allowable value EXPI in frequency period related data elements, two different descriptions Payment at term and End of term are being used which in essence has the same meaning and represents the frequency/rate of payment/quantity."]

        [label for periodicPayment -> floatingRatePaymentFrequencyPeriod "142 Floating Rate Payment Frequency Period-Leg 1"]
        [regulatoryReference for periodicPayment -> floatingRatePaymentFrequencyPeriod CSA Trade dataElement "142" field "Floating Rate Payment Frequency Period-Leg 1"
            provision "For each leg of the transaction, where applicable: time unit associated with the frequency of payments, e.g., day, week, month, year or term of the stream."]
        [regulatoryReference for periodicPayment -> floatingRatePaymentFrequencyPeriod CSA Trade dataElement "142" field "Floating RatePayment Frequency Period-Leg 1" footnote "72"
            provision "To represent quarterly payment, report [Payment frequency period] = MNTH and [Payment frequency period multiplier] = 3. For semi-annual payment, report [Payment frequency period] = MNTH and [Payment frequency period multiplier] = 6."]
        [regulatoryReference for periodicPayment -> floatingRatePaymentFrequencyPeriod CSA Trade dataElement "142" field "Floating Rate Payment Frequency Period-Leg 1" footnote "73"
            provision "Throughout this Technical Manual, for the allowable value EXPI in frequency period related data elements, two different descriptions Payment at term and End of term are being used which in essence has the same meaning and represents the frequency/rate of payment/quantity."]

        [label for periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier "143 Fixed Rate Payment Frequency Period Multiplier-Leg 1"]
        [regulatoryReference for periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier CSA Trade dataElement "143" field "Fixed Rate Payment Frequency Period Multiplier-Leg 1"
            provision "For each leg of the transaction, where applicable: number of time units (as expressed by the Payment frequency period) that determines the frequency at which periodic payment dates occur. For example, a transaction with payments occurring every two months is represented with a Payment frequency period of MNTH (monthly) and a Payment frequency period multiplier of 2.
            This data element is not applicable if the Payment frequency period is ADHO. If Payment frequency period is EXPI, then the Payment frequency period multiplier is 1. If the Payment frequency is intraday, then the Payment frequency period is DAIL and the Payment frequency multiplier is 0."]

        [label for periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier "143 Floating Rate Payment Frequency Period Multiplier-Leg 1"]
        [regulatoryReference for periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier CSA Trade dataElement "143" field "Floating Rate Payment Frequency Period Multiplier-Leg 1"
            provision "For each leg of the transaction, where applicable: number of time units (as expressed by the Payment frequency period) that determines the frequency at which periodic payment dates occur. For example, a transaction with payments occurring every two months is represented with a Payment frequency period of MNTH (monthly) and a Payment frequency period multiplier of 2.
            This data element is not applicable if the Payment frequency period is ADHO. If Payment frequency period is EXPI, then the Payment frequency period multiplier is 1. If the Payment frequency is intraday, then the Payment frequency period is DAIL and the Payment frequency multiplier is 0."]

        [label for periodicPayment -> floatingRateResetFrequencyPeriod "70 Floating Rate Reset Frequency Period-Leg 1"]
        [regulatoryReference for periodicPayment -> floatingRateResetFrequencyPeriod CSA Trade dataElement "70" field "Floating Rate Reset Frequency Period-Leg 1"
            provision "For each floating leg of the swap transaction, where applicable, time unit associated with the frequency of resets, e.g., day, week, month, year or term of the stream."]

        [label for periodicPayment -> floatingRateResetFrequencyMultiplier "71 Floating Rate Reset Frequency Period Multiplier-Leg 1"]
        [regulatoryReference for periodicPayment -> floatingRateResetFrequencyMultiplier CSA Trade dataElement "71" field "Floating Rate Reset Frequency Period Multiplier-Leg 1"
            provision "For each floating leg of the swap transaction, where applicable, number of time units (as expressed by the Floating rate reset frequency period) that determines the frequency at which periodic payment dates for reset occur. For example, a transaction with reset payments occurring every two months is represented with a Floating rate reset frequency period of MNTH (monthly) and a Floating rate reset frequency period multiplier of 2. This data element is not applicable if the Floating rate reset frequency period is ADHO. If Floating rate reset frequency period is EXPI, then the Floating rate reset frequency period multiplier is 1. If the reset frequency period is intraday, then the Floating rate reset frequency period is DAIL and the Floating rate reset frequency period multiplier is 0."]

    //Leg
        [label for notionalAmount "26 Notional amount-Leg 1"]
        [regulatoryReference for notionalAmount CSA Trade dataElement "26" field "Notional Amount-Leg 1"
            provision "For each leg of the transaction, where applicable:
                    - for OTC derivative transactions negotiated in monetary amounts, the amount specified in the contract.
                    - for OTC derivative transactions negotiated in non-monetary amounts, refer to appendix B for converting notional amounts for non-monetary amounts.
                    - For OTC derivative transactions with a notional amount schedule, the initial notional amount, agreed by the counterparties at the inception of the transaction, is reported in this data element.
                    - For OTC foreign exchange options, in addition to this data element, the amounts are reported using the data elements Call amount and Put amount.
                    - For amendments or lifecycle events, the resulting outstanding notional amount is reported; (steps in notional amount schedules are not considered to be amendments or lifecycle events);
                    - Where the notional amount is not known when a new transaction is reported, the notional amount is updated as it becomes available."]
        [regulatoryReference for notionalAmount CSA Trade dataElement "26" field "Notional Amount-Leg 1" footnote "18"
            provision "Notional amount for CDS should reflect the gross amount and not the net amount after reflecting version incrementing due to a credit event."]
        [regulatoryReference for notionalAmount CSA Trade dataElement "26" field "Notional Amount-Leg 1" footnote "19"
            provision "In the case of a lifecycle event that is a full termination before the maturity date, the full terminated value should be reported in the notional data element."]
        [regulatoryReference for notionalAmount CSA Trade dataElement "26" field "Notional Amount-Leg 1" footnote "20"
            provision "99999999999999999999.99999 is accepted when the value is not available. 25 numerical characters including decimals."]

        [label for notionalQuantitySchedule -> effectiveDate "37 Effective date of the notional quantity-Leg 1"]
        [regulatoryReference for notionalQuantitySchedule -> effectiveDate CSA Trade dataElement "37" field "Effective date of the notional quantity-Leg 1"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in non-monetary amounts with a Notional quantity schedule.
        The initial notional quantity and associated unadjusted effective and end date are be reported as the first values of the schedule.
        This data element is not applicable to OTC derivative transactions with notional quantities that are conditionor eventdependent. The quantity unit of measure for the varying notional quantities in the schedule is reported in Quantity unit of measure."]

        [label for notionalQuantitySchedule -> endDate "38 End date of the notional quantity-Leg 1"]
        [regulatoryReference for notionalQuantitySchedule -> endDate CSA Trade dataElement "38" field "End date of the notional quantity-Leg 1"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in non-monetary amounts with a Notional quantity schedule. The initial notional quantity and associated unadjusted effective and end date are be reported as the first values of the schedule. This data element is not applicable to OTC derivative transactions with notional quantities that are conditionor event-dependent. The quantity unit of measure for the varying notional quantities in the schedule is reported in Quantity unit of measure."]

        [label for notionalQuantitySchedule -> value "39 Notional quantity in effect onsociated effective date-Leg 1"]
        [regulatoryReference for notionalQuantitySchedule -> value CSA Trade dataElement "39" field "Notional quantity in effect on associated effective date-Leg 1"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in non-monetary amounts with a Notional quantity schedule
        - Notional quantity which becomes effective on the associated unadjusted effective date.
        The initial notional quantity and associated unadjusted effective and end date are be reported as the first values of the schedule.
        This data element is not applicable to OTC derivative transactions with notional quantities that are conditionor event-dependent. The quantity unit of measure for the varying notional quantities in the schedule is reported in Quantity unit of measure."]

        [label for notionalAmountSchedule -> value "40 Notional amount in effect on associated effective date-Leg 1"]
        [regulatoryReference for notionalAmountSchedule -> value CSA Trade table "1" dataElement "40" field "Notional amount in effect on associated effective date-Leg 1"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in monetary amounts with a notional amount schedule:
        - Notional amount which becomes effective on the associated unadjusted effective date.
        The initial notional amount and associated unadjusted effective and end date are reported as the first values of the schedule.
        This data element is not applicable to OTC derivative transactions with notional amounts that are condition - or event - dependent. The currency of the varying notional amounts in the schedule is reported in Notional currency."]

        [label for notionalAmountSchedule -> effectiveDate "41 Effective date of the notional amount-Leg 1"]
        [regulatoryReference for notionalAmountSchedule -> effectiveDate CSA Trade table "1" dataElement "41" field "Effective date of the notional amount-Leg 1"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in monetary amounts with a notional amount schedule:
        - Unadjusted date on which the associated notional amount becomes effective.
        This data element is not applicable to OTC derivative transactions with notional amounts that are condition or event-dependent. The currency of the varying notional amounts in the schedule is reported in Notional currency."]

        [label for notionalAmountSchedule -> endDate "42 End date of the notional amount-Leg 1"]
        [regulatoryReference for notionalAmountSchedule -> endDate CSA Trade table "1" dataElement "42" field "End date of the notional amount-Leg 1"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in monetary amounts with a notional amount schedule:
        - Unadjusted end date of the notional amount (not applicable if the unadjusted end date of a given schedules period is back-to-back with the unadjusted effective date of the subsequent period).
        This data element is not applicable to OTC derivative transactions with notional amounts that are conditionor event-dependent. The currency of the varying notional amounts in the schedule is reported in Notional currency."]
        [regulatoryReference for notionalAmountSchedule -> endDate ISDA PeerReviewGroup date "20211203"
            provision "Model only applicable for back-to-back schedules. Repeatable field 42 (endDate) not applicable and therefore removed within CommonLeg function."]
        [regulatoryReference for notionalAmountSchedule -> endDate ISDA PeerReviewGroup date "unknown"
            provision "This field only applies to non-contiguous schedules with monetary amounts. Since non-contigous schedules are used only in the commodities context, where monetary amounts are absent, this field will be always left blank."]

        [label for totalNotionalQuantity "36 Total Notional Quantity-Leg 1"]
        [regulatoryReference for totalNotionalQuantity CSA Trade dataElement "36" field "Total Notional Quantity-Leg 1"
            provision "For each leg of the transaction, where applicable: aggregate Notional quantity of the underlying asset for the term of the transaction. Where the Total notional quantity is not known when a new transaction is reported, the Total notional quantity is updated as it becomes available."]
        [regulatoryReference for totalNotionalQuantity CSA Trade dataElement "36" field "Total Notional Quantity-Leg 1" footnote "23"
            provision "'99999999999999999999.99999' is accepted when the value is not available. 25 numerical characters including decimals."]

        [label for notionalQuantity "32 Notional Quantity-Leg 1"]
        [regulatoryReference CSA Trade dataElement "32" field "Notional Quantity-Leg 1"
            provision "For each leg of the swap, where applicable, swap transactions negotiated in non-monetary amounts the fixed notional quantity for each schedule period (i.e., 50 barrels per month).
                The frequency is reported in Quantity frequency and the unit of measure is reported in Quantity unit of measure."]
        [regulatoryReference CSA Trade dataElement "32" field "Notional Quantity-Leg 1" footnote "21"
            provision "References to swap and swap transaction in CFTC data element explanations should be read as derivative."]

        [label for fixedRate "45 Fixed Rate-Leg 1"]
        [regulatoryReference for fixedRate CSA Trade dataElement "45" field "Fixed Rate-Leg 1"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions with periodic payments, per annum rate of the fixed leg(s)."]

        [label for fixingDate "148 Fixing date-Leg 1"]
        [regulatoryReference for fixingDate CSA Trade dataElement "148" field "Fixing date - Leg 1"
            provision "Describes the specific date when a non-deliverable forward as well as various types of FX OTC options such as cash-settled options that will 'fix' against a particular exchange rate, which will be used to compute the ultimate cash settlement"]

        [label for quantityFrequency "33 Quantity Frequency-Leg 1"]
        [regulatoryReference for quantityFrequency CSA Trade dataElement "33" field "Quantity Frequency-Leg 1"
            provision "For each leg of the swap transaction where applicable, the rate at which the quantity is quoted on the transaction. e.g., hourly, daily, weekly, monthly."]
        [regulatoryReference for quantityFrequency CSA Trade dataElement "33" field "Quantity Frequency-Leg 1" footnote "22"
            provision "To represent quarterly, report [Quantity frequency] = 'MNTH' and [Quantity frequency multiplier] = '3'. For semi-annual, report [Quantity frequency] = 'MNTH' and [Quantity frequency multiplier] = '6'."]

        [label for quantityFrequencyMultiplier "34 Quantity Frequency Multiplier-Leg 1"]
        [regulatoryReference for quantityFrequencyMultiplier CSA Trade dataElement "34" field "Quantity Frequency Multiplier-Leg 1"
            provision "For each leg of the swap transaction where applicable, the number of time units for the Quantity frequency."]

        [label for notionalCurrency "27 Notional currency-Leg 1"]
        [regulatoryReference for notionalCurrency CSA Trade dataElement "27" field "Notional Currency-Leg 1"
            provision "For each leg of the transaction, where applicable: currency in which the notional amount is denominated."]

        [label for settlementCurrency "135 Settlement Currency-Leg 1"]
        [regulatoryReference for settlementCurrency CSA Trade dataElement "135" field "Settlement Currency-Leg 1"
            provision "Currency for the cash settlement of the transaction when applicable. For multi-currency products that do not net, the settlement currency of each leg. This data element is not applicable for physically settled products (e.g., physically settled swaptions)."]

        [label for spread -> monetary "53 Spread-Leg 1"]
        [label for spread -> decimal "53 Spread-Leg 1"]
        [label for spread -> basis "53 Spread-Leg 1"]
        [regulatoryReference for spread CSA Trade dataElement "53" field "Spread-Leg 1 (Monetary)"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions with periodic payments (e.g., interest rate fixed/float swaps, interest rate basis swaps, commodity swaps),
        - spread on the individual floating leg(s) index reference price, in the case where there is a spread on a floating leg(s). For example, USDLIBOR-BBA plus .03 or WTI minus USD 14.65; or
        - difference between the reference prices of the two floating leg indexes. For example, the 9.00 USD Spread for a WCS vs. WTI basis swap where WCS is priced at 43 USD and WTI is priced at 52 USD."]
        [regulatoryReference for spread CSA Trade dataElement "53" field "Spread-Leg 1" footnote "27"
            provision "For equity swaps, portfolio swaps, and contract for difference (CFDs), report the weighted overall spread for the basket instead of individual legs."]

        [label for spreadNotation "55 Spread Notation-Leg 1"]

        [label for spreadCurrency "54 Spread Currency-Leg 1"]
        [regulatoryReference for spreadCurrency CSA Trade dataElement "54" field "Spread Currency-Leg 1"
            provision "For each leg of the transaction, where applicable: the currency in which the spread is denominated. This data element is only applicable if Spread notation = 1."]

        [label for quantityUnitOfMeasure "35 Quantity Unit of Measure-Leg 1"]
        [regulatoryReference for quantityUnitOfMeasure CSA Trade dataElement "35" field "Quantity Unit Of Measure-Leg 1"
            provision "For each leg of the transaction, where applicable: unit of measure in which the Total notional quantity and Notional quantity are expressed."]
        [regulatoryReference for quantityUnitOfMeasure ISDA CanadianDataAndReporting date "20250401" field "Quantity Unit Of Measure-Leg 1"
            provision "Value 'OTHR' = Other accepted for any values required outside of ISO."]
        [ruleReference for quantityUnitOfMeasure QuantityUnitOfMeasureLeg1]

        [label for underlierIDOther "128 Underlier ID (Other)-Leg 1"]
        [regulatoryReference for underlierIDOther CSA Trade dataElement "128" field "Underlier ID (Other)-Leg 1"
            provision "The asset(s), index (indices) or benchmark underlying a contract or, in the case of a foreign exchange derivative, identification of index. This data element is applicable when the value of Underlier ID is submitted as OTHER to the UPI service provider."]
        [regulatoryReference for underlierIDOther CSA Trade dataElement "128" field "Underlier ID (Other)-Leg 1" footnote "65"
            provision "If more than one underlier exists, the derivative should be considered a basket and the corresponding basket fields should be used."]
        [regulatoryReference for underlierIDOther CSA Trade dataElement "128" field "Underlier ID (Other)-Leg 1" footnote "66"
            provision "When a particular underlier ID is not supported by the UPI service provider (Underlier ID is Other), that underlier ID is reported in this field to the trade repository."]
        [regulatoryReference for underlierIDOther CSA Trade dataElement "128" field "Underlier ID (Other)-Leg 1" footnote "67"
            provision "In line with the Underlier ID within the UPI reference data elements, as maintained by the UPI service provider, or in accordance with section 5.2 of the CPMI-IOSCO Technical Guidance: Harmonization of the Unique Product Identifier."]
        [regulatoryReference for underlierIDOther CSA Trade dataElement "128" field "Underlier ID (Other)-Leg 1" footnote "68"
            provision "Depending on the product DSB may use attributes with names such as Reference Rate, Underlying Instrument Index, Underlying instrument ISIN, Underlying instrument LEI, or another name to denote the asset or index underlying the derivative."]

        [label for underlierIDOtherSource "129 Underlier ID (Other) Source-Leg 1"]
        [regulatoryReference for underlierIDOtherSource CSA Trade dataElement "129" field "Underlier ID (Other) Source-Leg 1"
            provision "The origin, or publisher, of the associated Underlier ID (Other). This data element is applicable when the value of Underlier ID source is submitted as OTHER to the UPI service provider."]
        [regulatoryReference for underlierIDOtherSource CSA Trade dataElement "129" field "Underlier ID (Other) Source-Leg 1" footnote "69"
            provision "In line with the Underlier ID within the UPI reference data elements, as maintained by the UPI service provider, or in accordance with section 5.2 of the CPMI-IOSCO Technical Guidance: Harmonization of the Unique Product Identifier."]

        [label for underlyingAssetTradingPlatformIdentifier  "130 Underlying Asset Trading Platform Identifier-Leg 1"]
        [regulatoryReference for underlyingAssetTradingPlatformIdentifier CSA Trade dataElement "130" field "Underlying Asset Trading Platform Identifier-Leg 1"
            provision "For a platform (e.g. exchange) traded underlying asset, the platform on which the asset is traded. This data element is not applicable to OTC derivative transactions with custom basket constituents."]
        [regulatoryReference for underlyingAssetTradingPlatformIdentifier CSA Trade dataElement "130" field "Underlying Asset Trading Platform Identifier-Leg 1" footnote "70"
            provision "The platform provided should be the platform from where the underlying asset gets its pricing information."]

        [label for underlyingAssetPriceSource "131 Underlying Asset Price Source-Leg 1"]
        [regulatoryReference for underlyingAssetPriceSource CSA Trade dataElement "131" field "Underlying Asset Price Source-Leg 1"
            provision "For an underlying asset or benchmark not traded on a platform, the source of the price used to determine the value or level of the asset or benchmark. This data element is not applicable to OTC derivative transactions with custom basket constituents."]

        [label for cryptoAssetUnderlyingIndicator "121 Crypto asset underlying indicator-Leg 1"]
        [regulatoryReference for cryptoAssetUnderlyingIndicator CSA Trade dataElement "121" field "Crypto asset underlying indicator-Leg 1"
            provision "Indicator of whether the underlying of the derivative is crypto asset. This element should be reported as true if any of the underlyings is a crypto asset (immediate or ultimate underlying as well as where the derivative is based on a mix of crypto assets and otherunderlyings)."]
        [regulatoryReference for cryptoAssetUnderlyingIndicator ISDA EUUKNAPeerReviewGroup date "20250320" field "Crypto asset underlying indicator-Leg 1"
            provision "The group agreed on maintaining leg-level granularity and using the same CDE extraction for both legs. However, leg 2 is populated only when the product has two legs; otherwise, only leg 1 is required."]
    
        [label for payerIdentifier "6 Payer identifier - Leg 1"]
        [regulatoryReference for payerIdentifier CSA Trade dataElement "6" field "Payer Identifier"
            provision "Identifier of the counterparty of the payer leg as determined at the time of the transaction.
        A non-exhaustive list of examples of instruments for which this data element could apply are:
            - most swaps and swap-like contracts including interest rate swaps, credit total return swaps, and equity swaps (except for credit default swaps, variance, volatility, and correlation swaps)
            - foreign exchange swaps, forwards, non-deliverable forwards.
        This data element is not applicable to instrument types covered by data elements Buyer identifier and Seller identifier."]
        [regulatoryReference for payerIdentifier CSA Trade dataElement "6" field "Payer Identifier" footnote "6"
            provision "For fixed-floating interest rate swaps, the payer is the counterparty paying the fixed rate."]

     [label for receiverIdentifier "7 Receiver identifier - Leg 1"]
        [regulatoryReference for receiverIdentifier CSA Trade dataElement "7" field "Receiver Identifier"
            provision "Identifier of the counterparty of the payer leg as determined at the time of the transaction.
        A non-exhaustive list of examples of instruments for which this data element could apply are:
            - most swaps and swap-like contracts including interest rate swaps, credit total return swaps, and equity swaps (except for credit default swaps, variance, volatility, and correlation swaps)
            - foreign exchange swaps, forwards, non-deliverable forwards.
        This data element is not applicable to instrument types covered by data elements Buyer identifier and Seller identifier."]
        [regulatoryReference for receiverIdentifier CSA Trade dataElement "7" field "Receiver Identifier" footnote "7"
            provision "For fixed-floating interest rate swaps, the receiver is the counterparty receiving the fixed rate."]
    override leg2 CSALeg (0..1)
    //Periodic Payment
        [label for periodicPayment -> fixedRateDayCountConvention "69 Fixed Rate Day Count Convention-Leg 2"]
        [regulatoryReference for periodicPayment -> fixedRateDayCountConvention CSA Trade dataElement "69" field "Fixed Rate Day Count Convention-Leg 2"
            provision "For each leg of the transaction, where applicable: day count convention (often also referred to as day count fraction or day count basis or day count method) that determines how interest payments are calculated. It is used to compute the year fraction of the calculation period, and indicates the number of days in the calculation period divided by the number of days in the year. See Appendix 3.2 for definitions of values."]

        [label for periodicPayment -> floatingRateDayCountConvention "69 Floating Rate Day Count Convention-Leg 2"]
        [regulatoryReference for periodicPayment -> floatingRateDayCountConvention CSA Trade dataElement "69" field "Floating Rate Day Count Convention-Leg 2"
            provision "For each leg of the transaction, where applicable: day count convention (often also referred to as day count fraction or day count basis or day count method) that determines how interest payments are calculated. It is used to compute the year fraction of the calculation period, and indicates the number of days in the calculation period divided by the number of days in the year. See Appendix 3.2 for definitions of values."]

        [label for periodicPayment -> fixedRatePaymentFrequencyPeriod "142 Fixed Rate Payment Frequency Period-Leg 2"]
        [regulatoryReference for periodicPayment -> fixedRatePaymentFrequencyPeriod CSA Trade dataElement "142" field "Fixed Rate Payment Frequency Period-Leg 2"
            provision "For each leg of the transaction, where applicable: time unit associated with the frequency of payments, e.g., day, week, month, year or term of the stream."]
        [regulatoryReference for periodicPayment -> fixedRatePaymentFrequencyPeriod CSA Trade dataElement "142" field "Fixed RatePayment Frequency Period-Leg 2" footnote "72"
            provision "To represent quarterly payment, report [Payment frequency period] = MNTH and [Payment frequency period multiplier] = 3. For semi-annual payment, report [Payment frequency period] = MNTH and [Payment frequency period multiplier] = 6."]
        [regulatoryReference for periodicPayment -> fixedRatePaymentFrequencyPeriod CSA Trade dataElement "142" field "Fixed Rate Payment Frequency Period-Leg 2" footnote "73"
            provision "Throughout this Technical Manual, for the allowable value EXPI in frequency period related data elements, two different descriptions Payment at term and End of term are being used which in essence has the same meaning and represents the frequency/rate of payment/quantity."]

        [label for periodicPayment -> floatingRatePaymentFrequencyPeriod "142 Floating Rate Payment Frequency Period-Leg 2"]
        [regulatoryReference for periodicPayment -> floatingRatePaymentFrequencyPeriod CSA Trade dataElement "142" field "Floating Rate Payment Frequency Period-Leg 2"
            provision "For each leg of the transaction, where applicable: time unit associated with the frequency of payments, e.g., day, week, month, year or term of the stream."]
        [regulatoryReference for periodicPayment -> floatingRatePaymentFrequencyPeriod CSA Trade dataElement "142" field "Floating RatePayment Frequency Period-Leg 2" footnote "72"
            provision "To represent quarterly payment, report [Payment frequency period] = MNTH and [Payment frequency period multiplier] = 3. For semi-annual payment, report [Payment frequency period] = MNTH and [Payment frequency period multiplier] = 6."]
        [regulatoryReference for periodicPayment -> floatingRatePaymentFrequencyPeriod CSA Trade dataElement "142" field "Floating Rate Payment Frequency Period-Leg 2" footnote "73"
            provision "Throughout this Technical Manual, for the allowable value EXPI in frequency period related data elements, two different descriptions Payment at term and End of term are being used which in essence has the same meaning and represents the frequency/rate of payment/quantity."]

        [label for periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier "143 Fixed Rate Payment Frequency Period Multiplier-Leg 2"]
        [regulatoryReference for periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier CSA Trade dataElement "143" field "Fixed Rate Payment Frequency Period Multiplier-Leg 2"
            provision "For each leg of the transaction, where applicable: number of time units (as expressed by the Payment frequency period) that determines the frequency at which periodic payment dates occur. For example, a transaction with payments occurring every two months is represented with a Payment frequency period of MNTH (monthly) and a Payment frequency period multiplier of 2.
            This data element is not applicable if the Payment frequency period is ADHO. If Payment frequency period is EXPI, then the Payment frequency period multiplier is 1. If the Payment frequency is intraday, then the Payment frequency period is DAIL and the Payment frequency multiplier is 0."]

        [label for periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier "143 Floating Rate Payment Frequency Period Multiplier-Leg 1"]
        [regulatoryReference for periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier CSA Trade dataElement "143" field "Floating Rate Payment Frequency Period Multiplier-Leg 2"
            provision "For each leg of the transaction, where applicable: number of time units (as expressed by the Payment frequency period) that determines the frequency at which periodic payment dates occur. For example, a transaction with payments occurring every two months is represented with a Payment frequency period of MNTH (monthly) and a Payment frequency period multiplier of 2.
            This data element is not applicable if the Payment frequency period is ADHO. If Payment frequency period is EXPI, then the Payment frequency period multiplier is 1. If the Payment frequency is intraday, then the Payment frequency period is DAIL and the Payment frequency multiplier is 0."]

        [label for periodicPayment -> floatingRateResetFrequencyPeriod "70 Floating Rate Reset Frequency Period-Leg 2"]
        [regulatoryReference for periodicPayment -> floatingRateResetFrequencyPeriod CSA Trade dataElement "70" field "Floating Rate Reset Frequency Period-Leg 2"
            provision "For each floating leg of the swap transaction, where applicable, time unit associated with the frequency of resets, e.g., day, week, month, year or term of the stream."]

        [label for periodicPayment -> floatingRateResetFrequencyMultiplier "71 Floating Rate Reset Frequency Period Multiplier-Leg 2"]
        [regulatoryReference for periodicPayment -> floatingRateResetFrequencyMultiplier CSA Trade dataElement "71" field "Floating Rate Reset Frequency Period Multiplier-Leg 2"
            provision "For each floating leg of the swap transaction, where applicable, number of time units (as expressed by the Floating rate reset frequency period) that determines the frequency at which periodic payment dates for reset occur. For example, a transaction with reset payments occurring every two months is represented with a Floating rate reset frequency period of MNTH (monthly) and a Floating rate reset frequency period multiplier of 2. This data element is not applicable if the Floating rate reset frequency period is ADHO. If Floating rate reset frequency period is EXPI, then the Floating rate reset frequency period multiplier is 1. If the reset frequency period is intraday, then the Floating rate reset frequency period is DAIL and the Floating rate reset frequency period multiplier is 0."]
    //Leg
        [label for notionalAmount "26 Notional amount-Leg 2"]
        [regulatoryReference for notionalAmount CSA Trade dataElement "26" field "Notional Amount-Leg 2"
            provision "For each leg of the transaction, where applicable:
                    - for OTC derivative transactions negotiated in monetary amounts, amount specified in the contract.
                    - for OTC derivative transactions negotiated in non-monetary amounts, refer to appendix B for converting notional amounts for non-monetary amounts.
                    - For OTC derivative transactions with a notional amount schedule, the initial notional amount, agreed by the counterparties at the inception of the transaction, is reported in this data element.
                    - For OTC foreign exchange options, in addition to this data element, the amounts are reported using the data elements Call amount and Put amount.
                    - For amendments or lifecycle events, the resulting outstanding notional amount is reported; (steps in notional amount schedules are not considered to be amendments or lifecycle events);
                    - Where the notional amount is not known when a new transaction is reported, the notional amount is updated as it becomes available."]
        [regulatoryReference for notionalAmount CSA Trade dataElement "26" field "Notional Amount-Leg 1" footnote "18"
            provision "Notional amount for CDS should reflect the gross amount and not the net amount after reflecting version incrementing due to a credit event."]
        [regulatoryReference for notionalAmount CSA Trade dataElement "26" field "Notional Amount-Leg 1" footnote "19"
            provision "In the case of a lifecycle event that is a full termination before the maturity date, the full terminated value should be reported in the notional data element."]
        [regulatoryReference for notionalAmount CSA Trade dataElement "26" field "Notional Amount-Leg 1" footnote "20"
            provision "99999999999999999999.99999 is accepted when the value is not available. 25 numerical characters including decimals."]

        [label for notionalQuantitySchedule -> effectiveDate "37 Effective date of the notional quantity-Leg 2"]
        [label for notionalQuantitySchedule -> endDate "38 End date of the notional quantity-Leg 2"]
        [regulatoryReference for notionalQuantitySchedule -> endDate CSA Trade dataElement "38" field "End date of the notional quantity-Leg 2"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in non-monetary amounts with a Notional quantity schedule. The initial notional quantity and associated unadjusted effective and end date are be reported as the first values of the schedule. This data element is not applicable to OTC derivative transactions with notional quantities that are conditionor event-dependent. The quantity unit of measure for the varying notional quantities in the schedule is reported in Quantity unit of measure."]

        [label for notionalQuantitySchedule -> value "39 Notional quantity in effect onsociated effective date-Leg 2"]
        [regulatoryReference for notionalQuantitySchedule -> value CSA Trade dataElement "39" field "Notional quantity in effect on associated effective date-Leg 2"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in non-monetary amounts with a Notional quantity schedule
        - Notional quantity which becomes effective on the associated unadjusted effective date.
        The initial notional quantity and associated unadjusted effective and end date are be reported as the first values of the schedule.
        This data element is not applicable to OTC derivative transactions with notional quantities that are conditionor event-dependent. The quantity unit of measure for the varying notional quantities in the schedule is reported in Quantity unit of measure."]

        [label for notionalAmountSchedule -> value "40 Notional amount in effect onsociated effective date-Leg 2"]
        [regulatoryReference for notionalAmountSchedule -> value CSA Trade dataElement "40" field "Notional amount in effect on associated effective date-Leg 2"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in monetary amounts with a notional amount schedule:
        - Notional amount which becomes effective on the associated unadjusted effective date.
        The initial notional amount and associated unadjusted effective and end date are reported as the first values of the schedule.
        This data element is not applicable to OTC derivative transactions with notional amounts that are condition - or event - dependent. The currency of the varying notional amounts in the schedule is reported in Notional currency."]

        [label for notionalAmountSchedule -> effectiveDate "41 Effective date of the notional amount-Leg 2"]
        [regulatoryReference for notionalAmountSchedule -> effectiveDate CSA Trade dataElement "41" field "Effective date of the notional amount-Leg 2"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in monetary amounts with a notional amount schedule:
        - Unadjusted date on which the associated notional amount becomes effective.
        This data element is not applicable to OTC derivative transactions with notional amounts that are condition or event-dependent. The currency of the varying notional amounts in the schedule is reported in Notional currency."]
        [regulatoryReference for notionalAmountSchedule -> effectiveDate CSA Trade dataElement "37" field "Effective date of the notional quantity-Leg 2"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in non-monetary amounts with a Notional quantity schedule.
        The initial notional quantity and associated unadjusted effective and end date are be reported as the first values of the schedule.
        This data element is not applicable to OTC derivative transactions with notional quantities that are conditionor eventdependent. The quantity unit of measure for the varying notional quantities in the schedule is reported in Quantity unit of measure."]

        [label for notionalAmountSchedule -> endDate "42 End date of the notional amount-Leg 2"]
        [regulatoryReference for notionalAmountSchedule -> endDate CSA Trade dataElement "42" field "End date of the notional amount-Leg 2"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions negotiated in monetary amounts with a notional amount schedule:
        - Unadjusted end date of the notional amount (not applicable if the unadjusted end date of a given schedules period is back-to-back with the unadjusted effective date of the subsequent period).
        This data element is not applicable to OTC derivative transactions with notional amounts that are conditionor event-dependent. The currency of the varying notional amounts in the schedule is reported in Notional currency."]
        [regulatoryReference for notionalAmountSchedule -> endDate ISDA PeerReviewGroup date "20211203"
            provision "Model only applicable for back-to-back schedules. Repeatable field 42 (endDate) not applicable and therefore removed within CommonLeg function."]
        [regulatoryReference for notionalAmountSchedule -> endDate ISDA PeerReviewGroup date "unknown"
            provision "This field only applies to non-contiguous schedules with monetary amounts. Since non-contigous schedules are used only in the commodities context, where monetary amounts are absent, this field will be always left blank."]

        [label for totalNotionalQuantity "36 Total Notional Quantity-Leg 2"]
        [regulatoryReference for totalNotionalQuantity CSA Trade dataElement "36" field "Total Notional Quantity-Leg 2"
            provision "For each leg of the transaction, where applicable: aggregate Notional quantity of the underlying asset for the term of the transaction. Where the Total notional quantity is not known when a new transaction is reported, the Total notional quantity is updated as it becomes available."]
        [regulatoryReference for totalNotionalQuantity CSA Trade dataElement "36" field "Total Notional Quantity-Leg 2" footnote "23"
            provision "'99999999999999999999.99999' is accepted when the value is not available. 25 numerical characters including decimals."]

        [label for notionalQuantity "32 Notional Quantity-Leg 2"]
        [regulatoryReference CSA Trade dataElement "32" field "Notional Quantity-Leg 2"
            provision "For each leg of the swap, where applicable, swap transactions negotiated in non-monetary amounts the fixed notional quantity for each schedule period (i.e., 50 barrels per month).
                The frequency is reported in Quantity frequency and the unit of measure is reported in Quantity unit of measure."]
        [regulatoryReference CSA Trade dataElement "32" field "Notional Quantity-Leg 2" footnote "21"
            provision "References to swap and swap transaction in CFTC data element explanations should be read as derivative."]

        [label for fixedRate "45 Fixed Rate-Leg 2"]
        [regulatoryReference for fixedRate CSA Trade dataElement "45" field "Fixed Rate-Leg 2"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions with periodic payments, per annum rate of the fixed leg(s)."]

        [label for fixingDate "148 Fixing date-Leg 2"]
        [regulatoryReference for fixingDate CSA Trade dataElement "148" field "Fixing date-Leg 2"
            provision "Describes the specific date when a non-deliverable forward as well as various types of FX OTC options such as cash-settled options that will 'fix' against a particular exchange rate, which will be used to compute the ultimate cash settlement"]

        [label for quantityFrequency "33 Quantity frequency-Leg 2"]
        [regulatoryReference for quantityFrequency CSA Trade dataElement "33" field "Quantity Frequency-Leg 2"
            provision "For each leg of the swap transaction where applicable, the rate at which the quantity is quoted on the transaction. e.g., hourly, daily, weekly, monthly."]
        [regulatoryReference for quantityFrequency CSA Trade dataElement "33" field "Quantity Frequency-Leg 2" footnote "22"
            provision "To represent quarterly, report [Quantity frequency] = 'MNTH' and [Quantity frequency multiplier] = '3'. For semi-annual, report [Quantity frequency] = 'MNTH' and [Quantity frequency multiplier] = '6'."]

        [label for quantityFrequencyMultiplier "34 Quantity Frequency Multiplier-Leg 2"]
        [regulatoryReference for quantityFrequencyMultiplier CSA Trade dataElement "34" field "Quantity Frequency Multiplier-Leg 2"
            provision "For each leg of the swap transaction where applicable, the number of time units for the Quantity frequency."]

        [label for notionalCurrency "27 Notional currency-Leg 2"]
        [regulatoryReference for notionalCurrency CSA Trade dataElement "27" field "Notional Currency-Leg 2"
            provision "For each leg of the transaction, where applicable: currency in which the notional amount is denominated."]

        [label for settlementCurrency "135 Settlement Currency-Leg 2"]
        [regulatoryReference for settlementCurrency CSA Trade dataElement "135" field "Settlement Currency-Leg 2"
            provision "Currency for the cash settlement of the transaction when applicable. For multi-currency products that do not net, the settlement currency of each leg. This data element is not applicable for physically settled products (e.g., physically settled swaptions)."]

        [label for spread -> monetary "53 Spread-Leg 2"]
        [label for spread -> decimal "53 Spread-Leg 2"]
        [label for spread -> basis "53 Spread-Leg 2"]
        [regulatoryReference for spread CSA Trade dataElement "53" field "Spread-Leg 2 (Monetary)"
            provision "For each leg of the transaction, where applicable: for OTC derivative transactions with periodic payments (e.g., interest rate fixed/float swaps, interest rate basis swaps, commodity swaps),
        - spread on the individual floating leg(s) index reference price, in the case where there is a spread on a floating leg(s). For example, USDLIBOR-BBA plus .03 or WTI minus USD 14.65; or
        - difference between the reference prices of the two floating leg indexes. For example, the 9.00 USD Spread for a WCS vs. WTI basis swap where WCS is priced at 43 USD and WTI is priced at 52 USD."]
        [regulatoryReference for spread CSA Trade dataElement "53" field "Spread-Leg 2" footnote "27"
            provision "For equity swaps, portfolio swaps, and contract for difference (CFDs), report the weighted overall spread for the basket instead of individual legs."]

        [label for spreadNotation "55 Spread Notation-Leg 2"]
        [label for spreadCurrency "54 Spread Currency-Leg 2"]
        [regulatoryReference for spreadCurrency CSA Trade dataElement "54" field "Spread Currency-Leg 2"
            provision "For each leg of the transaction, where applicable: the currency in which the spread is denominated. This data element is only applicable if Spread notation = 1."]

        [label for quantityUnitOfMeasure "35 Quantity Unit of Measure-Leg 2"]
        [regulatoryReference for quantityUnitOfMeasure CSA Trade dataElement "35" field "Quantity Unit Of Measure-Leg 1"
            provision "For each leg of the transaction, where applicable: unit of measure in which the Total notional quantity and Notional quantity are expressed."]
        [regulatoryReference for quantityUnitOfMeasure ISDA CanadianDataAndReporting date "20250401" field "Quantity Unit Of Measure-Leg 1"
            provision "Value 'OTHR' = Other accepted for any values required outside of ISO."]
        [ruleReference for quantityUnitOfMeasure QuantityUnitOfMeasureLeg2]

        [label for underlierIDOther "128 Underlier ID (Other)-Leg 2"]
        [regulatoryReference for underlierIDOther CSA Trade dataElement "128" field "Underlier ID (Other)-Leg 2"
            provision "The asset(s), index (indices) or benchmark underlying a contract or, in the case of a foreign exchange derivative, identification of index. This data element is applicable when the value of Underlier ID is submitted as OTHER to the UPI service provider."]
        [regulatoryReference for underlierIDOther CSA Trade dataElement "128" field "Underlier ID (Other)-Leg 2" footnote "65"
            provision "If more than one underlier exists, the derivative should be considered a basket and the corresponding basket fields should be used."]
        [regulatoryReference for underlierIDOther CSA Trade dataElement "128" field "Underlier ID (Other)-Leg 2" footnote "66"
            provision "When a particular underlier ID is not supported by the UPI service provider (Underlier ID is Other), that underlier ID is reported in this field to the trade repository."]
        [regulatoryReference for underlierIDOther CSA Trade dataElement "128" field "Underlier ID (Other)-Leg 2" footnote "67"
            provision "In line with the Underlier ID within the UPI reference data elements, as maintained by the UPI service provider, or in accordance with section 5.2 of the CPMI-IOSCO Technical Guidance: Harmonization of the Unique Product Identifier."]
        [regulatoryReference for underlierIDOther CSA Trade dataElement "128" field "Underlier ID (Other)-Leg 2" footnote "68"
            provision "Depending on the product DSB may use attributes with names such as Reference Rate, Underlying Instrument Index, Underlying instrument ISIN, Underlying instrument LEI, or another name to denote the asset or index underlying the derivative."]

        [label for underlierIDOtherSource "129 Underlier ID (Other) Source-Leg 2"]
        [regulatoryReference for underlierIDOtherSource CSA Trade dataElement "129" field "Underlier ID (Other) Source-Leg 2"
            provision "The origin, or publisher, of the associated Underlier ID (Other). This data element is applicable when the value of Underlier ID source is submitted as OTHER to the UPI service provider."]
        [regulatoryReference for underlierIDOtherSource CSA Trade dataElement "129" field "Underlier ID (Other) Source-Leg 2" footnote "69"
            provision "In line with the Underlier ID within the UPI reference data elements, as maintained by the UPI service provider, or in accordance with section 5.2 of the CPMI-IOSCO Technical Guidance: Harmonization of the Unique Product Identifier."]

        [label for underlyingAssetTradingPlatformIdentifier "130 Underlying Asset Trading Platform Identifier-Leg 2"]
        [regulatoryReference for underlyingAssetTradingPlatformIdentifier CSA Trade dataElement "130" field "Underlying Asset Trading Platform Identifier-Leg 2"
            provision "For a platform (e.g. exchange) traded underlying asset, the platform on which the asset is traded. This data element is not applicable to OTC derivative transactions with custom basket constituents."]
        [regulatoryReference for underlyingAssetTradingPlatformIdentifier CSA Trade dataElement "130" field "Underlying Asset Trading Platform Identifier-Leg 2" footnote "70"
            provision "The platform provided should be the platform from where the underlying asset gets its pricing information."]

        [label for underlyingAssetPriceSource "131 Underlying Asset Price Source-Leg 2"]
        [regulatoryReference for underlyingAssetPriceSource CSA Trade dataElement "131" field "Underlying Asset Price Source-Leg 2"
            provision "For an underlying asset or benchmark not traded on a platform, the source of the price used to determine the value or level of the asset or benchmark. This data element is not applicable to OTC derivative transactions with custom basket constituents."]

        [label for cryptoAssetUnderlyingIndicator "121 Crypto asset underlying indicator-Leg 2"]
        [regulatoryReference for cryptoAssetUnderlyingIndicator CSA Trade dataElement "121" field "Crypto asset underlying indicator-Leg 2"
            provision "Indicator of whether the underlying of the derivative is crypto asset. This element should be reported as true if any of the underlyings is a crypto asset (immediate or ultimate underlying as well as where the derivative is based on a mix of crypto assets and otherunderlyings)."]
        [regulatoryReference for cryptoAssetUnderlyingIndicator ISDA EUUKNAPeerReviewGroup date "20250320" field "Crypto asset underlying indicator-Leg 2"
            provision "The group agreed on maintaining leg-level granularity and using the same CDE extraction for both legs. However, leg 2 is populated only when the product has two legs; otherwise, only leg 1 is required."]

            [label for payerIdentifier "6 Payer identifier - Leg 2"]
        [regulatoryReference for payerIdentifier CSA Trade dataElement "6" field "Payer Identifier"
            provision "Identifier of the counterparty of the payer leg as determined at the time of the transaction.
        A non-exhaustive list of examples of instruments for which this data element could apply are:
            - most swaps and swap-like contracts including interest rate swaps, credit total return swaps, and equity swaps (except for credit default swaps, variance, volatility, and correlation swaps)
            - foreign exchange swaps, forwards, non-deliverable forwards.
        This data element is not applicable to instrument types covered by data elements Buyer identifier and Seller identifier."]
        [regulatoryReference for payerIdentifier CSA Trade dataElement "6" field "Payer Identifier" footnote "6"
            provision "For fixed-floating interest rate swaps, the payer is the counterparty paying the fixed rate"]

          [label for receiverIdentifier "7 Receiver identifier - Leg 2"]
        [regulatoryReference for receiverIdentifier CSA Trade dataElement "7" field "Receiver Identifier"
            provision "Identifier of the counterparty of the payer leg as determined at the time of the transaction.
        A non-exhaustive list of examples of instruments for which this data element could apply are:
            - most swaps and swap-like contracts including interest rate swaps, credit total return swaps, and equity swaps (except for credit default swaps, variance, volatility, and correlation swaps)
            - foreign exchange swaps, forwards, non-deliverable forwards.
        This data element is not applicable to instrument types covered by data elements Buyer identifier and Seller identifier."]
        [regulatoryReference for receiverIdentifier CSA Trade dataElement "7" field "Receiver Identifier" footnote "7"
            provision "For fixed-floating interest rate swaps, the receiver is the counterparty receiving the fixed rate."]
    override strikePrice cde.price.PriceFormat (0..1)
        [label for decimal "56 Strike price"]
        [label for monetary "56 Strike price"]
    override price cde.price.PriceFormat (0..1)
        [label for decimal "46 Price"]
        [label for monetary "46 Price"]
    override packageTransactionPrice cde.price.PriceFormat (0..1)
        [label for decimal "111 Package Transaction Price"]
        [label for monetary "111 Package Transaction Price"]
    override packageTransactionSpread cde.price.PriceFormat (0..1)
        [label for decimal "113 Package Transaction Spread"]
        [label for monetary "113 Package Transaction Spread"]
        [label for basis "113 Package Transaction Spread"]
    override strikePriceSchedule cde.price.PricePeriod (0..*)
        [label for price -> monetary "65/67-$ 67 Strike price in effect on associated effective date"]
        [label for price -> decimal "65/67-$ 67 Strike price in effect on associated effective date"]
        [label for effectiveDate "65/67-$ 65 Effective date of the strike price"]
        [label for endDate "65/67-$ 66 End date of the strike price"]
        [regulatoryReference for price CSA Trade dataElement "67" field "Strike price in effect on associated effective date"
            provision "Strike price in effect between the unadjusted effective date and unadjusted end date inclusive. Strike price schedule is only applicable if the strike price varies per schedule."]
        [regulatoryReference for effectiveDate CSA Trade dataElement "65" field "Effective date of the strike price"
            provision "Unadjusted effective date of the strike price."]
        [regulatoryReference for endDate CSA Trade dataElement "66" field "End date of the strike price"
            provision "Unadjusted end date of the strike price (not applicable if the unadjusted end date of a given schedules period is back-to-back with the unadjusted effective date of the subsequent period)."]
    override priceSchedule cde.price.PricePeriod (0..*)
        [label for price -> monetary "50/52-$ 52 Price in effect between the unadjusted effective and end date"]
        [label for price -> decimal "50/52-$ 52 Price in effect between the unadjusted effective and end date"]
        [label for effectiveDate "50/52-$ 50 Unadjusted effective date of the price"]
        [label for endDate "50/52-$ 51 Unadjusted end date of the price"]
        [regulatoryReference for price CSA Trade dataElement "52" field "Price in effect between the unadjusted effective date and end date"
            provision "For OTC derivative transactions with prices varying throughout the life of the transaction:
        - Price in effect between the unadjusted effective date and unadjusted end date inclusive.
        Price schedule is only applicable if the price varies per schedule. The currency, notation, and unit of measure for the varying prices in the schedule are reported in Price currency, Price notation, and Price unit of measure data elements."]
        [regulatoryReference for effectiveDate CSA Trade dataElement "50" field "Unadjusted effective date of the price"
            provision "For OTC derivative transactions with prices varying throughout the life of the transaction:
        - Unadjusted effective date of the price.
        Price schedule is only applicable if the price varies per schedule. The currency, notation, and unit of measure for the varying prices in the schedule are reported in Price currency, Price notation, and Price unit of measure data elements."]
        [regulatoryReference for endDate CSA Trade dataElement "51" field "Unadjusted end date of the price"
            provision "For OTC derivative transactions with prices varying throughout the life of the transaction:
        - Unadjusted end date of the price (not applicable if the unadjusted end date of a given schedules period is back-to-back with the unadjusted effective date of the subsequent period).
        Price schedule is only applicable if the price varies per schedule. The currency, notation, and unit of measure for the varying prices in the schedule are reported in Price currency, Price notation, and Price unit of measure data elements."]
    override otherPayment cde.payment.OtherPayment (0..*)
        [label for paymentType "141 Other Payment Type"]
        [regulatoryReference for paymentType CSA Trade dataElement "141" field "Other Payment Type"
            provision "Type of Other payment amount. Option premium payment is not included as a payment type as premiums for option are reported using the option premium dedicated data element."]
        [label for amount "136 Other Payment Amount"]
        [regulatoryReference for amount CSA Trade dataElement "136" field "Other Payment Amount"
            provision "Payment amounts with corresponding payment types to accommodate requirements of transaction descriptions from different asset classes."]
        [regulatoryReference for amount CSA Trade dataElement "136" field "Other Payment Amount" footnote "71"
            provision "The set of data elements related to other payments (Other payment type [#141], Other payment amount [#142], Other payment currency [#143], Other payment date [#144], Other payment payer [#139], Other payment receiver [#140]) can be reported multiple times in the case of multiple payments"]
        [label for currency "137 Other Payment Currency"]
        [regulatoryReference for currency CSA Trade dataElement "137" field "Other Payment Currency"
            provision "Currency in which Other payment amount is denominated."]
        [label for date "138 Other Payment Date"]
        [regulatoryReference for date CSA Trade dataElement "138" field "Other Payment Date"
            provision "Unadjusted date on which the Other payment amount is paid."]
        [label for payer "139 Other Payment Payer"]
        // This rule is implemented within repeating rule OtherPayment. This rule has been maintained so the regulatoryReference and "as" name can be specified.  DSL change request to allow easier modelling https://github.com/finos/rune-dsl/issues/852
        [regulatoryReference for payer CSA Trade dataElement "139" field "Other Payment Payer"
            provision "Identifier of the payer of Other payment amount."]
        [label for payerFormat "139 Other payment payer format (non-reportable)"]
        [label for receiver "140 Other Payment Receiver"]
        // This rule is implemented within repeating rule OtherPayment. This rule has been maintained so the regulatoryReference and "as" name can be specified.  DSL change request to allow easier modelling https://github.com/finos/rune-dsl/issues/852
        [regulatoryReference for receiver CSA Trade dataElement "140" field "Other Payment Receiver"
            provision "Identifier of the receiver of Other payment amount."]
        [label for receiverFormat "140 Other payment receiver format (non-reportable)"]
    override eventTimestamp zonedDateTime (1..1)
    // Sprint 2025-11: CSA basket constituents type should extend from common.basket.BasketConstituentsReport once DSL gets upgraded to support deserializing multi-cardinality sub-types
    override basketConstituents cde.basket.BasketConstituentsReport (0..*)
        [ruleReference BasketConstituents]
    // //
    override clearingAccountOrigin ClearingAccountOriginEnum (0..1)
        [label "74 Clearing Account Origin"]
        [regulatoryReference CSA Trade dataElement "74" field "Clearing Account Origin"
            provision "Indicator of whether the clearing member acted as principal for a house trade or an agent for a customer trade."]
        [ruleReference ClearingAccountOrigin]
    override clearingReceiptTimestamp zonedDateTime (0..1)
        [label "76 Clearing Receipt Timestamp"]
        [regulatoryReference CSA Trade dataElement "76" field "Clearing Receipt Timestamp"
            provision "The date and time, expressed in Coordinated Universal Time (UTC), the original swap was received by the derivatives clearing organization (DCO) for clearing and recorded by the DCOs system."]
        [regulatoryReference CSA Trade dataElement "76" field "Clearing Receipt Timestamp" footnote "32"
            provision "References to derivatives clearing organization or DCO in CFTC data element explanations should be read to mean clearing agency or, in Quebec, clearing house."]
        [ruleReference ClearingReceiptTimestamp]
    override buyerIdentifier Min20Max72AlphaNumericText (0..1)
        [label "4 Buyer identifier"]
        [regulatoryReference CSA Trade dataElement "4" field "Buyer Identifier"
            provision "Identifier of the counterparty that is the buyer, as determined at the time of the transaction.
                A non-exhaustive list of examples of instruments for which this data element could apply are:
                    - most forwards and forward-like contracts (except for foreign exchange forwards and foreign exchange non-deliverable forwards)
                    - most options and option-like contracts including swaptions, caps and floors
                    - credit default swaps (buyer/seller of protection)
                    - variance, volatility and correlation swaps
                    - contracts for difference and spreadbets.
                This data element is not applicable to instrument types covered by data elements Payer identifier and Receiver identifier."]
        [ruleReference BuyerIdentifier]
    override sellerIdentifier Min20Max72AlphaNumericText (0..1)
        [label "5 Seller identifier"]
        [regulatoryReference CSA Trade dataElement "5" field "Seller Identifier"
            provision "Identifier of the counterparty that is the seller, as determined at the time of the transaction.
                A non-exhaustive list of examples of instruments for which this data element could apply are:
                    - most forwards and forward-like contracts (except for foreign exchange forwards and foreign exchange non-deliverable forwards)
                    - most options and option-like contracts including swaptions, caps and floors
                    - credit default swaps (buyer/seller of protection)
                    - variance, volatility and correlation swaps
                    - contracts for difference and spreadbets.
                This data element is not applicable to instrument types covered by data elements Payer identifier and Receiver identifier."]
        [ruleReference SellerIdentifier]
    override priorUSI Max42AlphaNumericText (0..1)
        [label "19 Prior USI"]
        [regulatoryReference CSA Trade dataElement "19" field "Prior USI"
            provision "Unique swap identifier (USI) assigned to the predecessor transaction that has given rise to the reported transaction due to a lifecycle event, in a one-to-one relation between transactions (e.g., in the case of a novation, when a transaction is terminated, and a new transaction is generated) or in a one-to-many relation between transactions (e.g., in clearing or if a transaction is split into several different transactions), This data element is not applicable when reporting many-to-one and many-to-many relations between transactions (e.g., in the case of a compression)."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250327" field "Prior USI"
            provision "It is expected that all USI are the same. Thus, as an improvement of the coding instead of extracting 'last', it was decided to extract 'distinct only-element'."]
        [ruleReference PriorUSI]
    override initialMarginCollateralPortfolioCode Max52AlphaNumericText (0..1)
        [label "94 Initial Margin Collateral Portfolio Code"]
        [regulatoryReference CSA Trade dataElement "94" field "Initial Margin Collateral Portfolio Code"
            provision "If collateral is reported on a portfolio basis, a unique code assigned by the reporting counterparty to the portfolio that tracks the aggregate initial margin of a set of open transactions. This data element is not applicable if the collateralisation was performed on a transaction level basis, or if there is no collateral agreement, or if no collateral is posted or received. The portfolio code is required for both collateral reporting and valuation reporting in order to link the 2 data sets."]
        [regulatoryReference CSA Trade dataElement "94" field "Initial Margin Collateral Portfolio Code" footnote "47"
            provision "If collateralization was performed on a transaction level basis, TRANSACTIONLEVEL is accepted. NOTAPPLICABLE is accepted if (i)collateralization was performed on a portfolio basis and there is no VM portfolio code, or (ii) it is a submission from a DCO."]
        [ruleReference InitialMarginCollateralPortfolioCode]
    override variationMarginCollateralPortfolioCode Max52AlphaNumericText (0..1)
        [label "93 Variation Margin Collateral Portfolio Code"]
        [regulatoryReference CSA Trade dataElement "93" field "Variation Margin Collateral Portfolio Code"
            provision "If collateral is reported on a portfolio basis, a unique code assigned by the reporting counterparty to the portfolio that tracks the aggregate variation margin related to a set of open transactions. This data element is not applicable if the collateralisation was performed on a transaction level basis, or if there is no collateral agreement, or if no collateral is posted or received. The portfolio code is required for both collateral reporting and valuation reporting in order to link the 2 data sets."]
        [regulatoryReference CSA Trade dataElement "93" field "Variation Margin Collateral Portfolio Code" footnote "46"
            provision "If collateralization was performed on a transaction level basis, TRANSACTIONLEVEL is accepted. NOTAPPLICABLE is accepted if (i)collateralization was performed on a portfolio basis and there is no VM portfolio code, or (ii) it is a submission from a DCO."]
        [ruleReference VariationMarginCollateralPortfolioCode]
    override subsequentPositionUTI UTIIdentifierLegacy (0..1)
        [label "18 Subsequent Position UTI"]
        [regulatoryReference CSA Trade dataElement "18" field "Subsequent Position UTI"
            provision "The UTI of the position in which a derivative is included. This field is applicable only for the reports related to the termination of a derivative due to its inclusion in a position."]
        [ruleReference SubsequentPositionUTI]
    override masterAgreementType common.contract.MasterAgreementEnum (0..1)
        [label "24 Master Agreement Type"]
        [regulatoryReference CSA Trade dataElement "24" field "Master Agreement Type"
            provision "Reference to the master agreement type under which the counterparties concluded a derivative."]
        [ruleReference MasterAgreementType]
    override masterAgreementVersion int (0..1)
        [label "25 Master Agreement version"]
        [regulatoryReference CSA Trade dataElement "25" field "Master Agreement version"
            provision "Reference to the year of the master agreement (e.g. 1992, 2002) relevant to the reported trade, if applicable."]
        [ruleReference MasterAgreementVersion]
    override nonStandardizedTermIndicator boolean (0..1)
        [label "68 Non-standardized Term Indicator"]
        [regulatoryReference CSA Trade dataElement "68" field "Non-standardized Term Indicator"
            provision "Indicator of whether the swap transaction has one or more additional term(s) or provision(s), other than those disseminated to the public pursuant to part 43, that materially affect(s) the price of the transaction."]
        [regulatoryReference CSA Trade dataElement "68" field "Non-standardized Term Indicator" footnote "29"
            provision "The reporting counterparty may report this data element in a manner that reflects public dissemination under the requirements of any regulator (for example, under CFTC Part 43 or the TR Rules)."]
        [ruleReference NonStandardizedTermIndicator]
    override level ReportLevelEnum (0..1)
        [label  "96 Level"]
        [regulatoryReference CSA Trade dataElement "96" field "Level"
            provision "Indication whether the report is done at trade or position level. Position level report can be used as a supplement to trade level reporting to report post-trade events and if individual trades have been replaced by the position."]
        [ruleReference Level]
    override amendmentIndicator boolean (0..1)
        [label "100 Amendment Indicator"]
        [regulatoryReference CSA Trade dataElement "100" field "Amendment Indicator"
            provision "Indicator of whether the modification of the transaction reflects newly agreed upon term(s) from the previously negotiated terms."]
        [ruleReference AmendmentIndicator]
    override packageIndicator boolean (0..1)
        [label "109 Package Indicator"]
        [regulatoryReference CSA Trade dataElement "109" field "Package Indicator"
            provision "Indicator of whether the swap transaction is part of a package transaction."]
        [ruleReference PackageIndicator]
    override brokerID LEIIdentifier (0..1)
        [ruleReference BrokerIdentifier]
    override clearingMember LEIIdentifier (0..1)
        [label "75 Clearing Member Identifier"]
        [regulatoryReference CSA Trade dataElement "75" field "Clearing Member Identifier"
            provision "Identifier of the clearing member identifier through which a derivative transaction was cleared at a central counterparty. This data element is applicable to cleared transactions under both the agency clearing model and the principal clearing model.
           	 - In the case of the principal clearing model, the clearing member identifier is identified as clearing member identifier and also as a counterparty in both transactions resulting from clearing:
                (i) in the transaction between the central counterparty and the clearing member identifier; and
                (ii) in the transaction between the clearing member identifier and the counterparty to the original alpha transaction.
           	 - In the case of the agency clearing model, the clearing member is identified as clearing member identifier but not as the counterparty to transactions resulting from clearing. Under this model, the counterparties are the central counterparty and the client.
        	This data element is not applicable if the value of the data element 'Cleared' is 'N' (No, not centrally cleared) or 'I' (Intent to clear)"]
        [regulatoryReference CSA Trade dataElement "75" field "Clearing Member Identifier" footnote "31"
            provision "Reporting counterparties should report clearing swaps according to the agency clearing model."]
        [regulatoryReference ISDA CanadianDataAndReporting date "20250508" field "Clearing Member Identifier"
            provision "Reporting firms on the WG call said they would be using an LEI. There is only a possible use case for crypto trades reporting by SEFs; however, DRR is not going to model this case until is demanded by firms."]
        [ruleReference ClearingMemberIdentifier]
    override settlementLocation ISOCountryCodeEnum (0..1)
        [label "134 Settlement Location"]
        [regulatoryReference CSA Trade dataElement "134" field "Settlement Location"
            provision "Place of settlement of the transaction as stipulated in the contract. This data element is only applicable for transactions that involve an offshore currency (i.e. a currency which is not included in the ISO 4217 currency list, for example CNH)."]
        [ruleReference SettlementLocation]
    override clearingExceptionsAndExemptionsCounterparty1 ClearingExceptionsAndExemptionsEnum (0..6)
        [label "77-$ Clearing exceptions and exemptions - Counterparty 1"]
        [regulatoryReference CSA Trade dataElement "77" field "Clearing Exceptions And Exemptions Counterparty 1"
            provision "The type of clearing exception or exemption that the Counterparty 1 has elected or otherwise falls under. All applicable exceptions and exemptions must be selected. The values may be repeated as applicable."]
        [regulatoryReference CSA Trade dataElement "77" field "Clearing Exceptions And Exemptions Counterparty 1" footnote "33"
            provision "Refer to Parts 3 and 5 of NI 94-101 Mandatory Central Counterparty Clearing of Derivatives. However, reporting counterparties may provide clearing exceptions for Data Elements #77 and 78 that are relevant to CFTC. As a result, reporting counterparties should not need to report these data elements differently under the TR Rules compared to how they are reported for the CFTC."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250320" field "Clearing Exceptions And Exemptions Counterparty 1"
            provision "ISDA CAD WG consensus for CSA #77 and #78, as requested on the March 20 Joint ISDA EU/UK/N. America DRR Peer Review & DRR Technical Execution, agreed on the following:
            - For Canadian RCPs that do NOT also have a reporting obligation under CFTC rules: ENDU, SMBK, COOP, NOAL would never be reported for #77 or #78. Report only the values OTHR or AFFL; and
            - For Canadian RCPs that also have a reporting obligation under CFTC rules: report #77 and #78 to CSA as it would be reported under CFTC rules (e.g. report any of the allowable values listed in #77 and #78 including ENDU, SMBK, COOP, or NOAL, as applicable for the trade)."]
        [regulatoryReference CSA Trade dataElement "77" field "Clearing Exceptions And Exemptions Counterparty 1"
            provision "The type of clearing exception or exemption that the Counterparty 1 has elected or otherwise falls under. All applicable exceptions and exemptions must be selected. The values may be repeated as applicable."]
        [ruleReference ClearingExceptionsAndExemptionsCounterparty1]
    override clearingExceptionsAndExemptionsCounterparty2 ClearingExceptionsAndExemptionsEnum (0..6)
        [regulatoryReference CSA Trade dataElement "78" field "Clearing Exceptions And Exemptions Counterparty 2"
            provision "Identifies the type of the clearing exception or exemption that Counterparty 2 has elected or otherwise falls under. All applicable exceptions and exemptions must be selected. The values may be repeated as applicable."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250320" field "Clearing Exceptions And Exemptions Counterparty 2"
            provision "ISDA CAD WG consensus for CSA #77 and #78, as requested on the March 20 Joint ISDA EU/UK/N. America DRR Peer Review & DRR Technical Execution, agreed on the following:
            - For Canadian RCPs that do NOT also have a reporting obligation under CFTC rules: ENDU, SMBK, COOP, NOAL would never be reported for #77 or #78. Report only the values OTHR or AFFL; and
            - For Canadian RCPs that also have a reporting obligation under CFTC rules: report #77 and #78 to CSA as it would be reported under CFTC rules (e.g. report any of the allowable values listed in #77 and #78 including ENDU, SMBK, COOP, or NOAL, as applicable for the trade)."]
        [regulatoryReference CSA Trade dataElement "78" field "Clearing Exceptions And Exemptions Counterparty 2"
            provision "Identifies the type of the clearing exception or exemption that Counterparty 2 has elected or otherwise falls under. All applicable exceptions and exemptions must be selected. The values may be repeated as applicable."]
        [ruleReference ClearingExceptionsAndExemptionsCounterparty2]
    override customBasketCode Min20Max72AlphaNumericText (0..1)
        [label "122 Custom Basket Code"]
        [regulatoryReference CSA Trade dataElement "122" field "Custom Basket Code"
            provision "If the OTC derivative transaction is based on a custom basket, unique code assigned by the structurer of the custom basket to link its constituents. This data element is not applicable if no custom basket is involved or no unique code has been assigned to it."]
        [regulatoryReference CSA Trade dataElement "122" field "Custom Basket Code" footnote "61"
            provision "The LEI code should represent the LEI of the entity assigning the basket code."]
        [ruleReference CustomBasketCode]
    override customBasketIndicator boolean (0..1)
        [label "123 Custom Basket Indicator"]
        [regulatoryReference CSA Trade dataElement "123" field "Custom Basket Indicator"
            provision "Indicator of whether the swap transaction is based on a custom basket."]
        [ruleReference CustomBasketIndicator]
    override counterparty2IdentifierSource Counterparty2IdentifierEnum (1..1)
        [ruleReference Counterparty2IdentifierSource]
    override exchangeRateBasis string (0..1)
        [label "44 Exchange rate basis"]
        [regulatoryReference CSA Trade dataElement "44" field "Exchange Rate Basis"
            provision "Currency pair and order in which the exchange rate is denominated, expressed as unit currency/quoted currency. In the example 0.9426 USD/EUR, USD is the unit currency and EUR is the quoted currency, USD 1 = EUR 0.9426."]
        [ruleReference ExchangeRateBasis]
    override nonReportable CSANonReportable (0..1)
        [label for notionalSchedule "Notional Schedule (non-reportable)"]
        [regulatoryReference for notionalSchedule ISDA EUUKNAPeerReviewGroup date "20250416" field "Notional Schedule (non-reportable)"
            provision "The firms proposed extracting post-UPI information through an alternative method for entities not utilizing the UPI, with the objective of enabling the use of the Validation Rules. Consequently, this non-reportable field has been created, which in this instance extracts the Notional Schedule."]
        [ruleReference for notionalSchedule common.quantity.NotionalSchedule]
        [label for underlyingAssetType "Underlying Asset Type (non-reportable)"]
        [regulatoryReference for underlyingAssetType ISDA EUUKNAPeerReviewGroup date "20250416" field "Underlying Asset Type (non-reportable)"
            provision "The firms proposed extracting post-UPI information through an alternative method for entities not utilizing the UPI, with the objective of enabling the use of the Validation Rules. Consequently, this non-reportable field has been created, which in this instance extracts the Underlying Asset Type."]
        [ruleReference for underlyingAssetType common.contract.UnderlyingAssetType]
        [label for instrumentType "Instrument Type (non-reportable)"]
        [regulatoryReference for instrumentType ISDA EUUKNAPeerReviewGroup date "20250416" field "Instrument Type (non-reportable)"
            provision "The firms proposed extracting post-UPI information through an alternative method for entities not utilizing the UPI, with the objective of enabling the use of the Validation Rules. Consequently, this non-reportable field has been created, which in this instance extracts the Instrument Type."]
        [ruleReference for instrumentType InstrumentType]
    override originalSwapUTI Max52AlphaNumericText (0..1)
        [ruleReference empty]
    override originalSwapSDRIdentifier LEIIdentifier (0..1)
        [ruleReference empty]
    override countryOfTheCounterparty2 ISOCountryCodeEnum (0..1)
        [ruleReference empty]
    override valuationAmount ShortFraction5DecimalNumber (0..1)
        [ruleReference empty]
    override valuationCurrency ISOCurrencyCodeEnum (0..1)
        [ruleReference empty]
    override valuationTimestamp zonedDateTime (0..1)
        [ruleReference empty]
    override confirmationTimestamp zonedDateTime (0..1)
        [ruleReference empty]
    override delta ShortFraction5DecimalNumber (0..1)
        [ruleReference empty]
    override seriesVersion Max5Int (0..1)
        [ruleReference empty]
    override secondaryTransactionIdentifier Max72AlphaNumericText (0..1)
        [ruleReference empty]
    override swapLinkID Max35AlphaNumericText (0..1)
        [ruleReference empty]
    override intragroup boolean (0..1)
        [ruleReference empty]
    override entityResponsibleForReporting LEIIdentifier (0..1)
        [ruleReference empty]
    override underlyingIdOther Max210Text (0..1)
        [ruleReference empty]
    override underlyingIdOtherSource ProductIdTypeEnum (0..1)
        [ruleReference empty]
    override cryptoAssetUnderlyingIndicator boolean (0..1)
        [ruleReference empty]
    countryAndProvinceOrTerritoryOfIndividual Max5Text (0..1)
        [ruleReference CountryAndProvinceOrTerritoryOfIndividual]
    jurisdictionOfCounterparty1 string (0..13)
        [ruleReference JurisdictionOfCounterparty1]
    jurisdictionOfCounterparty2 string (0..13)
        [ruleReference JurisdictionOfCounterparty2]
    interAffiliateIndicator boolean (0..1)
        [ruleReference InterAffiliateIndicator]
    platformAnonymousExecutionIndicator boolean (0..1)
        [ruleReference PlatformAnonymousExecutionIndicator]
    dtccAdditionalFields DTCCAdditionalFields (1..1)

    condition DTCC_CSA_VR_0002_01: <"Counterparty 2 (non-reporting counterparty)">
        [docReference DTCC Trade dataElement "2" validationRule "Transaction"
      provision "If [NoA - Action Type] = 'EROR', 'TERM', or 'PRTO', rules have been relaxed to allow for the termination of trades where the Counterparty's identifiers are not known as follows:
        - Counterparty fields [Trade Party 2 - ID] and [Trade Party 2 - ID Type] do not have to match the [Trade Party 2 - ID] and [Trade Party 2 - ID Type] of the live trade.
        - However, if there is more than one live trade (for the same UTI/USI)  where [Trade Party 1 - ID] and [Trade Party 1 - ID Type] are the same, the submission will NACK."]
    [regulatoryReference ISDA ISDAWorkingGroup date "unknown"
        provision "Not modelled. The condition cannot be executed in a stateless environment."]
        True

    condition DTCC_CSA_VR_0003_01: <"Counterparty 2 Identifier Source">
        [docReference DTCC Trade dataElement "3" validationRule "Transaction"
      provision "If [NoA - Action Type] = 'EROR', 'TERM', or 'PRTO', rules have been relaxed to allow for the termination of trades where the Counterparty's identifiers are not known as follows:
        - Counterparty fields [Trade Party 2 - ID] and [Trade Party 2 - ID Type] do not have to match the [Trade Party 2 - ID] and [Trade Party 2 - ID Type] of the live trade."]
    [regulatoryReference ISDA ISDAWorkingGroup date "unknown"
        provision "Not modelled. The condition cannot be executed in a stateless environment."]
        True

    condition CSA_VR_0004_01: <"Buyer Identifier">
        [regulatoryReference CSA Trade dataElement "4" validationRule "Transaction"
      provision "C if [Payer identifier] and [Receiver identifier] are not populated, else {blank}; 
      When populated, the value shall match the value in [Counterparty 1 (reporting counterparty)] or [Counterparty 2]."]
      [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Buyer Identifier"
      provision "Validation rule eliminated from PPD report since this field is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if (leg1 -> payerIdentifier is absent and leg2 -> payerIdentifier is absent)
                    and (leg1 -> receiverIdentifier is absent and leg2 -> receiverIdentifier is absent)
            then (buyerIdentifier exists and (buyerIdentifier = counterparty1 or buyerIdentifier = counterparty2))
            else buyerIdentifier is absent)

    condition DTCC_CSA_VR_0004_01: <"Buyer Identifier">
        [docReference DTCC Trade dataElement "4" validationRule "Transaction"
      provision "Required if [Seller / Payer 2] is populated."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Buyer Identifier"
      provision "Validation rule eliminated from PPD report since this field is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if sellerIdentifier exists then buyerIdentifier exists)

    condition CSA_VR_0005_01: <"Seller Identifier">
        [regulatoryReference CSA Trade dataElement "5" validationRule "Transaction"
      provision "C if [Payer identifier] and [Receiver identifier] are not populated, else {blank};
      When populated, the value shall match the value in [Counterparty 1 (reporting counterparty)] or [Counterparty 2]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Seller Identifier"
      provision "Validation rule eliminated from PPD report since this field is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if (leg1 -> payerIdentifier is absent and leg2 -> payerIdentifier is absent)
                    and (leg1 -> receiverIdentifier is absent and leg2 -> receiverIdentifier is absent)
            then (sellerIdentifier exists and (sellerIdentifier = counterparty1 or sellerIdentifier = counterparty2))
            else sellerIdentifier is absent)

    condition DTCC_CSA_VR_0005_01: <"Seller Identifier">
        [docReference DTCC Trade dataElement "5" validationRule "Transaction"
      provision "Required if [Buyer / Payer 1] is populated."]
      [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Seller Identifier"
      provision "Validation rule eliminated from PPD report since this field is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if buyerIdentifier exists then sellerIdentifier exists)

    condition CSA_VR_0006_01: <"Payer Identifier">
        [regulatoryReference CSA Trade dataElement "6" validationRule "Transaction"
      provision "C if [Buyer identifier] and [Seller identifier] are not populated, else {blank};
      When populated, the value shall match the value in [Counterparty 1 (reporting counterparty)] or [Counterparty 2]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Payer Identifier"
      provision "Validation rule eliminated from PPD report since this field is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if buyerIdentifier is absent and sellerIdentifier is absent
            then ((if leg1 -> payerIdentifier exists then [counterparty1, counterparty2] any = leg1 -> payerIdentifier)
                    and (if leg2 -> payerIdentifier exists then [counterparty1, counterparty2] any = leg2 -> payerIdentifier))
            else leg1 -> payerIdentifier is absent and leg2 -> payerIdentifier is absent)

    condition DTCC_CSA_VR_0006_01: <"Payer Identifier">
        [docReference DTCC Trade dataElement "6" validationRule "Transaction"
      provision "Required if [Payment 1 - Receiver] is populated."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Payer Identifier"
      provision "Validation rule eliminated from PPD report since this field is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if leg1 -> receiverIdentifier exists
            then leg1 -> payerIdentifier exists)

    condition CSA_VR_0007_01: <"Receiver Identifier">
        [regulatoryReference CSA Trade dataElement "7" validationRule "Transaction"
      provision "C if [Buyer identifier] and [Seller identifier] are not populated, else {blank};
      When populated, the value shall match the value in [Counterparty 1 (reporting counterparty)] or [Counterparty 2]"]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Receiver Identifier"
      provision "Validation rule eliminated from PPD report since this field is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if buyerIdentifier is absent and sellerIdentifier is absent
            then ((if leg1 -> receiverIdentifier exists then [counterparty1, counterparty2] any = leg1 -> receiverIdentifier)
                    and (if leg2 -> receiverIdentifier exists then [counterparty1, counterparty2] any = leg2 -> receiverIdentifier))
            else leg1 -> receiverIdentifier is absent
                and leg2 -> receiverIdentifier is absent)

    condition DTCC_CSA_VR_0007_01: <"Receiver Identifier">
        [docReference DTCC Trade dataElement "7" validationRule "Transaction"
      provision "Required if [Payment 1 - Payer] is populated."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Receiver Identifier"
      provision "Validation rule eliminated from PPD report since this field is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if leg1 -> payerIdentifier exists
            then leg1 -> receiverIdentifier exists)

    condition DTCC_CSA_VR_0008_01: <"Broker Identifier">
        [docReference DTCC Trade dataElement "8" validationRule "Transaction"
      provision "Required if [Trade Party 1 - Broker ID Type] is populated."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Broker Identifier"
      provision "Validation rule eliminated from PPD report since this field is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if dtccAdditionalFields -> tradeParty1BrokerIDType exists
            then brokerID exists)

    condition DTCC_CSA_VR_0009_01: <"Country And Province Or Territory Of Individual">
        [docReference DTCC Trade dataElement "9" validationRule "Transaction"
      provision "Allowed when [Trade Party 2 - ID Type] = NPID. We will NACK if [Trade Party 2 - ID Type] does not equal NPID."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Country And Province Or Territory Of Individual"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if counterparty2IdentifierSource = NPID
            then countryAndProvinceOrTerritoryOfIndividual exists
            else if counterparty2IdentifierSource exists
            then countryAndProvinceOrTerritoryOfIndividual is absent)

    condition CSA_VR_0013_01: <"Expiration Date">
        [regulatoryReference CSA Trade dataElement "13" validationRule "Transaction"
      provision "C if UPI.[ReturnorPayoutTrigger] is not Contract for Difference (CFD), else {blank}. When populated, the value shall be equal to or later than the value in [Effective date]."]
        if (nonReportable -> postUpiData -> Derived -> ReturnorPayoutTrigger exists
                    and nonReportable -> postUpiData -> Derived -> ReturnorPayoutTrigger <> Contract_for_Difference_CFD_)
                or nonReportable -> returnorPayoutTrigger <> "Contract_for_Difference_CFD_"
        then expirationDate exists and expirationDate >= effectiveDate
        else expirationDate is absent

    condition CSA_VR_0015_01: <"Reporting Timestamp">
        [regulatoryReference CSA Trade dataElement "15" validationRule "Transaction"
      provision "M, the value shall be equal to or later than the value in [Execution timestamp]"]
        reportingTimestamp >= executionTimestamp

    condition DTCC_CSA_VR_0016_01: <"Unique Transaction Identifier">
        [docReference DTCC Trade dataElement "16" validationRule "Transaction"
      provision "Required when [NoA - Action Type] = 'NEWT' or when [USI ID] is blank."]
        if actionType = NEWT or dtccAdditionalFields -> usiID is absent
        then uniqueTransactionIdentifier exists

    condition CSA_VR_0017_01: <"Prior UTI">
        [regulatoryReference CSA Trade dataElement "17" validationRule "Transaction"
      provision "C if [Action type] = NEWT and ([Event type] = NOVA or CLRG or EXER or ALOC or CLAL) and [Prior USI (for one-to-one and one-to-many relations between transactions)] is not populated, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Prior UTI"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if actionType = NEWT
                    and [EventTypeEnum -> NOVA, EventTypeEnum -> CLRG, EventTypeEnum -> EXER, EventTypeEnum -> ALOC, EventTypeEnum -> CLAL] any = eventType
                    and priorUSI is absent
            then priorUTI exists
            else priorUTI is absent)

    condition DTCC_CSA_VR_0017_01: <"Prior UTI">
        [docReference DTCC Trade dataElement "17" validationRule "Transaction"
      provision "Required when [Prior UTI ID Prefix] is populated.
      Required if [NoA - Action Type] = NEWT and ([Event type] = NOVA or CLRG or EXER or ALOC or CLAL) and [Prior USI] is not populated, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250327" field "Prior UTI"
      provision "The group agreed on not considering [Prior UTI ID Prefix] due to it comes from an old format and it had been agreed to only consider one field, that is [Prior UTI ID], considering the concatenation of both fields. Thus, [Prior UTI ID] is the only field that can be populated. As a result, this validation rule is the same as the one from CSA regulator (CSA_VR_0017_01), hence it was decided to leave it empty."]
        empty

    condition CSA_VR_0018_01: <"Subsequent position UTI">
        [regulatoryReference CSA Trade dataElement "18" validationRule "Transaction"
      provision "C if ([Action type] = POSC) or ([Action type] = TERM and [Event type] = INCP), else {blank}."]
        if (actionType = POSC) or (actionType = TERM and eventType = INCP)
        then subsequentPositionUTI exists
        else subsequentPositionUTI is absent

    condition CSA_VR_0019_01: <"Prior USI">
        [regulatoryReference CSA Trade dataElement "19" validationRule "Transaction"
      provision "C if [Action type] = NEWT and ([Event type] = NOVA or CLRG or EXER or ALOC or CLAL) and [Prior UTI (for one-to-one and one-to-many relations between transactions)] is not populated, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Prior USI"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if actionType = NEWT
                    and [EventTypeEnum -> NOVA, EventTypeEnum -> CLRG, EventTypeEnum -> EXER, EventTypeEnum -> ALOC, EventTypeEnum -> CLAL] any = eventType
                    and priorUTI is absent
            then priorUSI exists
            else priorUSI is absent)

    condition DTCC_CSA_VR_0019_01: <"Prior USI">
        [docReference DTCC Trade dataElement "19" validationRule "Transaction"
      provision "Required when [Prior USI ID Prefix] is populated.
      Required if [NoA - Action Type] = NEWT and ([Event type] = NOVA or CLRG or EXER or ALOC or CLAL) and [Prior UTI ID] is not populated, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250327" field "Prior USI"
      provision "The group agreed on not considering [Prior USI ID Prefix] due to it comes from an old format and it had been agreed to only consider one field, that is [Prior USI ID], considering the concatenation of both fields. Thus, [Prior USI ID] is the only field that can be populated. As a result, this validation rule is the same as the one from CSA regulator (CSA_VR_0019_01), hence it was decided to leave it empty."]
        empty

    condition DTCC_CSA_VR_0020_01: <"Inter-Affiliate Indicator">
        [docReference DTCC Trade dataElement "20" validationRule "Transaction"
      provision "Required if [SEF or DCM Anonymous Execution Indicator] = False or {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Inter-Affiliate Indicator"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if platformAnonymousExecutionIndicator = False
                    or platformAnonymousExecutionIndicator is absent
            then interAffiliateIndicator exists)

    condition CSA_VR_0022_01: <"Platform Identifier">
        [regulatoryReference CSA Trade dataElement "22" validationRule "Transaction"
      provision "C if [Cleared] = N or I; NR if [Cleared] = Y."]
        if cleared = N or cleared = I
        then platformIdentifier exists
        else if cleared = Y
        then platformIdentifier is absent

    condition DTCC_CSA_VR_0023_01: <"Platform Anonymous Execution Indicator">
        [docReference DTCC Trade dataElement "23" validationRule "Transaction"
      provision "CCP and DCO: Required when [NoA - Action Type] = 'TERM' and ([Event Type] = 'CLRG' or = 'CLAL')."]
        if actionType = TERM
                and ([EventTypeEnum -> CLRG, EventTypeEnum -> CLAL] any = eventType)
                and centralCounterparty exists
        then platformAnonymousExecutionIndicator exists

    condition DTCC_CSA_VR_0024_01: <"Master Agreement Type">
        [docReference DTCC Trade dataElement "24" validationRule "Transaction"
      provision "Required if [SEF or DCM Anonymous Execution Indicator] = False or {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Master Agreement Type"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if platformAnonymousExecutionIndicator = False
                    or platformAnonymousExecutionIndicator is absent
            then masterAgreementType exists)

    condition CSA_VR_0025_01: <"Master Agreement Version">
        [regulatoryReference CSA Trade dataElement "25" validationRule "Transaction"
      provision "C if [Master agreement type] is populated with a value different from BIAG or OTHR, this field shall be populated."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Master Agreement Version"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if masterAgreementType exists
                    and (masterAgreementType <> BIAG and masterAgreementType <> OTHR)
            then masterAgreementVersion exists
            else masterAgreementVersion is absent)

    condition DTCC_CSA_VR_0025_01: <"Master Agreement Version">
        [docReference DTCC Trade dataElement "25" validationRule "Transaction"
      provision "This field is not required when [Master Agreement Type] is {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Master Agreement Version"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if masterAgreementType is absent
            then masterAgreementVersion is absent)

    condition CSA_VR_0026_01: <"Notional Amount-Leg 1">
        [regulatoryReference CSA Trade dataElement "26" validationRule "Transaction"
      provision "Transaction FX - M, if UPI.[Instrument type] = Option, the value shall match the value in [Call amount] or [Put amount].
                Transaction CR/FX/CO/EQ - M"]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250327" field "Notional Amount-Leg 1"
      provision "The group agreed to split the condition into two: one for leg 1 and the other for leg 2."]
        if (nonReportable -> postUpiData -> Header -> AssetClass = Foreign_Exchange
                    or dtccAdditionalFields -> primaryAssetClass = ForeignExchange)
                and (nonReportable -> postUpiData -> Header -> InstrumentType = Option
                    or nonReportable -> instrumentType = Option)
        then (leg1 -> notionalAmount exists and [callAmount, putAmount] any = leg1 -> notionalAmount)
        else if [AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Foreign_Exchange, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Credit, AssetClassEnum -> ForeignExchange, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass
        then leg1 -> notionalAmount exists

    condition CSA_VR_0026_02: <"Notional Amount-Leg 2">
        [regulatoryReference CSA Trade dataElement "26" validationRule "Transaction"
      provision "Transaction FX - M, if UPI.[Instrument type] = Option, the value shall match the value in [Call amount] or [Put amount].
                Transaction CR/FX/CO/EQ - M"]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250327" field "Notional Amount-Leg 2"
      provision "The group agreed to split the condition into two: one for leg 1 and the other for leg 2."]
        if (nonReportable -> postUpiData -> Header -> AssetClass = Foreign_Exchange
                    or dtccAdditionalFields -> primaryAssetClass = ForeignExchange)
                and (nonReportable -> postUpiData -> Header -> InstrumentType = Option
                    or nonReportable -> instrumentType = Option)
        then (leg2 -> notionalAmount exists and [callAmount, putAmount] any = leg2 -> notionalAmount)
        else if [AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Foreign_Exchange, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Credit, AssetClassEnum -> ForeignExchange, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass
        then leg2 -> notionalAmount exists

    condition DTCC_CSA_VR_0026_01: <"Notional Amount-Leg 1">
        [docReference DTCC Trade dataElement "26" validationRule "Transaction"
      provision "For FX (on NEWT, MODI, CORR, REVI), if UPI.[Instrument type] = Option, the value shall match the value in [CDE - Call amount-Leg 1] or [CDE - Put amount-Leg 1]."]
        if (nonReportable -> postUpiData -> Header -> AssetClass = Foreign_Exchange
                    or dtccAdditionalFields -> primaryAssetClass = ForeignExchange)
                and [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI] any = actionType
                and (nonReportable -> postUpiData -> Header -> InstrumentType = Option
                    or nonReportable -> instrumentType = Option)
        then leg1 -> notionalAmount = callAmount or leg1 -> notionalAmount = putAmount

    condition DTCC_CSA_VR_0026_02: <"Notional Amount-Leg 1">
        [docReference DTCC Trade dataElement "26" validationRule "Transaction"
      provision "Required when [Notional Currency 1] is populated."]
        if leg1 -> notionalCurrency exists
        then leg1 -> notionalAmount exists

    condition DTCC_CSA_VR_0026_03: <"Notional Amount-Leg 2">
        [docReference DTCC Trade dataElement "26" validationRule "Transaction"
      provision "Required when [Notional Currency 2] is populated."]
        if leg2 -> notionalCurrency exists
        then leg2 -> notionalAmount exists

    condition CSA_VR_0027_01: <"Notional Currency">
        [regulatoryReference CSA Trade dataElement "27" validationRule "Transaction"
      provision "M, if UPI.[Instrument type] = Option, the value shall match the value in [Call currency] or [Put currency]."]
        if nonReportable -> postUpiData -> Header -> InstrumentType = Option
                or nonReportable -> instrumentType = Option
        then ((if leg1 -> notionalCurrency exists then [callCurrency, putCurrency] any = leg1 -> notionalCurrency)
                and (if leg2 -> notionalCurrency exists then [callCurrency, putCurrency] any = leg2 -> notionalCurrency))

    condition DTCC_CSA_VR_0027_01: <"Notional Currency-Leg 1">
        [docReference DTCC Trade dataElement "27" validationRule "Transaction"
      provision "Required for FX (on NEWT, MODI, CORR, REVI),if UPI.[Instrument type] = Option, the value shall match the value in [CDE - Call currency-Leg 1] or [CDE - Put currency-Leg 1]."]
        if (nonReportable -> postUpiData -> Header -> AssetClass = Foreign_Exchange
                    or dtccAdditionalFields -> primaryAssetClass = ForeignExchange)
                and [ActionTypeEnum -> NEWT, ActionTypeEnum -> MODI, ActionTypeEnum -> CORR, ActionTypeEnum -> REVI] any = actionType
                and (nonReportable -> postUpiData -> Header -> InstrumentType = Option
                    or nonReportable -> instrumentType = Option)
        then leg1 -> notionalCurrency = callCurrency
                or leg1 -> notionalCurrency = putCurrency

    condition DTCC_CSA_VR_0027_02: <"Notional Currency-Leg 1">
        [docReference DTCC Trade dataElement "27" validationRule "Transaction"
      provision "Required when ([Notional Amount 1] is populated and value <> 99999999999999999999.99999) or ([CDE - Notional amount in effect on associated effective date-Leg 1] is populated."]
        if (leg1 -> notionalAmount exists and leg1 -> notionalAmount <> 99999999999999999999.99999)
                or (leg1 -> notionalAmountSchedule -> value exists)
        then leg1 -> notionalCurrency exists

    condition DTCC_CSA_VR_0027_03: <"Notional Currency-Leg 2">
        [docReference DTCC Trade dataElement "27" validationRule "Transaction"
      provision "Required when ([Notional Amount 2] is populated and value <> 99999999999999999999.99999) or [CDE - Notional amount in effect on associated effective date-Leg 2] is populated."]
        if (leg2 -> notionalAmount exists and leg2 -> notionalAmount <> 99999999999999999999.99999)
                or (leg2 -> notionalAmountSchedule -> value exists)
        then leg2 -> notionalCurrency exists

    condition CSA_VR_0028_01: <"Call Amount">
        [regulatoryReference CSA Trade dataElement "28" validationRule "Transaction"
      provision "Transaction FX - C if UPI.[Instrument type] = Option, at least one is required: ([Call amount] or [Put amount])."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250327" field "Call amount"
      provision "If the condition is False, then only Call Amount is absent."]
        if (nonReportable -> postUpiData -> Header -> AssetClass = Foreign_Exchange
                    or dtccAdditionalFields -> primaryAssetClass = ForeignExchange)
                and (nonReportable -> postUpiData -> Header -> InstrumentType = Option
                    or nonReportable -> instrumentType = Option)
        then callAmount exists or putAmount exists
        else callAmount is absent

    condition CSA_VR_0029_01: <"Call Currency">
        [regulatoryReference CSA Trade dataElement "29" validationRule "Transaction"
        provision "Transaction FX - C if [Call amount] is populated, else {blank}"]
        if (nonReportable -> postUpiData -> Header -> AssetClass = Foreign_Exchange
                    or dtccAdditionalFields -> primaryAssetClass = ForeignExchange)
                and callAmount exists
        then callCurrency exists
        else callCurrency is absent

    condition CSA_VR_0030_01: <"Put Amount">
        [regulatoryReference CSA Trade dataElement "30" validationRule "Transaction"
      provision "Transaction FX - C if UPI.[Instrument type] = Option, at least one is required: ([Call amount] or [Put amount])"]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250327" field "Call amount"
      provision "If the condition is False, then only Put Amount is absent."]
        if (nonReportable -> postUpiData -> Header -> AssetClass = Foreign_Exchange
                    or dtccAdditionalFields -> primaryAssetClass = ForeignExchange)
                and (nonReportable -> postUpiData -> Header -> InstrumentType = Option
                    or nonReportable -> instrumentType = Option)
        then putAmount exists or callAmount exists
        else putAmount is absent

    condition CSA_VR_0031_01: <"Put Currency">
        [regulatoryReference CSA Trade dataElement "31" validationRule "Transaction"
      provision "Transaction FX - C if [Put amount] is populated, else {blank}"]
        if (nonReportable -> postUpiData -> Header -> AssetClass = Foreign_Exchange
                    or dtccAdditionalFields -> primaryAssetClass = ForeignExchange)
                and putAmount exists
        then putCurrency exists
        else putCurrency is absent

    condition CSA_VR_0032_01: <"Notional Quantity">
        [regulatoryReference CSA Trade dataElement "32" validationRule "Transaction"
      provision "Transaction CO - O"]
        if (nonReportable -> postUpiData -> Header -> AssetClass exists
                    and nonReportable -> postUpiData -> Header -> AssetClass <> Commodities)
                or dtccAdditionalFields -> primaryAssetClass <> Commodity
        then leg1 -> notionalQuantity is absent and leg2 -> notionalQuantity is absent

    condition CSA_VR_0033_01: <"Quantity Frequency">
        [regulatoryReference CSA Trade dataElement "33" validationRule "Transaction"
      provision "Transaction CO - C if [Notional quantity] is populated, else {blank}."]
        if nonReportable -> postUpiData -> Header -> AssetClass = Commodities
                or dtccAdditionalFields -> primaryAssetClass = Commodity
        then ((if leg1 -> notionalQuantity exists then leg1 -> quantityFrequency exists)
                and (if leg1 -> notionalQuantity is absent then leg1 -> quantityFrequency is absent)
                and (if leg2 -> notionalQuantity exists then leg2 -> quantityFrequency exists)
                and (if leg2 -> notionalQuantity is absent then leg2 -> quantityFrequency is absent))
        else leg1 -> quantityFrequency is absent and leg2 -> quantityFrequency is absent

    condition DTCC_CSA_VR_0033_01: <"Quantity Frequency - Leg 1">
        [docReference DTCC Trade dataElement "33" validationRule "Transaction"
      provision "Transaction CO - Required if [Leg 1 - Notional quantity] is populated, else {blank}."]
        if (nonReportable -> postUpiData -> Header -> AssetClass = Commodities
                    or dtccAdditionalFields -> primaryAssetClass = Commodity)
                and leg1 -> notionalQuantity exists
        then leg1 -> quantityFrequency exists
        else leg1 -> quantityFrequency is absent

    condition DTCC_CSA_VR_0033_02: <"Quantity Frequency - Leg 2">
        [docReference DTCC Trade dataElement "33" validationRule "Transaction"
      provision "Transaction CO - Required if [Leg 2 - Notional quantity] is populated, else {blank}."]
        if (nonReportable -> postUpiData -> Header -> AssetClass = Commodities
                    or dtccAdditionalFields -> primaryAssetClass = Commodity)
                and leg2 -> notionalQuantity exists
        then leg2 -> quantityFrequency exists
        else leg2 -> quantityFrequency is absent

    condition CSA_VR_0034_01: <"Quantity Frequency Multiplier">
        [regulatoryReference CSA Trade dataElement "34" validationRule "Transaction"
      provision "Transaction CO - C if [Quantity frequency] <> ONDE or ADHO, else {blank}."]
        if nonReportable -> postUpiData -> Header -> AssetClass = Commodities
                or dtccAdditionalFields -> primaryAssetClass = Commodity
        then ((if leg1 -> quantityFrequency exists
                    and [FrequencyPeriodEnum -> ONDE, FrequencyPeriodEnum -> ADHO] all <> leg1 -> quantityFrequency
            then leg1 -> quantityFrequencyMultiplier exists
            else leg1 -> quantityFrequencyMultiplier is absent)
                and (if leg2 -> quantityFrequency exists
                            and [FrequencyPeriodEnum -> ONDE, FrequencyPeriodEnum -> ADHO] all <> leg2 -> quantityFrequency
                    then leg2 -> quantityFrequencyMultiplier exists
                    else leg2 -> quantityFrequencyMultiplier is absent))
        else leg1 -> quantityFrequencyMultiplier is absent
            and leg2 -> quantityFrequencyMultiplier is absent

    condition DTCC_CSA_VR_0034_01: <"Quantity Frequency Multiplier - Leg 1">
        [docReference DTCC Trade dataElement "34" validationRule "Transaction"
      provision "Transaction CO - C if [Leg 1 - Quantity frequency] <> ONDE or ADHO and [Leg 1 - Quantity Frequency] is not blank, else {blank}."]
        if (nonReportable -> postUpiData -> Header -> AssetClass = Commodities
                    or dtccAdditionalFields -> primaryAssetClass = Commodity)
                and leg1 -> quantityFrequency exists
                and [FrequencyPeriodEnum -> ONDE, FrequencyPeriodEnum -> ADHO] all <> leg1 -> quantityFrequency
        then leg1 -> quantityFrequencyMultiplier exists
        else leg1 -> quantityFrequencyMultiplier is absent

    condition DTCC_CSA_VR_0034_02: <"Quantity Frequency Multiplier - Leg 2">
        [docReference DTCC Trade dataElement "34" validationRule "Transaction"
      provision "Transaction CO - C if [Leg 2 - Quantity frequency] <> ONDE or ADHO and [Leg 2 - Quantity Frequency] is not blank, else {blank}."]
        if (nonReportable -> postUpiData -> Header -> AssetClass = Commodities
                    or dtccAdditionalFields -> primaryAssetClass = Commodity)
                and leg2 -> quantityFrequency exists
                and [FrequencyPeriodEnum -> ONDE, FrequencyPeriodEnum -> ADHO] all <> leg2 -> quantityFrequency
        then leg2 -> quantityFrequencyMultiplier exists
        else leg2 -> quantityFrequencyMultiplier is absent

    condition CSA_VR_0035_01: <"Quantity Unit Of Measure">
        [regulatoryReference CSA Trade dataElement "35" validationRule "Transaction"
      provision "Transaction EQ/CO - M"]
        if [AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass
        then leg1 -> quantityUnitOfMeasure exists or leg2 -> quantityUnitOfMeasure exists

    condition CSA_VR_0036_01: <"Total Notional Quantity">
        [regulatoryReference CSA Trade dataElement "36" validationRule "Transaction"
      provision "Transaction EQ/CO - M"]
        if [AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass
        then leg1 -> totalNotionalQuantity exists or leg2 -> totalNotionalQuantity exists

    condition CSA_VR_0037_01: <"Notional quantity schedule - Unadjusted date on which the associated notional quantity becomes effective">
        [regulatoryReference CSA Trade dataElement "37" validationRule "Transaction"
      provision "C if [Notional quantity schedule - notional quantity in effect on associated effective date] is populated, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Notional quantity schedule - Unadjusted date on which the associated notional quantity becomes effective"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (common.quantity.NotionalQuantityScheduleEffectiveDate_Validation(
                    leg1 -> notionalQuantitySchedule
                )
                and common.quantity.NotionalQuantityScheduleEffectiveDate_Validation(
                        leg2 -> notionalQuantitySchedule
                    ))

    condition DTCC_CSA_VR_0037_01: <"Notional quantity schedule - Unadjusted date on which the associated notional quantity becomes effective Leg 1">
        [docReference DTCC Trade dataElement "37" validationRule "Transaction"
      provision "Required if [CDE - Notional quantity in effect on associated effective date of leg 1] is populated, else {blank}. If populated with one or more values, the number of values must equal the number of values populated in [CDE - Notional quantity in effect on associated effective date of leg 1]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Notional quantity schedule - Unadjusted date on which the associated notional quantity becomes effective Leg 1"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if nonReportable -> postUpiData -> Header -> AssetClass = Commodities
                    or dtccAdditionalFields -> primaryAssetClass = Commodity
            then common.quantity.NotionalScheduleEffectiveDateDTCC_Validation(
                        leg1 -> notionalQuantitySchedule -> value,
                        leg1 -> notionalQuantitySchedule -> effectiveDate
                    )
            else leg1 -> notionalQuantitySchedule -> effectiveDate is absent)

    condition CSA_VR_0038_01: <"Notional quantity schedule - Unadjusted end date of the notional quantity">
        [regulatoryReference CSA Trade dataElement "38" validationRule "Transaction"
      provision "Transaction CO - C if [Notional quantity schedule - notional quantity in effect on associated effective date] is populated, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Notional quantity schedule - Unadjusted end date of the notional quantity"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if nonReportable -> postUpiData -> Header -> AssetClass = Commodities
                    or dtccAdditionalFields -> primaryAssetClass = Commodity
            then (common.quantity.NotionalQuantityScheduleEndDate_Validation(
                        leg1 -> notionalQuantitySchedule
                    )
                    and common.quantity.NotionalQuantityScheduleEndDate_Validation(
                            leg2 -> notionalQuantitySchedule
                        ))
            else leg1 -> notionalQuantitySchedule -> endDate is absent
                and leg2 -> notionalQuantitySchedule -> endDate is absent)

    condition DTCC_CSA_VR_0038_01: <"Notional quantity schedule - Unadjusted end date of the notional quantity Leg 1">
        [docReference DTCC Trade dataElement "38" validationRule "Transaction"
      provision "Required if [CDE - Notional quantity in effect on associated effective date of leg 1] is populated, else {blank}. If populated with one or more values, the number of values must equal the number of values populated in [CDE - Notional quantity in effect on associated effective date of leg 1]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Notional quantity schedule - Unadjusted end date of the notional quantity Leg 1"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if nonReportable -> postUpiData -> Header -> AssetClass = Commodities
                    or dtccAdditionalFields -> primaryAssetClass = Commodity
            then (common.quantity.NotionalQuantityScheduleEndDate_Validation(
                        leg1 -> notionalQuantitySchedule
                    )
                    and common.quantity.NotionalScheduleEndDateCountDTCC_Validation(
                            leg1 -> notionalQuantitySchedule -> value,
                            leg1 -> notionalQuantitySchedule -> endDate
                        ))
            else leg1 -> notionalQuantitySchedule -> endDate is absent)

    condition CSA_VR_0039_01: <"Notional quantity schedule - Notional quantity in effect on associated effective date">
        [regulatoryReference CSA Trade dataElement "39" validationRule "Transaction"
      provision "Transaction CO - O"]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Notional quantity schedule - Notional quantity in effect on associated effective date"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if (nonReportable -> postUpiData -> Header -> AssetClass exists
                        and nonReportable -> postUpiData -> Header -> AssetClass <> Commodities)
                    or dtccAdditionalFields -> primaryAssetClass <> Commodity
            then leg1 -> notionalQuantitySchedule is absent
                    and leg2 -> notionalQuantitySchedule is absent)

    condition CSA_VR_0040_01a: <"Notional amount schedule - notional amount in effect on associated effective date">
        [regulatoryReference CSA Trade dataElement "40" validationRule "Transaction"
      provision "Transaction IR - C if UPI.[Notional schedule] <> Constant, else {blank}. The number of notional amount values must equal the number of start and end date intervals.
                Transaction CR/FX/CO/EQ - O"]
    [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250416" field "Notional amount schedule - notional amount in effect on associated effective date"
      provision "The group agreed to split the business rule into two conditions to reduce complexity in the logic and improve readability. Specifically, this condition implements all the logic excluding the constraint on the number of notional amount values."]
        if nonReportable -> postUpiData -> Header -> AssetClass = Rates
                or dtccAdditionalFields -> primaryAssetClass = InterestRate
        then (if (nonReportable -> postUpiData -> Attributes -> NotionalSchedule exists
                        and nonReportable -> postUpiData -> Attributes -> NotionalSchedule <> Constant)
                    or nonReportable -> notionalSchedule <> Constant
            then (leg1 -> notionalAmountSchedule -> value exists
                    or leg2 -> notionalAmountSchedule -> value exists)
            else (leg1 -> notionalAmountSchedule -> value is absent
                and leg2 -> notionalAmountSchedule -> value is absent))

    condition CSA_VR_0040_01b: <"Notional amount schedule - notional amount in effect on associated effective date">
        [regulatoryReference CSA Trade dataElement "40" validationRule "Transaction"
      provision "Transaction IR - C if UPI.[Notional schedule] <> Constant, else {blank}. The number of notional amount values must equal the number of start and end date intervals.
                Transaction CR/FX/CO/EQ - O"]
    [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250416" field "Notional amount schedule - notional amount in effect on associated effective date"
      provision "The group agreed to split the business rule into two conditions to reduce complexity in the logic and improve readability. Specifically, this condition implements the constraint on the number of notional amount values."]
        common.quantity.NotionalAmountScheduleCount_Validation(
                leg1 -> notionalAmountSchedule
            )
            and common.quantity.NotionalAmountScheduleCount_Validation(
                    leg2 -> notionalAmountSchedule
                )

    condition CSA_VR_0041_01: <"Notional amount schedule - unadjusted effective date of the notional amount">
        [regulatoryReference CSA Trade dataElement "41" validationRule "Transaction"
      provision "C if [Notional amount schedule - notional amount in effect on associated effective date] is populated, else {blank}. The number of date values must equal the number of notional amount values."]
        common.quantity.NotionalAmountScheduleEffectiveDate_Validation(
                leg1 -> notionalAmountSchedule
            )
            and common.quantity.NotionalAmountScheduleEffectiveDate_Validation(
                    leg2 -> notionalAmountSchedule
                )

    condition DTCC_CSA_VR_0041_01: <"Notional amount schedule - unadjusted effective date of the notional amount Leg 1">
        [docReference DTCC Trade dataElement "41" validationRule "Transaction"
      provision "Required if [CDE - Notional amount in effect on associated effective date-Leg 1] is populated, else {blank} . If populated with multiple values, the number of values must equal the number of values populated in [CDE - Notional amount in effect on associated effective date-Leg 1]."]
        common.quantity.NotionalScheduleEffectiveDateDTCC_Validation(
                leg1 -> notionalAmountSchedule -> value,
                leg1 -> notionalAmountSchedule -> effectiveDate
            )

    condition DTCC_CSA_VR_0041_02: <"Notional amount schedule - unadjusted effective date of the notional amount Leg 2">
        [docReference DTCC Trade dataElement "41" validationRule "Transaction"
      provision "Required if [CDE - Notional amount in effect on associated effective date-Leg 2] is populated, else {blank} . If populated with multiple values, the number of values must equal the number of values populated in [CDE - Notional amount in effect on associated effective date-Leg 2]."]
        common.quantity.NotionalScheduleEffectiveDateDTCC_Validation(
                leg2 -> notionalAmountSchedule -> value,
                leg2 -> notionalAmountSchedule -> effectiveDate
            )

    condition CSA_VR_0042_01: <"Notional amount schedule - unadjusted end date of the notional amount">
        [regulatoryReference CSA Trade dataElement "42" validationRule "Transaction"
      provision "C if [Notional amount schedule - notional amount in effect on associated effective date] is populated, else {blank}. The number of date values must equal the number of notional amount values."]
        common.quantity.NotionalScheduleEndDate_Validation(
                leg1 -> notionalAmountSchedule -> value,
                leg1 -> notionalAmountSchedule -> endDate
            )
            and common.quantity.NotionalScheduleEndDate_Validation(
                    leg2 -> notionalAmountSchedule -> value,
                    leg2 -> notionalAmountSchedule -> endDate
                )

    condition DTCC_CSA_VR_0042_01: <"Notional amount schedule - unadjusted end date of the notional amount Leg 1">
        [docReference DTCC Trade dataElement "42" validationRule "Transaction"
      provision "If populated with one or more values, the number of values must equal the number of values populated in [CDE - Notional amount in effect on associated effective date-Leg 1]."]
        common.quantity.NotionalScheduleEndDateCountDTCC_Validation(
                leg1 -> notionalAmountSchedule -> value,
                leg1 -> notionalAmountSchedule -> endDate
            )

    condition DTCC_CSA_VR_0042_02: <"Notional amount schedule - unadjusted end date of the notional amount Leg 2">
        [docReference DTCC Trade dataElement "42" validationRule "Transaction"
      provision "If populated with one or more values, the number of values must equal the number of values populated in [CDE - Notional amount in effect on associated effective date-Leg 2] "]
        common.quantity.NotionalScheduleEndDateCountDTCC_Validation(
                leg2 -> notionalAmountSchedule -> value,
                leg2 -> notionalAmountSchedule -> endDate
            )

    condition CSA_VR_0043_01: <"Exchange Rate">
        [regulatoryReference CSA Trade dataElement "43" validationRule "Transaction"
      provision "Transaction FX - M"]
        if nonReportable -> postUpiData -> Header -> AssetClass = Foreign_Exchange
                or dtccAdditionalFields -> primaryAssetClass = ForeignExchange
        then exchangeRate exists
        else exchangeRate is absent

    condition CSA_VR_0044_01: <"Exchange Rate Basis">
        [regulatoryReference CSA Trade dataElement "44" validationRule "Transaction"
      provision "Transaction FX - M"]
        if nonReportable -> postUpiData -> Header -> AssetClass = Foreign_Exchange
                or dtccAdditionalFields -> primaryAssetClass = ForeignExchange
        then exchangeRateBasis exists
        else exchangeRateBasis is absent

    condition CSA_VR_0045_01: <"Fixed Rate">
        [regulatoryReference CSA Trade dataElement "45" validationRule "Transaction"
      provision "Transaction CR - C if [Spread] is not populated and [Other payment type] <> UFRO, and UPI.[Instrument type] <> Option, else {blank}.
                Transaction IR - C if [Spread] is not populated and UPI.[Instrument type] <> Option, else {blank}.
                Transaction CO - C if [Price] or [Spread] is not populated and UPI.[Instrument type] <> Option, else {blank}."]
        // Credit
        if (nonReportable -> postUpiData -> Header -> AssetClass = Credit
                    or dtccAdditionalFields -> primaryAssetClass = Credit)
                and otherPayment -> paymentType any <> UFRO
                and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                        and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                    or nonReportable -> instrumentType <> Option)
        then ((if leg1 -> spread is absent and leg1 exists
            then leg1 -> fixedRate exists
            else leg1 -> fixedRate is absent)
                and (if leg2 -> spread is absent and leg2 exists
                    then leg2 -> fixedRate exists
                    else leg2 -> fixedRate is absent))
        // Rates
        else if (nonReportable -> postUpiData -> Header -> AssetClass = Rates
                    or dtccAdditionalFields -> primaryAssetClass = InterestRate)
                and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                        and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                    or nonReportable -> instrumentType <> Option)
        then ((if leg1 -> spread is absent and leg1 exists
            then leg1 -> fixedRate exists
            else leg1 -> fixedRate is absent)
                and (if leg2 -> spread is absent and leg2 exists
                    then leg2 -> fixedRate exists
                    else leg2 -> fixedRate is absent))
        // Commodity
        else if (nonReportable -> postUpiData -> Header -> AssetClass = Commodities
                    or dtccAdditionalFields -> primaryAssetClass = Commodity)
                and price is absent
                and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                        and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                    or nonReportable -> instrumentType <> Option)
        then ((if leg1 -> spread is absent and leg1 exists
            then leg1 -> fixedRate exists
            else leg1 -> fixedRate is absent)
                and (if leg2 -> spread is absent and leg2 exists
                    then leg2 -> fixedRate exists
                    else leg2 -> fixedRate is absent))

    condition DTCC_CSA_VR_0045_01: <"Fixed Rate - Leg 1">
        [docReference DTCC Trade dataElement "45" validationRule "Transaction"
      provision "Transaction CR - C if [Leg 1 - Spread] is not populated and [Other payment type] <> UFRO and UPI.[Instrument type] <> Option, else {blank}.
                Transaction IR - C if [Leg 1 - Spread] is not populated and UPI.[Instrument type] <> Option, else {blank}."]
        // Credit
        if nonReportable -> postUpiData -> Header -> AssetClass = Credit
                or dtccAdditionalFields -> primaryAssetClass = Credit
        then (if leg1 -> spread is absent
                    and leg1 exists
                    and otherPayment -> paymentType any <> UFRO
                    and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                            and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                        or nonReportable -> instrumentType <> Option)
            then leg1 -> fixedRate exists
            else leg1 -> fixedRate is absent)
        // Rates
        else if nonReportable -> postUpiData -> Header -> AssetClass = Rates
                or dtccAdditionalFields -> primaryAssetClass = InterestRate
        then (if leg1 -> spread is absent
                    and leg1 exists
                    and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                            and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                        or nonReportable -> instrumentType <> Option)
            then leg1 -> fixedRate exists
            else leg1 -> fixedRate is absent)

    condition CSA_VR_0046_01: <"Price">
        [regulatoryReference CSA Trade dataElement "46" validationRule "Transaction"
      provision "Transaction EQ - C if [Spread] is not populated, and UPI.[Instrument type] <> Option, else {blank}.
                Transaction CO - C if ([Fixed rate] or [Spread] is not populated), and UPI.[Instrument type] <> Option, else {blank}."]
        // Equity
        if (nonReportable -> postUpiData -> Header -> AssetClass = Equity
                or dtccAdditionalFields -> primaryAssetClass = Equity)
        then (if (leg1 -> spread is absent and leg2 -> spread is absent)
                    and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                            and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                        or nonReportable -> instrumentType <> Option)
            then price exists
            else price is absent)
        // Commodity
        else if (nonReportable -> postUpiData -> Header -> AssetClass = Commodities
                or dtccAdditionalFields -> primaryAssetClass = Commodity)
        then (if ((leg1 -> spread is absent and leg2 -> spread is absent)
                        or (leg1 -> fixedRate is absent and leg2 -> fixedRate is absent))
                    and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                            and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                        or nonReportable -> instrumentType <> Option)
            then price exists
            else price is absent)

    condition CSA_VR_0047_01: <"Price Currency">
        [regulatoryReference CSA Trade dataElement "47" validationRule "Transaction"
      provision "Transaction EQ/CO - C if [Price notation] = 1, else {blank}."]
        if ([AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                    or [AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass)
                and priceNotation = Monetary
        then priceCurrency exists
        else priceCurrency is absent

    condition CSA_VR_0048_01: <"Price Notation">
        [regulatoryReference CSA Trade dataElement "48" validationRule "Transaction"
      provision "Transaction EQ/CO - C if [Price] is populated, else {blank}."]
        if ([AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                    or [AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass)
                and price exists
        then priceNotation exists
        else priceNotation is absent

    condition CSA_VR_0049_01: <"Price Unit Of Measure">
        [regulatoryReference CSA Trade dataElement "49" validationRule "Transaction"
      provision "Transaction EQ/CO - C if [Price] is populated, else {blank}."]
        if ([AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                    or [AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass)
                and price exists
        then priceUnitOfMeasure exists
        else priceUnitOfMeasure is absent

    condition CSA_VR_0050_01: <"Price schedule - unadjusted effective date of the price">
        [regulatoryReference CSA Trade dataElement "50" validationRule "Transaction"
      provision "Transaction EQ/CO - C if [Price schedule - price] is populated, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Price schedule - unadjusted effective date of the price"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if ([AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                        or [AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass)
                    and (priceSchedule -> price exists)
            then priceSchedule -> effectiveDate exists
            else priceSchedule -> effectiveDate is absent)

    condition DTCC_CSA_VR_0050_01: <"Price schedule - unadjusted effective date of the price">
        [docReference DTCC Trade dataElement "50" validationRule "Transaction"
      provision "If populated with one or more values, the number of values must equal the number of values populated in [CDE - price]. Multiple dates must be in date order (earliest to latest)."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Price schedule - unadjusted effective date of the price"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if ([AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                    or [AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass)
            then if priceSchedule -> effectiveDate count >= 1
                then priceSchedule -> effectiveDate count = priceSchedule -> price count)

    condition CSA_VR_0051_01: <"Price schedule - unadjusted end date of the price">
        [regulatoryReference CSA Trade dataElement "51" validationRule "Transaction"
      provision "Transaction EQ/CO - C if [Price schedule - price] is populated, else {blank}. If populated with one or more values, the number of values must equal the number of values populated in [Price schedule - price]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Price schedule - unadjusted end date of the price"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if ([AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                        or [AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass)
                    and (priceSchedule -> price exists)
            then (priceSchedule -> endDate exists
                    and if priceSchedule -> endDate count >= 1
                        then (priceSchedule -> endDate count = priceSchedule -> price count))
            else priceSchedule -> endDate is absent)

    condition DTCC_CSA_VR_0051_01: <"Price schedule - unadjusted end date of the price">
        [docReference DTCC Trade dataElement "51" validationRule "Transaction"
      provision "If populated with one or more values, the number of values must equal the number of values populated in [Price schedule - price]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Price schedule - unadjusted end date of the price"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if ([AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                    or [AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass)
            then if priceSchedule -> endDate count >= 1
                then (priceSchedule -> endDate count = priceSchedule -> price count))

    condition CSA_VR_0052_01: <"Price schedule - price">
        [regulatoryReference CSA Trade dataElement "52" validationRule "Transaction"
      provision "Transaction EQ - C if [Price] or [Spread] is not populated, and UPI.[Instrument type] <> Option, else {blank}
                Transaction CO - C if ([Price], [Fixed rate], or [Spread] is not populated), else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Price schedule - price"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then ( // Equity
            if (nonReportable -> postUpiData -> Header -> AssetClass = Equity
                    or dtccAdditionalFields -> primaryAssetClass = Equity)
            then (if ((leg1 -> spread is absent and leg2 -> spread is absent)
                            or price is absent)
                        and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                                and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                            or nonReportable -> instrumentType <> Option)
                then priceSchedule -> price exists
                else priceSchedule -> price is absent)
            // Commodity
            else if (nonReportable -> postUpiData -> Header -> AssetClass = Commodities
                        or dtccAdditionalFields -> primaryAssetClass = Commodity)
                    and ((leg1 -> spread is absent and leg2 -> spread is absent)
                        or (leg1 -> fixedRate is absent and leg2 -> fixedRate is absent)
                        or price is absent)
            then priceSchedule -> price exists
            else priceSchedule -> price is absent)

    condition CSA_VR_0053_01: <"Spread">
        [regulatoryReference CSA Trade dataElement "53" validationRule "Transaction"
      provision "Transaction CR - C if [Fixed rate] is not populated and [Other payment type] <> Upfront payment UFRO, and UPI.[Instrument type] <> Option, else {blank}.
                Transaction IR - C if [Fixed rate] is not populated, and UPI.[Instrument type] <> Option, else {blank}.
                Transaction EQ - C if [Price] is not populated, and UPI.[Instrument type] <> Option, else {blank}.
                Transaction CO - C if [Price] or [Fixed rate] is not populated, and UPI.[Instrument type] <> Option, else {blank}."]
        // Credit
        if nonReportable -> postUpiData -> Header -> AssetClass = Credit
                or dtccAdditionalFields -> primaryAssetClass = Credit
        then (if leg1 -> fixedRate is absent
                    and leg1 exists
                    and otherPayment -> paymentType any <> UFRO
                    and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                            and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                        or nonReportable -> instrumentType <> Option)
            then leg1 -> spread exists
            else leg1 -> spread is absent)
                and (if leg2 -> fixedRate is absent
                            and leg2 exists
                            and otherPayment -> paymentType any <> UFRO
                            and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                                    and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                                or nonReportable -> instrumentType <> Option)
                    then leg2 -> spread exists
                    else leg2 -> spread is absent)
        // Rates
        else if nonReportable -> postUpiData -> Header -> AssetClass = Rates
                or dtccAdditionalFields -> primaryAssetClass = InterestRate
        then (if leg1 -> fixedRate is absent
                    and leg1 exists
                    and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                            and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                        or nonReportable -> instrumentType <> Option)
            then leg1 -> spread exists
            else leg1 -> spread is absent)
                and (if leg2 -> fixedRate is absent
                            and leg2 exists
                            and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                                    and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                                or nonReportable -> instrumentType <> Option)
                    then leg2 -> spread exists
                    else leg2 -> spread is absent)
        // Equity
        else if nonReportable -> postUpiData -> Header -> AssetClass = Equity
                or dtccAdditionalFields -> primaryAssetClass = Equity
                    and price is absent
                    and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                            and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                        or nonReportable -> instrumentType <> Option)
        then leg1 -> spread exists or leg2 -> spread exists
        // Commodity
        else if nonReportable -> postUpiData -> Header -> AssetClass = Commodities
                or dtccAdditionalFields -> primaryAssetClass = Commodity
                    and price is absent
                    and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                            and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                        or nonReportable -> instrumentType <> Option)
        then ((if leg1 -> fixedRate is absent and leg1 exists
            then leg1 -> spread exists
            else leg1 -> spread is absent)
                and (if leg2 -> fixedRate is absent and leg2 exists
                    then leg2 -> spread exists
                    else leg2 -> spread is absent))

    condition DTCC_CSA_VR_0053_01: <"Spread-Leg 1">
        [docReference DTCC Trade dataElement "53" validationRule "Transaction"
      provision "Transaction CR - Required if [Leg 1 - Fixed Rate Initial] is not populated and [CDE - Other payment type] <> UFRO and UPI.[Instrument type] <> Option, else {blank}.
                Transaction IR - Required if [Leg 1 - Fixed Rate Initial] is not populated, and UPI.[Instrument type] <> Option and [Leg 2 - Spread Amount] is not populated, else {blank}.
                Transaction EQ - Required if [Price 1 - Price] is not populated, and UPI.[Instrument type] <> Option, else {blank}."]
        // Credit
        if (nonReportable -> postUpiData -> Header -> AssetClass = Credit
                or dtccAdditionalFields -> primaryAssetClass = Credit)
        then (if leg1 -> fixedRate is absent
                    and leg1 exists
                    and otherPayment -> paymentType any <> UFRO
                    and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                            and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                        or nonReportable -> instrumentType <> Option)
            then leg1 -> spread exists
            else leg1 -> spread is absent)
        // Rates
        else if (nonReportable -> postUpiData -> Header -> AssetClass = Rates
                or dtccAdditionalFields -> primaryAssetClass = InterestRate)
        then (if leg1 -> fixedRate is absent
                    and leg1 exists
                    and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                            and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                        or nonReportable -> instrumentType <> Option)
                    and leg2 -> spread is absent
            then leg1 -> spread exists
            else leg1 -> spread is absent)
        // Equity
        else if (nonReportable -> postUpiData -> Header -> AssetClass = Equity
                or dtccAdditionalFields -> primaryAssetClass = Equity)
        then (if price is absent
                    and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                            and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                        or nonReportable -> instrumentType <> Option)
            then leg1 -> spread exists
            else leg1 -> spread is absent)

    condition DTCC_CSA_VR_0053_02: <"Spread-Leg 2">
        [docReference DTCC Trade dataElement "53" validationRule "Transaction"
      provision "Transaction IR - Required if [Leg 1 - Fixed Rate Initial] is not populated and UPI.[Instrument type] <> Option, and [Leg 1 - Spread Amount] is not populated, else {blank}."]
        if (nonReportable -> postUpiData -> Header -> AssetClass = Rates
                or dtccAdditionalFields -> primaryAssetClass = InterestRate)
        then (if leg1 -> fixedRate is absent
                    and ((nonReportable -> postUpiData -> Header -> InstrumentType exists
                            and nonReportable -> postUpiData -> Header -> InstrumentType <> Option)
                        or nonReportable -> instrumentType <> Option)
                    and leg1 -> spread is absent
                    and leg1 exists
            then leg2 -> spread exists
            else leg2 -> spread is absent)

    condition CSA_VR_0054_01: <"Spread Currency">
        [regulatoryReference CSA Trade dataElement "54" validationRule "Transaction"
      provision "Transaction CR/IR/EQ/CO - C if [Spread notation] = 1, else {blank}."]
        (if ([AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                    or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass)
                and leg1 -> spreadNotation = Monetary
        then leg1 -> spreadCurrency exists
        else leg1 -> spreadCurrency is absent)
            and (if ([AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                            or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass)
                        and leg2 -> spreadNotation = Monetary
                then leg2 -> spreadCurrency exists
                else leg2 -> spreadCurrency is absent)

    condition DTCC_CSA_VR_0054_01: <"Spread Currency - Leg 1">
        [docReference DTCC Trade dataElement "54" validationRule "Transaction"
      provision "Transaction CR/IR/EQ/CO - Required if [CDE - Spread notation-Leg 1] = 1, else {blank}."]
        if ([AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                    or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass)
                and leg1 -> spreadNotation = Monetary
        then leg1 -> spreadCurrency exists
        else leg1 -> spreadCurrency is absent

    condition DTCC_CSA_VR_0054_02: <"Spread Currency - Leg 2">
        [docReference DTCC Trade dataElement "54" validationRule "Transaction"
      provision "Transaction CR/IR/EQ/CO - Required if [CDE - Spread notation-Leg 2] = 1, else {blank}."]
        if ([AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                    or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass)
                and leg2 -> spreadNotation = Monetary
        then leg2 -> spreadCurrency exists
        else leg2 -> spreadCurrency is absent

    condition CSA_VR_0055_01: <"Spread Notation">
        [regulatoryReference CSA Trade dataElement "55" validationRule "Transaction"
      provision "Transaction CR/IR/EQ/CO - C if [Spread] is populated, else {blank}."]
        (if ([AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                    or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass)
                and leg1 -> spread exists
        then leg1 -> spreadNotation exists
        else leg1 -> spreadNotation is absent)
            and (if ([AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                            or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass)
                        and leg2 -> spread exists
                then leg2 -> spreadNotation exists
                else leg2 -> spreadNotation is absent)

    condition DTCC_CSA_VR_0055_01: <"Spread Notation - Leg 1">
        [docReference DTCC Trade dataElement "55" validationRule "Transaction"
      provision "Transaction CR/IR/EQ/CO - Required if [Leg 1 - Spread Amount] is populated, else {blank}."]
        if ([AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                    or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass)
                and leg1 -> spread exists
        then leg1 -> spreadNotation exists
        else leg1 -> spreadNotation is absent

    condition DTCC_CSA_VR_0055_02: <"Spread Notation - Leg 2">
        [docReference DTCC Trade dataElement "55" validationRule "Transaction"
      provision "Transaction CR/IR/EQ/CO - Required if [Leg 2 - Spread Amount] is populated, else {blank}."]
        if ([AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                    or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass)
                and leg2 -> spread exists
        then leg2 -> spreadNotation exists
        else leg2 -> spreadNotation is absent

    condition CSA_VR_0056_01: <"Strike Price">
        [regulatoryReference CSA Trade dataElement "56" validationRule "Transaction"
      provision "C if UPI.[Instrument type] = Option, else {blank}."]
        if nonReportable -> postUpiData -> Header -> InstrumentType = Option
                or nonReportable -> instrumentType = Option
        then (strikePrice exists)
        else (strikePrice is absent)

    condition CSA_VR_0057_01: <"Strike Price Currency">
        [regulatoryReference CSA Trade dataElement "57" validationRule "Transaction"
      provision "C if [Strike price notation] = 1, else {blank}."]
        if strikePriceNotation = Monetary
        then strikePriceCurrency exists
        else strikePriceCurrency is absent

    condition CSA_VR_0058_01: <"Strike Price Notation">
        [regulatoryReference CSA Trade dataElement "58" validationRule "Transaction"
      provision "C if [Strike price] is populated, else {blank}."]
        if (strikePrice exists)
        then strikePriceNotation exists
        else strikePriceNotation is absent

    condition CSA_VR_0065_01: <"Strike price schedule - Unadjusted effective date of the strike price">
        [regulatoryReference CSA Trade dataElement "65" validationRule "Transaction"
      provision "C if [Strike price schedule - strike price] is populated, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Strike price schedule - Unadjusted effective date of the strike price"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if strikePriceSchedule -> price exists
            then strikePriceSchedule -> effectiveDate exists
            else strikePriceSchedule -> effectiveDate is absent)

    condition DTCC_CSA_VR_0065_01: <"Strike price schedule - Unadjusted effective date of the strike price">
        [docReference DTCC Trade dataElement "65" validationRule "Transaction"
      provision "If populated with one or more values, the number of values must equal the number of values populated in [CDE - Strike price]. Multiple dates must be in date order (earliest to latest)."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Strike price schedule - Unadjusted effective date of the strike price"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if strikePriceSchedule -> effectiveDate count >= 1
            then strikePriceSchedule -> effectiveDate count
                    = strikePriceSchedule -> price count)

    condition CSA_VR_0066_01: <"Strike price schedule - Unadjusted end date of the strike price">
        [regulatoryReference CSA Trade dataElement "66" validationRule "Transaction"
      provision "C if [Strike price schedule - strike price] is populated, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Strike price schedule - Unadjusted end date of the strike price"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if strikePriceSchedule -> price exists
            then strikePriceSchedule -> endDate exists
            else strikePriceSchedule -> endDate is absent)

    condition CSA_VR_0067_01: <"Strike price schedule - strike price">
        [regulatoryReference CSA Trade dataElement "67" validationRule "Transaction"
      provision "Transaction CR/EQ/FX/IR - C if [Strike price] is not populated, and UPI.[Instrument type] = Option, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Strike price schedule - strike price"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if ([AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Foreign_Exchange, AnnaDsbAssetClassEnum -> Rates] any = nonReportable -> postUpiData -> Header -> AssetClass
                        or [AssetClassEnum -> Credit, AssetClassEnum -> Equity, AssetClassEnum -> ForeignExchange, AssetClassEnum -> InterestRate] any = dtccAdditionalFields -> primaryAssetClass)
                    and (strikePrice is absent)
                    and (nonReportable -> postUpiData -> Header -> InstrumentType = Option
                        or nonReportable -> instrumentType = Option)
            then strikePriceSchedule -> price exists
            else strikePriceSchedule -> price is absent)

    condition CSA_VR_0068_01: <"Non-Standardized Term Indicator">
        [regulatoryReference CSA Trade dataElement "68" validationRule "Transaction"
      provision "C if [Cleared] = N; NR if [Cleared] = Y or I."]
        if cleared = N
        then nonStandardizedTermIndicator exists
        else if cleared = I or cleared = Y
        then nonStandardizedTermIndicator is absent

    condition CSA_VR_0069_01: <"Day Count Convention">
        [regulatoryReference CSA Trade dataElement "69" validationRule "Transaction"
      provision "Transaction CR/IR/FX - O
                Transaction CO/EQ - C if [Payment frequency period] is populated, else {blank}."]
        if [AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass
        then ((if leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriod exists
            then leg1 -> periodicPayment -> fixedRateDayCountConvention exists
            else if leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriod exists
            then leg1 -> periodicPayment -> floatingRateDayCountConvention exists
            else leg1 -> periodicPayment -> fixedRateDayCountConvention is absent
                and leg1 -> periodicPayment -> floatingRateDayCountConvention is absent)
                and (if leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriod exists
                    then leg2 -> periodicPayment -> fixedRateDayCountConvention exists
                    else if leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriod exists
                    then leg2 -> periodicPayment -> floatingRateDayCountConvention exists
                    else leg2 -> periodicPayment -> fixedRateDayCountConvention is absent
                        and leg2 -> periodicPayment -> floatingRateDayCountConvention is absent))

    condition DTCC_CSA_VR_0069_01: <"Fixed Rate Day Count Convention - Leg 1">
        [docReference DTCC Trade dataElement "69" validationRule "Transaction"
      provision "Required if [CDE - Fixed rate payment frequency period-Leg 1] is populated, else {blank}."]
        if leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriod exists
        then leg1 -> periodicPayment -> fixedRateDayCountConvention exists
        else leg1 -> periodicPayment -> fixedRateDayCountConvention is absent

    condition DTCC_CSA_VR_0069_02: <"Floating Rate Day Count Convention - Leg 1">
        [docReference DTCC Trade dataElement "69" validationRule "Transaction"
      provision "Required if [CDE - Floating rate payment frequency period-Leg 1] is populated, else {blank}."]
        if leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriod exists
        then leg1 -> periodicPayment -> floatingRateDayCountConvention exists
        else leg1 -> periodicPayment -> floatingRateDayCountConvention is absent

    condition CSA_VR_0070_01: <"Floating Rate Reset Frequency Period">
        [regulatoryReference CSA Trade dataElement "70" validationRule "Transaction"
      provision "Transaction IR - C if UPI.[Instrument type] = Swap and UPI.[Underlier type] <> Fixed - Fixed, else {blank}. When populated with EXPI, [Floating rate reset frequency period multiplier] must be 1."]
        (if (nonReportable -> postUpiData -> Header -> AssetClass = Rates
                or dtccAdditionalFields -> primaryAssetClass = InterestRate)
        then (if (nonReportable -> postUpiData -> Header -> InstrumentType = Swap
                        or nonReportable -> instrumentType = Swap)
                    and ((nonReportable -> postUpiData -> Derived -> UnderlyingAssetType exists
                            and nonReportable -> postUpiData -> Derived -> UnderlyingAssetType <> Fixed_Fixed)
                        or nonReportable -> underlyingAssetType <> "Fixed_Fixed")
            then leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod exists
                    or leg2 -> periodicPayment -> floatingRateResetFrequencyPeriod exists
            else leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod is absent
                and leg2 -> periodicPayment -> floatingRateResetFrequencyPeriod is absent))
            and ((if leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod = EXPI
            then leg1 -> periodicPayment -> floatingRateResetFrequencyMultiplier = 1)
                and (if leg2 -> periodicPayment -> floatingRateResetFrequencyPeriod = EXPI
                    then leg2 -> periodicPayment -> floatingRateResetFrequencyMultiplier = 1))

    condition DTCC_CSA_VR_0070_01: <"Floating Rate Reset Frequency Period - Leg 1">
        [docReference DTCC Trade dataElement "70" validationRule "Transaction"
      provision "Required if UPI.[Instrument type] = Swap and UPI.[Underlying Asset Type] <> (Fixed - Fixed or {blank}) and [Floating Rate Reset Frequency Period - Leg 2] is {blank}, else {blank}. When populated with EXPI', [Floating Rate Reset Frequency Period Multiplier - Leg 1] must be 1."]
        (if (nonReportable -> postUpiData -> Header -> AssetClass = Rates
                or dtccAdditionalFields -> primaryAssetClass = InterestRate)
        then (if (nonReportable -> postUpiData -> Header -> InstrumentType = Swap
                        or nonReportable -> instrumentType = Swap)
                    and ((nonReportable -> postUpiData -> Derived -> UnderlyingAssetType exists
                            and nonReportable -> postUpiData -> Derived -> UnderlyingAssetType <> Fixed_Fixed)
                        or nonReportable -> underlyingAssetType <> "Fixed_Fixed")
                    and leg2 -> periodicPayment -> floatingRateResetFrequencyPeriod is absent
            then leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod exists
            else leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod is absent))
            and (if leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod = EXPI
                then leg1 -> periodicPayment -> floatingRateResetFrequencyMultiplier = 1)

    condition DTCC_CSA_VR_0070_02: <"Floating Rate Reset Frequency Period - Leg 2">
        [docReference DTCC Trade dataElement "70" validationRule "Transaction"
      provision "Required if UPI.[Instrument type] = Swap and UPI.[Underlying Asset Type] <> (Fixed - Fixed or {blank}) and [Floating Rate Reset Frequency Period - Leg 1] is {blank}, else {blank}. When populated with EXPI', [Floating Rate Reset Frequency Period Multiplier - Leg 2] must be 1."]
        (if (nonReportable -> postUpiData -> Header -> AssetClass = Rates
                or dtccAdditionalFields -> primaryAssetClass = InterestRate)
        then (if (nonReportable -> postUpiData -> Header -> InstrumentType = Swap
                        or nonReportable -> instrumentType = Swap)
                    and ((nonReportable -> postUpiData -> Derived -> UnderlyingAssetType exists
                            and nonReportable -> postUpiData -> Derived -> UnderlyingAssetType <> Fixed_Fixed)
                        or nonReportable -> underlyingAssetType <> "Fixed_Fixed")
                    and leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod is absent
            then leg2 -> periodicPayment -> floatingRateResetFrequencyPeriod exists
            else leg2 -> periodicPayment -> floatingRateResetFrequencyPeriod is absent))
            and (if leg2 -> periodicPayment -> floatingRateResetFrequencyPeriod = EXPI
                then leg2 -> periodicPayment -> floatingRateResetFrequencyMultiplier = 1)

    condition CSA_VR_0071_01: <"Floating Rate Reset Frequency Period Multiplier - Leg 2">
        [regulatoryReference CSA Trade dataElement "71" validationRule "Transaction"
      provision "C if [Floating rate reset frequency period] <> ADHO and [Floating rate reset Frequency Period] is not blank, else {blank}."]
        (if leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod exists
                and leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod <> ADHO
        then leg1 -> periodicPayment -> floatingRateResetFrequencyMultiplier exists
        else leg1 -> periodicPayment -> floatingRateResetFrequencyMultiplier is absent)
            and (if leg2 -> periodicPayment -> floatingRateResetFrequencyPeriod exists
                        and leg2 -> periodicPayment -> floatingRateResetFrequencyPeriod <> ADHO
                then leg2 -> periodicPayment -> floatingRateResetFrequencyMultiplier exists
                else leg2 -> periodicPayment -> floatingRateResetFrequencyMultiplier is absent)

    condition DTCC_CSA_VR_0071_01: <"Floating Rate Reset Frequency Period Multiplier - Leg 1">
        [docReference DTCC Trade dataElement "71" validationRule "Transaction"
      provision "C if [Floating rate reset frequency period - Leg 1] <> ADHO and [Floating rate reset Frequency Period - Leg 1] is not blank, else {blank}."]
        if leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod exists
                and leg1 -> periodicPayment -> floatingRateResetFrequencyPeriod <> ADHO
        then leg1 -> periodicPayment -> floatingRateResetFrequencyMultiplier exists
        else leg1 -> periodicPayment -> floatingRateResetFrequencyMultiplier is absent

    condition DTCC_CSA_VR_0071_02: <"Floating Rate Reset Frequency Period Multiplier - Leg 2">
        [docReference DTCC Trade dataElement "71" validationRule "Transaction"
      provision "C if [Floating rate reset frequency period - Leg 2] <> ADHO and [Floating rate reset Frequency Period - Leg 2] is not blank, else {blank}."]
        if leg2 -> periodicPayment -> floatingRateResetFrequencyPeriod exists
                and leg2 -> periodicPayment -> floatingRateResetFrequencyPeriod <> ADHO
        then leg2 -> periodicPayment -> floatingRateResetFrequencyMultiplier exists
        else leg2 -> periodicPayment -> floatingRateResetFrequencyMultiplier is absent

    condition CSA_VR_0073_01: <"Central Counterparty Identifier">
        [regulatoryReference CSA Trade dataElement "73" validationRule "Transaction"
	  provision "C if [Cleared] = Y, When populated, the value shall match the value in [Counterparty 1 (reporting counterparty)];
        NR if [Cleared] = N
        O if [Cleared]=I"]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Central Counterparty Identifier"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if cleared = Y
            then centralCounterparty exists and centralCounterparty = counterparty1
            else if cleared = N
            then centralCounterparty is absent)

    condition CSA_VR_0074_01: <"Clearing Acount Origin">
        [regulatoryReference CSA Trade dataElement "74" validationRule "Transaction"
      provision "C if [Cleared] = Y; NR if [Cleared] = N or I."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Clearing Acount Origin"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if cleared = Y
            then clearingAccountOrigin exists
            else if cleared = I or cleared = N
            then clearingAccountOrigin is absent)

    condition CSA_VR_0075_01: <"Clearing Member Identifier">
        [regulatoryReference CSA Trade dataElement "75" validationRule "Transaction"
	  provision "C if [Cleared] = Y; NR if [Cleared] = N or I."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Clearing Member Identifier"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if cleared = Y
            then clearingMember exists
            else if cleared = N or cleared = I
            then clearingMember is absent)

    condition DTCC_CSA_VR_0075_01: <"Clearing Member Identifier">
        [docReference DTCC Trade dataElement "75" validationRule "Transaction"
	  provision "Required if [Trade Party 1 - Clearing Broker ID Type] is populated."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Clearing Member Identifier"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if dtccAdditionalFields -> tradeParty1ClearingBrokerIDType exists
            then clearingMember exists)

    condition CSA_VR_0076_01: <"Clearing Receipt Timestamp">
        [regulatoryReference CSA Trade dataElement "76" validationRule "Transaction"
      provision "C if ([Cleared] = Y or ([Cleared] = I and [Action type] = TERM)) and [Event type] = 'CLRG', else {blank}; NR if [Cleared] = N."]
        if (cleared = Y or (cleared = I and actionType = TERM)) and eventType = CLRG
        then clearingReceiptTimestamp exists
        else clearingReceiptTimestamp is absent

    condition DTCC_CSA_VR_0076_01: <"Clearing Receipt Timestamp">
        [docReference DTCC Trade dataElement "76" validationRule "Transaction"
      provision "Required if ([NoA - Action Type] = 'NEWT' and ([Event Type] = 'CLRG' or = 'CLAL')) OR ([NoA - Action Type] = 'TERM' and ([Event Type] = 'CLRG' or = 'CLAL'))."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Clearing Receipt Timestamp"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if (actionType = NEWT
                        and [EventTypeEnum -> CLRG, EventTypeEnum -> CLAL] any = eventType)
                    or (actionType = TERM
                        and [EventTypeEnum -> CLRG, EventTypeEnum -> CLAL] any = eventType)
            then clearingReceiptTimestamp exists)

    condition CSA_VR_0077_01: <"Clearing Exceptions And Exemptions Counterparty 1">
        [regulatoryReference CSA Trade dataElement "77" validationRule "Transaction"
      provision "O if [Cleared] = N; NR if [Cleared] = Y or I."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Clearing Exceptions And Exemptions Counterparty 1"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if cleared = Y or cleared = I
            then clearingExceptionsAndExemptionsCounterparty1 is absent)

    condition CSA_VR_0078_01: <"Clearing Exceptions And Exemptions Counterparty 2">
        [regulatoryReference CSA Trade dataElement "78" validationRule "Transaction"
      provision "O if [Cleared] = N; NR if [Cleared] = Y or I."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Clearing Exceptions And Exemptions Counterparty 1"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if cleared = Y or cleared = I
            then clearingExceptionsAndExemptionsCounterparty2 is absent)

    condition CSA_VR_0095_01: <"Event Timestamp">
        [regulatoryReference CSA Trade dataElement "95" validationRule "Transaction"
      provision "M, the value shall be equal to or later than the value in [Execution timestamp]."]
        eventTimestamp >= executionTimestamp

    condition CSA_VR_0097_01: <"Event Identifier">
        [regulatoryReference CSA Trade dataElement "97" validationRule "Transaction"
      provision "C if [Event type] = COMP or CREV, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Event Identifier"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if [EventTypeEnum -> COMP, EventTypeEnum -> CREV] any = eventType
            then eventIdentifier exists
            else eventIdentifier is absent)

    condition CSA_VR_0098_01: <"Action Type">
        [regulatoryReference CSA Trade dataElement "98" validationRule "Transaction"
      provision "M, for valid Action type and Event type, see table in Appendix 3.5."]
        // TH 24/01/25: same condition as Even type (see below) is applied
        True

    condition CSA_VR_0099_01: <"Event Type">
        [regulatoryReference CSA Trade dataElement "99" validationRule "Transaction"
      provision "C, for valid Action type and Event type, see table in Appendix 3.5."]
        if actionType = NEWT
        then [EventTypeEnum -> TRAD, EventTypeEnum -> NOVA, EventTypeEnum -> COMP, EventTypeEnum -> CLRG, EventTypeEnum -> EXER, EventTypeEnum -> ALOC, EventTypeEnum -> CLAL, EventTypeEnum -> PTNG, EventTypeEnum -> CORP, EventTypeEnum -> UPDT, EventTypeEnum -> INCP] any = eventType
        else if actionType = MODI
        then [EventTypeEnum -> TRAD, EventTypeEnum -> NOVA, EventTypeEnum -> COMP, EventTypeEnum -> ETRM, EventTypeEnum -> EXER, EventTypeEnum -> ALOC, EventTypeEnum -> CREV, EventTypeEnum -> CORP, EventTypeEnum -> UPDT, EventTypeEnum -> INCP] any = eventType
        else if actionType = TERM
        then [EventTypeEnum -> NOVA, EventTypeEnum -> COMP, EventTypeEnum -> ETRM, EventTypeEnum -> CLRG, EventTypeEnum -> EXER, EventTypeEnum -> ALOC, EventTypeEnum -> CLAL, EventTypeEnum -> CREV, EventTypeEnum -> CORP, EventTypeEnum -> INCP] any = eventType
        else if actionType = PRTO
        then eventType = EventTypeEnum -> PTNG
        else [ActionTypeEnum -> CORR, ActionTypeEnum -> EROR, ActionTypeEnum -> REVI, ActionTypeEnum -> VALU, ActionTypeEnum -> MARU, ActionTypeEnum -> POSC] any = actionType
            and eventType is absent

    condition CSA_VR_0100_01: <"Amendment Indicator">
        [regulatoryReference CSA Trade dataElement "100" validationRule "Transaction"
      provision "C if [Action type] = MODI, else {blank}."]
        if actionType = MODI
        then amendmentIndicator exists
        else amendmentIndicator is absent

    condition CSA_VR_0110_01: <"Package Identifier">
        [regulatoryReference CSA Trade dataElement "110" validationRule "Transaction"
      provision "C if [Package indicator] = True, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Package Identifier"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if packageIndicator = True
            then packageIdentifier exists
            else packageIdentifier is absent)

    condition CSA_VR_0111_01: <"Package Transaction Price">
        [regulatoryReference CSA Trade dataElement "111" validationRule "Transaction"
      provision "C if [Package indicator] = True and [Package transaction spread] is not populated, else {blank}."]
        if (packageIndicator = True and packageTransactionSpread is absent)
        then packageTransactionPrice exists
        else packageTransactionPrice is absent

    condition CSA_VR_0112_01: <"Package Transaction Price Currency">
        [regulatoryReference CSA Trade dataElement "112" validationRule "Transaction"
      provision "C if [Package transaction price notation] = 1, else {blank}."]
        if packageTransactionPriceNotation = Monetary
        then packageTransactionPriceCurrency exists
        else packageTransactionPriceCurrency is absent

    condition CSA_VR_0113_01: <"Package Transaction Spread">
        [regulatoryReference CSA Trade dataElement "113" validationRule "Transaction"
      provision "C if [Package indicator] = True and [Package transaction price] is not populated, else {blank}."]
        if packageIndicator = True and packageTransactionPrice is absent
        then packageTransactionSpread exists
        else packageTransactionSpread is absent

    condition CSA_VR_0114_01: <"Package Transaction Spread Currency">
        [regulatoryReference CSA Trade dataElement "114" validationRule "Transaction"
      provision "C if [Package transaction spread notation] = '1', else {blank}."]
        if packageTransactionSpreadNotation = Monetary
        then packageTransactionSpreadCurrency exists
        else packageTransactionSpreadCurrency is absent

    condition CSA_VR_0115_01: <"Package Transaction Spread Notation">
        [regulatoryReference CSA Trade dataElement "115" validationRule "Transaction"
      provision "C if [Package transaction spread] is populated, else {blank}."]
        if packageTransactionSpread exists
        then packageTransactionSpreadNotation exists
        else packageTransactionSpreadNotation is absent

    condition CSA_VR_0116_01: <"Package Transaction Price Notation">
        [regulatoryReference CSA Trade dataElement "116" validationRule "Transaction"
      provision "C if [Package transaction price] is populated, else {blank}."]
        if packageTransactionPrice exists
        then packageTransactionPriceNotation exists
        else packageTransactionPriceNotation is absent

    condition CSA_VR_0118_01: <"CDS Index Attachment Point">
        [regulatoryReference CSA Trade dataElement "118" validationRule "Transaction"
      provision "Transaction CR - C if UPI.[Underlying asset/contract type] = Index tranche, else {blank};
                When populated, the value shall be less than the value in [CDS index detachment point]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "CDS Index Attachment Point"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if (nonReportable -> postUpiData -> Header -> AssetClass = Credit
                        or dtccAdditionalFields -> primaryAssetClass = Credit)
                    and (nonReportable -> postUpiData -> Derived -> UnderlyingAssetType = Index_Tranche
                        or nonReportable -> underlyingAssetType = "Index_Tranche")
            then (cdSIndexAttachmentPoint exists and cdSIndexAttachmentPoint < cdSIndexDetachmentPoint)
            else cdSIndexAttachmentPoint is absent)

    condition CSA_VR_0119_01: <"CDS Index Detachment Point">
        [regulatoryReference CSA Trade dataElement "119" validationRule "Transaction"
      provision "Transaction CR - C if UPI.[Underlying asset/contract type] = Index tranche, else {blank};
                When populated, the value shall be greater than the value in [CDS index attachment point]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "CDS Index Detachment Point"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if (nonReportable -> postUpiData -> Header -> AssetClass = Credit
                        or dtccAdditionalFields -> primaryAssetClass = Credit)
                    and (nonReportable -> postUpiData -> Derived -> UnderlyingAssetType = Index_Tranche
                        or nonReportable -> underlyingAssetType = "Index_Tranche")
            then (cdSIndexDetachmentPoint exists and cdSIndexDetachmentPoint > cdSIndexAttachmentPoint)
            else cdSIndexDetachmentPoint is absent)

    condition CSA_VR_0120_01: <"Index Factor">
        [regulatoryReference CSA Trade dataElement "120" validationRule "Transaction"
      provision "Transaction CR - C if UPI.[Underlying asset/contract type] = Index or Index tranche, else {blank}."]
        if (nonReportable -> postUpiData -> Header -> AssetClass = Credit
                    or dtccAdditionalFields -> primaryAssetClass = Credit)
                and ([AnnaDsbUnderlyingAssetTypeEnum -> Index, AnnaDsbUnderlyingAssetTypeEnum -> Index_Tranche] any = nonReportable -> postUpiData -> Derived -> UnderlyingAssetType
                    or ["Index", "Index_Tranche"] any = nonReportable -> underlyingAssetType)
        then indexFactor exists
        else indexFactor is absent

    condition CSA_VR_0121_01: <"Crypto Asset Underlying Indicator">
        [regulatoryReference CSA Trade dataElement "121" validationRule "Transaction"
      provision "Transaction CO - O"]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Crypto Asset Underlying Indicator"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if (nonReportable -> postUpiData -> Header -> AssetClass exists
                        and nonReportable -> postUpiData -> Header -> AssetClass <> Commodities)
                    or dtccAdditionalFields -> primaryAssetClass <> Commodity
            then leg1 -> cryptoAssetUnderlyingIndicator is absent
                    and leg2 -> cryptoAssetUnderlyingIndicator is absent)

    condition CSA_VR_0122_01: <"Custom Basket Code">
        [regulatoryReference CSA Trade dataElement "122" validationRule "Transaction"
      provision "C if [Custom basket indicator] = True, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Custom Basket Code"
      provision "Validation rule eliminated from PPD report since this field is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if customBasketIndicator = True
            then customBasketCode exists
            else customBasketCode is absent)

    condition CSA_VR_0124_01: <"Basket Constituent Identifier">
        [regulatoryReference CSA Trade dataElement "124" validationRule "Transaction"
      provision "C if [Custom basket indicator] = True, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Basket Constituent Identifier"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if customBasketIndicator = True
            then basketConstituents -> identifier exists
            else basketConstituents -> identifier is absent)

    condition CSA_VR_0125_01: <"Basket Constituent Identifier Source">
        [regulatoryReference CSA Trade dataElement "125" validationRule "Transaction"
      provision "C if [Basket constituent identifier] is populated, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Basket Constituent Identifier Source"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if basketConstituents -> identifier exists
            then basketConstituents -> source exists
            else basketConstituents -> source is absent)

    condition DTCC_CSA_VR_0125_01: <"Basket Constituent Identifier Source">
        [docReference DTCC Trade dataElement "125" validationRule "Transaction"
      provision "If populated, the number of values must equal the number of values populated in [CDE - Basket constituents identifier]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Basket Constituent Identifier Sourcex"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if basketConstituents -> source exists
            then basketConstituents -> source count = basketConstituents -> identifier count)

    condition CSA_VR_0126_01: <"Basket Constituent Number Of Units">
        [regulatoryReference CSA Trade dataElement "126" validationRule "Transaction"
      provision "C if [Basket constituent identifier] is populated, else {blank}. The number of constituent number of units values must equal the number of constituent identifier, unit of measure, and identifier source values."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Basket Constituent Number Of Units"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if basketConstituents -> identifier exists
            then basketConstituents -> numberOfUnits count
                        = basketConstituents -> unitOfMeasure count
                    and basketConstituents -> numberOfUnits count
                        = basketConstituents -> identifier count
                    and basketConstituents -> numberOfUnits count
                        = basketConstituents -> source count
            else basketConstituents -> numberOfUnits is absent)

    condition DTCC_CSA_VR_0126_01: <"Basket Constituent Number Of Units">
        [docReference DTCC Trade dataElement "126" validationRule "Transaction"
      provision "If populated, the number of values must equal the number of values populated in [CDE - Basket constituents identifier]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Basket Constituent Number Of Units"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if basketConstituents -> numberOfUnits exists
            then basketConstituents -> numberOfUnits count
                    = basketConstituents -> identifier count)

    condition CSA_VR_0127_01: <"Basket Constituent Unit Of Measure">
        [regulatoryReference CSA Trade dataElement "127" validationRule "Transaction"
      provision "C if [Basket constituent identifier] is populated, else {blank}. The number of constituent unit of measure values must equal the number of constituent identifier, number of units, and identifier source values."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Basket Constituent Unit Of Measure"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if basketConstituents -> identifier exists
            then basketConstituents -> unitOfMeasure count
                        = basketConstituents -> numberOfUnits count
                    and basketConstituents -> unitOfMeasure count
                        = basketConstituents -> identifier count
                    and basketConstituents -> unitOfMeasure count
                        = basketConstituents -> source count
            else basketConstituents -> unitOfMeasure is absent)

    condition DTCC_CSA_VR_0127_01: <"Basket Constituent Unit Of Measure">
        [docReference DTCC Trade dataElement "127" validationRule "Transaction"
      provision "If populated, the number of values must equal the number of values populated in [CDE - Basket constituents identifier]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Basket Constituent Unit Of Measure"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if basketConstituents -> unitOfMeasure exists
            then basketConstituents -> unitOfMeasure count
                    = basketConstituents -> identifier count)

    condition CSA_VR_0128_01: <"Underlier ID (Other)">
        [regulatoryReference CSA Trade dataElement "128" validationRule "Transaction"
      provision "C if UPI.[Underlier ID] = 'Other', else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Underlier ID (Other)"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if nonReportable -> postUpiData -> Attributes -> UnderlierID = "Other"
                    or dtccAdditionalFields -> underlyingAsset -> underlyingAssetIDType all <> "ISIN"
            then leg1 -> underlierIDOther exists or leg2 -> underlierIDOther exists
            else leg1 -> underlierIDOther is absent and leg2 -> underlierIDOther is absent)

    condition CSA_VR_0129_01: <"Underlier ID (Other) Source">
        [regulatoryReference CSA Trade dataElement "129" validationRule "Transaction"
      provision "C if [Underlier ID (Other)] is populated, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Underlier ID (Other) Source"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if leg1 -> underlierIDOther exists
            then leg1 -> underlierIDOtherSource exists
            else leg1 -> underlierIDOtherSource is absent)
                and (if leg2 -> underlierIDOther exists
                    then leg2 -> underlierIDOtherSource exists
                    else leg2 -> underlierIDOtherSource is absent)

    condition DTCC_CSA_VR_0129_01: <"Underlier ID Source (Other) - Leg 1">
        [docReference DTCC Trade dataElement "129" validationRule "Transaction"
      provision "Transaction CR/EQ/FX/IR - Required if [Underlier ID (Other) - Leg 1] is populated, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Underlier ID Source (Other) - Leg 1"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if ([AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Foreign_Exchange, AnnaDsbAssetClassEnum -> Rates] any = nonReportable -> postUpiData -> Header -> AssetClass
                        or [AssetClassEnum -> Credit, AssetClassEnum -> Equity, AssetClassEnum -> ForeignExchange, AssetClassEnum -> InterestRate] any = dtccAdditionalFields -> primaryAssetClass)
                    and leg1 -> underlierIDOther exists
            then leg1 -> underlierIDOtherSource exists
            else leg1 -> underlierIDOtherSource is absent)

    condition CSA_VR_0130_01: <"Underlying Asset Trading Platform Identifier">
        [regulatoryReference CSA Trade dataElement "130" validationRule "Transaction"
      provision "Transaction EQ/CR - O"]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Underlying Asset Trading Platform Identifier"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if (nonReportable -> postUpiData -> Header -> AssetClass exists
                        and [AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Credit] any <> nonReportable -> postUpiData -> Header -> AssetClass)
                    or [AssetClassEnum -> Equity, AssetClassEnum -> Credit] any <> dtccAdditionalFields -> primaryAssetClass
            then leg1 -> underlyingAssetTradingPlatformIdentifier is absent
                    and leg2 -> underlyingAssetTradingPlatformIdentifier is absent)

    condition CSA_VR_0133_01: <"Final Contractual Settlement Date">
        [regulatoryReference CSA Trade dataElement "133" validationRule "Transaction"
      provision "C if UPI.[ReturnorPayoutTrigger] is not Contract for Difference (CFD), else {blank}. When populated, - the value shall be equal to or later than the value in [Expiration date]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Final Contractual Settlement Date"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if (nonReportable -> postUpiData -> Derived -> ReturnorPayoutTrigger exists
                        and nonReportable -> postUpiData -> Derived -> ReturnorPayoutTrigger <> Contract_for_Difference_CFD_)
                    or nonReportable -> returnorPayoutTrigger <> "Contract_for_Difference_CFD_"
            then finalContractualSettlementDate exists and finalContractualSettlementDate >= expirationDate
            else finalContractualSettlementDate is absent)

    condition CSA_VR_0135_01: <"Settlement Currency">
        [regulatoryReference CSA Trade dataElement "135" validationRule "Transaction"
      provision "Transaction - C if UPI.[Delivery type] = Cash, else {blank}"]
        if nonReportable -> postUpiData -> Attributes -> DeliveryType = CASH
                or dtccAdditionalFields -> settlementType = "Cash"
        then (leg1 -> settlementCurrency exists or leg2 -> settlementCurrency exists)
        else (leg1 -> settlementCurrency is absent and leg2 -> settlementCurrency is absent)

    condition CSA_VR_0136_01: <"Other Payment Amount">
        [regulatoryReference CSA Trade dataElement "136" validationRule "Transaction"
      provision "C if [Other payment type] is populated, else {blank}."]
        if otherPayment -> paymentType exists
        then otherPayment -> amount exists
        else otherPayment -> amount is absent

    condition DTCC_CSA_VR_0136_01: <"Other Payment Amount">
        [docReference DTCC Trade dataElement "136" validationRule "Transaction"
      provision "If populated with multiple values, the number of values must equal the number of values populated in [CDE - Other payment type]."]
        if otherPayment -> amount exists and otherPayment -> amount count > 1
        then otherPayment -> amount count = otherPayment -> paymentType count

    condition CSA_VR_0137_01: <"Other Payment Currency">
        [regulatoryReference CSA Trade dataElement "137" validationRule "Transaction"
      provision "C if [Other payment amount] is populated, else {blank}."]
        if otherPayment -> amount exists
        then otherPayment -> currency exists
        else otherPayment -> currency is absent

    condition DTCC_CSA_VR_0137_01: <"Other Payment Currency">
        [docReference DTCC Trade dataElement "137" validationRule "Transaction"
      provision "If populated with multiple values, the number of values must equal the number of values populated in [CDE - Other payment amount]."]
        if otherPayment -> currency exists and otherPayment -> currency count > 1
        then otherPayment -> amount count = otherPayment -> currency count

    condition CSA_VR_0138_01: <"Other Payment Date">
        [regulatoryReference CSA Trade dataElement "138" validationRule "Transaction"
      provision "C if [Other payment amount] is populated, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Other Payment Date"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if otherPayment -> amount exists
            then otherPayment -> date exists
            else otherPayment -> date is absent)

    condition DTCC_CSA_VR_0138_01: <"Other Payment Date">
        [docReference DTCC Trade dataElement "138" validationRule "Transaction"
      provision "If populated with multiple values, the number of values must equal the number of values populated in [CDE - Other payment amount]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Other Payment Date"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if otherPayment -> date exists and otherPayment -> date count > 1
            then otherPayment -> amount count = otherPayment -> date count)

    condition CSA_VR_0139_01: <"Other Payment Payer">
        [regulatoryReference CSA Trade dataElement "139" validationRule "Transaction"
      provision "C if [Other payment amount] is populated, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Other Payment Payer"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if otherPayment -> amount exists
            then otherPayment -> payer exists
            else otherPayment -> payer is absent)

    condition DTCC_CSA_VR_0139_01: <"Other Payment Payer">
        [docReference DTCC Trade dataElement "139" validationRule "Transaction"
      provision "If populated with multiple values, the number of values must equal the number of values populated in [CDE - Other payment amount] AND [Other payment payer ID type]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Other Payment Payer"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if otherPayment -> payer exists and otherPayment -> payer count > 1
            then (otherPayment -> payer count = otherPayment -> amount count
                    and otherPayment -> payer count
                        = dtccAdditionalFields -> otherPaymentPayerIDType count))

    condition CSA_VR_0140_01: <"Other Payment Receiver">
        [regulatoryReference CSA Trade dataElement "140" validationRule "Transaction"
      provision "C if [Other payment amount] is populated, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Other Payment Receiver"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if otherPayment -> amount exists
            then otherPayment -> receiver exists
            else otherPayment -> receiver is absent)

    condition DTCC_CSA_VR_0140_01: <"Other Payment Receiver">
        [docReference DTCC Trade dataElement "140" validationRule "Transaction"
      provision "If populated with multiple values, the number of values must equal the number of values populated in [CDE - Other payment amount] AND [Other payment receiver ID type]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Other Payment Receiver"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if otherPayment -> receiver exists and otherPayment -> receiver count > 1
            then (otherPayment -> receiver count = otherPayment -> amount count
                    and otherPayment -> receiver count
                        = dtccAdditionalFields -> otherPaymentReceiverIDType count))

    condition CSA_VR_0141_01: <"Other Payment Type">
        [regulatoryReference CSA Trade dataElement "141" validationRule "Transaction"
      provision "Transaction CR - C, at least one is required: ([Fixed rate] or [Spread] or [Other payment type] = UFRO. Allowable values UWIN and PEXH are optional and independent of the above condition.
                Transaction  IR/FX/EQ/CO - O."]
        if nonReportable -> postUpiData -> Header -> AssetClass = Credit
                or dtccAdditionalFields -> primaryAssetClass = Credit
        then (if leg1 -> fixedRate is absent
                    and leg2 -> fixedRate is absent
                    and leg1 -> spread is absent
                    and leg2 -> spread is absent
            then otherPayment -> paymentType any = UFRO)

    condition CSA_VR_0142_01: <"Payment Frequency Period">
        [regulatoryReference CSA Trade dataElement "142" validationRule "Transaction"
      provision "Transaction CR/IR/EQ/CO - O when populated with EXPI, [Payment frequency period multiplier] must be 1."]
        if [AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass
        then ((if leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriod = EXPI
            then leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier = 1
            else if leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriod = EXPI
            then leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier = 1)
                and (if leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriod = EXPI
                    then leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier = 1
                    else if leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriod = EXPI
                    then leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier = 1))

    condition DTCC_CSA_VR_0142_01: <"Fixed rate payment frequency period-Leg 1">
        [docReference DTCC Trade dataElement "142" validationRule "Transaction"
      provision "When populated with EXPI', [Fixed rate payment frequency period multiplier-Leg 1] must be 1."]
        if [AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass
        then (if leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriod = EXPI
            then leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier = 1)

    condition DTCC_CSA_VR_0142_02: <"Fixed rate payment frequency period-Leg 2">
        [docReference DTCC Trade dataElement "142" validationRule "Transaction"
      provision "When populated with EXPI', [Fixed rate payment frequency period multiplier-Leg 2] must be 1."]
        if [AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass
        then (if leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriod = EXPI
            then leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier = 1)

    condition DTCC_CSA_VR_0142_03: <"Floating rate payment frequency period-Leg 1">
        [docReference DTCC Trade dataElement "142" validationRule "Transaction"
      provision "When populated with EXPI', [Floating rate payment frequency period multiplier-Leg 1] must be 1."]
        if [AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass
        then (if leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriod = EXPI
            then leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier = 1)

    condition DTCC_CSA_VR_0142_04: <"Floating rate payment frequency period-Leg 2">
        [docReference DTCC Trade dataElement "142" validationRule "Transaction"
      provision "When populated with EXPI', [Floating rate payment frequency period multiplier-Leg 2] must be 1."]
        if [AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass
        then (if leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriod = EXPI
            then leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier = 1)

    condition CSA_VR_0143_01: <"Payment Frequency Period Multiplier">
        [regulatoryReference CSA Trade dataElement "143" validationRule "Transaction"
      provision "Transaction CR/IR/EQ/CO - C if [Payment frequency period] <> ADHO, else {blank}."]
        if [AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass
        then ((if leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriod exists
                    and leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriod <> ADHO
            then leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier exists
            else if leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriod <> ADHO
                    and leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriod exists
            then leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier exists
            else (leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier is absent
                and leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier is absent))
                and (if leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriod exists
                            and leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriod <> ADHO
                    then leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier exists
                    else if leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriod <> ADHO
                            and leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier exists
                    then leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier exists
                    else (leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier is absent
                        and leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier is absent)))

    condition DTCC_CSA_VR_0143_01: <"Fixed rate payment frequency period multiplier-Leg 1">
        [docReference DTCC Trade dataElement "143" validationRule "Transaction"
      provision "Required if [Fixed rate payment frequency period-Leg 1] <> ADHO and [Fixed rate payment frequency period-Leg 1] is not blank, else {blank}."]
        if [AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass
        then (if leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriod exists
                    and leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriod <> ADHO
            then leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier exists
            else leg1 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier is absent)

    condition DTCC_CSA_VR_0143_02: <"Fixed rate payment frequency period multiplier-Leg 2">
        [docReference DTCC Trade dataElement "143" validationRule "Transaction"
      provision "Required if [Fixed rate payment frequency period-Leg 2] <> ADHO and [Fixed rate payment frequency period-Leg 2] is not blank, else {blank}."]
        if [AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass
        then (if leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriod exists
                    and leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriod <> ADHO
            then leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier exists
            else leg2 -> periodicPayment -> fixedRatePaymentFrequencyPeriodMultiplier is absent)

    condition DTCC_CSA_VR_0143_03: <"Floating rate payment frequency period multiplier-Leg 1">
        [docReference DTCC Trade dataElement "143" validationRule "Transaction"
      provision "Required if [Floating rate payment frequency period-Leg 1] <> ADHO and [Floating rate payment frequency period-Leg 1] is not blank, else {blank}."]
        if [AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass
        then (if leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriod exists
                    and leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriod <> ADHO
            then leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier exists
            else leg1 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier is absent)

    condition DTCC_CSA_VR_0143_04: <"Floating rate payment frequency period multiplier-Leg 2">
        [docReference DTCC Trade dataElement "143" validationRule "Transaction"
      provision "Required if [Floating rate payment frequency period-Leg 2] <> ADHO and [Floating rate payment frequency period-Leg 2] is not blank, else {blank}."]
        if [AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Commodities] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> Commodity] any = dtccAdditionalFields -> primaryAssetClass
        then (if leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriod exists
                    and leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriod <> ADHO
            then leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier exists
            else leg2 -> periodicPayment -> floatingRatePaymentFrequencyPeriodMultiplier is absent)

    condition CSA_VR_0144_01: <"Option Premium Amount">
        [regulatoryReference CSA Trade dataElement "144" validationRule "Transaction"
      provision "C if UPI.[Instrument type] = Option, else {blank}."]
        if nonReportable -> postUpiData -> Header -> InstrumentType = Option
                or nonReportable -> instrumentType = Option
        then optionPremiumAmount exists
        else optionPremiumAmount is absent

    condition DTCC_CSA_VR_0144_01: <"Option Premium Amount">
        [docReference CSA Trade dataElement "144" validationRule "Transaction"
      provision "Transaction CR/EQ/FX/IR - C if UPI.[Instrument type] = Option, else {blank}."]
        if ([AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Foreign_Exchange] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> ForeignExchange] any = dtccAdditionalFields -> primaryAssetClass)
        then (if nonReportable -> postUpiData -> Header -> InstrumentType = Option
                    or nonReportable -> instrumentType = Option
            then optionPremiumAmount exists
            else optionPremiumAmount is absent)

    condition CSA_VR_0145_01: <"Option Premium Currency">
        [regulatoryReference CSA Trade dataElement "145" validationRule "Transaction"
      provision "C if [Option premium amount] > 0, else {blank}."]
        if optionPremiumAmount > 0
        then optionPremiumCurrency exists
        else optionPremiumCurrency is absent

    condition CSA_VR_0146_01: <"Option Premium Payment Date">
        [regulatoryReference CSA Trade dataElement "146" validationRule "Transaction"
      provision "C if [Option premium amount] > 0, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Option Premium Payment Date"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if optionPremiumAmount > 0
            then optionPremiumPaymentDate exists
            else optionPremiumPaymentDate is absent)

    condition CSA_VR_0147_01: <"First Exercise Date">
        [regulatoryReference CSA Trade dataElement "147" validationRule "Transaction"
      provision "C if UPI.[Instrument type] = Option, else {blank}."]
        if nonReportable -> postUpiData -> Header -> InstrumentType = Option
                or nonReportable -> instrumentType = Option
        then firstExerciseDate exists
        else firstExerciseDate is absent

    condition DTCC_CSA_VR_0147_01: <"First Exercise Date">
        [docReference CSA Trade dataElement "147" validationRule "Transaction"
      provision "Transaction CR/EQ/FX/IR - C if UPI.[Instrument type] = Option, else {blank}."]
        if ([AnnaDsbAssetClassEnum -> Credit, AnnaDsbAssetClassEnum -> Rates, AnnaDsbAssetClassEnum -> Equity, AnnaDsbAssetClassEnum -> Foreign_Exchange] any = nonReportable -> postUpiData -> Header -> AssetClass
                or [AssetClassEnum -> Credit, AssetClassEnum -> InterestRate, AssetClassEnum -> Equity, AssetClassEnum -> ForeignExchange] any = dtccAdditionalFields -> primaryAssetClass)
        then (if nonReportable -> postUpiData -> Header -> InstrumentType = Option
                    or nonReportable -> instrumentType = Option
            then firstExerciseDate exists
            else firstExerciseDate is absent)

    condition CSA_VR_0148_01: <"Fixing Date">
        [regulatoryReference CSA Trade dataElement "148" validationRule "Transaction"
      provision "Transaction CR/IR/EQ/CO - O
                Transaction FX - C if (UPI.[Instrument type] = Forward or Option) and UPI.[Delivery type] = Cash, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Fixing Date"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if (nonReportable -> postUpiData -> Header -> AssetClass = Foreign_Exchange
                    or dtccAdditionalFields -> primaryAssetClass = ForeignExchange)
            then (if ([AnnaDsbInstrumentTypeEnum -> Forward, AnnaDsbInstrumentTypeEnum -> Option] any = nonReportable -> postUpiData -> Header -> InstrumentType
                            or [AnnaDsbInstrumentTypeEnum -> Forward, AnnaDsbInstrumentTypeEnum -> Option] any = nonReportable -> instrumentType)
                        and (nonReportable -> postUpiData -> Attributes -> DeliveryType = CASH
                            or dtccAdditionalFields -> settlementType = "Cash")
                then (leg1 -> fixingDate exists or leg2 -> fixingDate exists)
                else (leg1 -> fixingDate is absent and leg2 -> fixingDate is absent)))

    condition DTCC_CSA_VR_DTCC_01: <"Clearing Venue - ID Type">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Required if [Clearing Venue - ID] is populated."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Clearing Venue - ID Type"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if centralCounterparty exists
            then dtccAdditionalFields -> clearingVenueIDType exists)

    condition DTCC_CSA_VR_DTCC_02: <"Trade Party 1 - Clearing Broker ID Type">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Required if [Trade Party 1 - Clearing Broker ID] is populated.
                NPID is only accepted when [Trade Party 2 - ID Type] = NPID."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250507" field "Trade Party 1 - Clearing Broker ID Type"
      provision "Firms indicated they would only report LEI format. No expectation to have PLID format in Canadian reporting. No expectaion to have NPID format in Canadian reporting unless there is an update from ISDA CSA Data and Reporting Canadian WG."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Trade Party 1 - Clearing Broker ID Type"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if clearingMember exists
            then dtccAdditionalFields -> tradeParty1ClearingBrokerIDType exists)

    condition DTCC_CSA_VR_DTCC_03: <"Trade Party 1 - ID Type">
        [docReference DTCC Trade validationRule "Transaction"
      provision "NPID is only accepted when [CDE - Platform Identifier] is not 'XXXX', 'XOFF', or 'BILT' AND [Clearing Status] = I."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250507" field "Trade Party 1 - ID Type"
      provision "Firms indicated they would only report LEI format. No expectation to have NPID or any other format in Canadian reporting unless there is an update from ISDA CSA Data and Reporting Canadian WG."]
        True

    condition DTCC_CSA_VR_DTCC_04: <"USI ID">
        [docReference DTCC Trade validationRule "Transaction"
      provision "[USI ID] will be rejected if Action Type is 'NEWT'.
      [USI ID] is Required when [USI ID Prefix] is populated.
      [USI ID] is Required when [UTI ID] is not populated."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250327" field "USI ID"
      provision "The group agreed on not considering USI ID Prefix due to it comes from an old format and it had been agreed to only consider one field, that is USI ID, considering the concatenation of both fields. Thus, USI ID is the only field that needs to be populated."]
        (if actionType = NEWT
        then dtccAdditionalFields -> usiID is absent)
            and (if uniqueTransactionIdentifier is absent
                then dtccAdditionalFields -> usiID exists)

    condition DTCC_CSA_VR_DTCC_05: <"USI ID Prefix">
        [docReference DTCC DTCC_Harmonized validationRule "Transaction"
      provision "[USI ID Prefix] will be rejected if Action Type is 'NEWT'.
      [USI ID Prefix] is Required when [USI ID] is populated."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250327" field "USI ID Prefix"
      provision "The group agreed on not considering USI ID Prefix due to it comes from an old format and it had been agreed to only consider one field, that is USI ID, considering the concatenation of both fields. Thus, USI ID is the only field that needs to be populated."]
        True

    condition DTCC_CSA_VR_DTCC_06: <"New SDR Identifier">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Required if [NoA - Action Type] = PRTO, else {blank}."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "New SDR Identifier"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if actionType = PRTO
            then dtccAdditionalFields -> newSDRIdentifier exists
            else dtccAdditionalFields -> newSDRIdentifier is absent)

    condition DTCC_CSA_VR_DTCC_07: <"Submitted For Party">
        [docReference DTCC Trade validationRule "Transaction"
      provision "If the value is not Party1 or BOTH, then the value must = the value in [Trade Party 1 - ID]."]
        if ["Party1", "BOTH"] all <> dtccAdditionalFields -> submittedForParty
        then dtccAdditionalFields -> submittedForParty = counterparty1

    condition DTCC_CSA_VR_DTCC_08: <"Trade Party 1 - Reporting Destination">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Must contain at least one of: CFTC, SEC, CA.MB.MSC, CA.ON.OSC, CA.QC.AMF,CA.AB.ASC,CA.BC.BCSC,CA.NB.FCSC,CA.NL.DSS,CA.NS.NSSC,CA.NT.NTSO,CA.NU.NSO,CA.PEI.OSS,CA.SK.FCAA,CA.YT.OSS"]
        if dtccAdditionalFields -> tradeParty1ReportingDestination exists
        then [SupervisoryBodyEnum -> CFTC, SupervisoryBodyEnum -> SEC, SupervisoryBodyEnum -> CA_AB_ASC, SupervisoryBodyEnum -> CA_BC_BCSC, SupervisoryBodyEnum -> CA_MB_MSC, SupervisoryBodyEnum -> CA_NB_FCSC, SupervisoryBodyEnum -> CA_NL_DSS, SupervisoryBodyEnum -> CA_NS_NSSC, SupervisoryBodyEnum -> CA_NT_NTSO, SupervisoryBodyEnum -> CA_NU_NSO, SupervisoryBodyEnum -> CA_ON_OSC, SupervisoryBodyEnum -> CA_PEI_OSS, SupervisoryBodyEnum -> CA_QC_AMF, SupervisoryBodyEnum -> CA_SK_FCAA, SupervisoryBodyEnum -> CA_YT_OSS] contains dtccAdditionalFields -> tradeParty1ReportingDestination

    condition DTCC_CSA_VR_DTCC_09: <"Trade Party 2 - Reporting Destination">
        [docReference DTCC Trade validationRule "Transaction"
      provision "If the submitted for Party = Party1, this field will not influence GTR North America processing and the value will be ignored. If the submitted for Party = Both, this field cannot be populated with CFTC, SEC, or a Canadian Province."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250507" field "Trade Party 2 - Reporting Destination"
      provision "Agreed to default the output of Submitted For Party to the LEI of the reporting party. Thus, this condition cannot be modelled due to a dependency."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Trade Party 2 - Reporting Destination"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (True)

    condition DTCC_CSA_VR_DTCC_10: <"Comment 1">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Including < in the [Comment 1] value will cause a rejection in the Simulator."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250507" field "Comment 1"
        provision "Empty because CSV submission is still not supported by current DRR model. This rule will be revisited once Harmoinzed CSV projection is included."]
        True

    condition DTCC_CSA_VR_DTCC_11: <"Trade Party 1 - Execution Agent ID">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Required if [Trade Party 1 - Execution Agent ID Type] is populated."]
        if dtccAdditionalFields -> tradeParty1ExecutionAgentIDType exists
        then dtccAdditionalFields -> tradeParty1ExecutionAgentID exists

    condition DTCC_CSA_VR_DTCC_12: <"Trade Party 2 - Execution Agent ID">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Required if [Trade Party 2 - Execution Agent ID Type] is populated."]
        if dtccAdditionalFields -> tradeParty2ExecutionAgentIDType exists
        then dtccAdditionalFields -> tradeParty2ExecutionAgentID exists

    condition DTCC_CSA_VR_DTCC_13: <"Trade Party 1 - Execution Agent ID Type">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Required if [Trade Party 1 - Execution Agent ID] is populated."]
        if dtccAdditionalFields -> tradeParty1ExecutionAgentID exists
        then dtccAdditionalFields -> tradeParty1ExecutionAgentIDType exists

    condition DTCC_CSA_VR_DTCC_14: <"Trade Party 2 - Execution Agent ID Type">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Required if [Trade Party 2 - Execution Agent ID] is populated."]
        if dtccAdditionalFields -> tradeParty2ExecutionAgentID exists
        then dtccAdditionalFields -> tradeParty2ExecutionAgentIDType exists

    condition DTCC_CSA_VR_DTCC_15: <"Execution Venue - ID">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Required when [Execution Venue - ID Type] is populated."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Execution Venue - ID"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if dtccAdditionalFields -> executionVenueIDType exists
            then dtccAdditionalFields -> executionVenueID exists)

    condition DTCC_CSA_VR_DTCC_16: <"Execution Venue - ID Type">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Required when [Execution Venue - ID] is populated."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Execution Venue - ID Type"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if dtccAdditionalFields -> executionVenueID exists
            then dtccAdditionalFields -> executionVenueIDType exists)

    condition DTCC_CSA_VR_DTCC_17: <"Trade Party 1 - Broker ID Type">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Required if [Trade Party 1 - Broker ID] is populated."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Trade Party 1 - Broker ID Type"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if brokerID exists
            then dtccAdditionalFields -> tradeParty1BrokerIDType exists)

    condition DTCC_CSA_VR_DTCC_18: <"Responsible Data Submitter - ID Type">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Required if [Responsible Data Submitter ID] is populated."]
        True

    condition DTCC_CSA_VR_DTCC_19: <"Responsible Data Submitter - ID">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Required if [Responsible Data Submitter ID Type] is populated. We will NACK if [Responsible Data Submitter ID] and [Corporate Action - New Trade Party 1 LEI] are both populated."]
        True

    condition DTCC_CSA_VR_DTCC_20: <"Corporate Action - New Trade Party 1 LEI">
        [docReference DTCC DTCC_Harmonized validationRule "Transaction"
      provision "A value in this field will only be accepted when [NoA - Action Type] = 'MODI' and [Event Type] = 'TRAD'. All other [NoA - Action Type]/[Event Type] combinations will NACK.
      The submitter must have permission in Manage Services to submit for [Trade Party 1 - ID] and [Corporate Action - New Trade Party 1 LEI].
      We will NACK if [Responsible Data Submitter ID] and [Corporate Action - New Trade Party 1 LEI] are both populated.
      The value in this field will replace [Trade Party 1 - ID] on the trade after the submission is processed.
      It's expected that all data submitted outside of [NoA - Action Type],  [Event Type], and [Corporate Action - New Trade Party 1 LEI] will exactly mirror the current live position, as this feature is meant only for change in Trade Party 1/Reporting counterparty. We will not, however, validate this, and the correctness is the responsibility of the submitter."]
        True

    condition DTCC_CSA_VR_DTCC_21: <"Other payment payer ID type">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Required if [CDE - Other payment payer] is populated. If populated with one or more values, the number of values must equal the number of values populated in [CDE - Other payment payer]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Other payment payer ID type"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if dtccAdditionalFields -> otherPaymentPayerIDType exists
            then dtccAdditionalFields -> otherPaymentReceiverIDType exists
                    and dtccAdditionalFields -> otherPaymentReceiverIDType count
                        = dtccAdditionalFields -> otherPaymentPayerIDType count)

    condition DTCC_CSA_VR_DTCC_22: <"Other payment receiver ID type">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Required if [CDE - Other payment receiver] is populated. If populated with one or more values, the number of values must equal the number of values populated in [CDE - Other payment receiver]."]
        [regulatoryReference ISDA EUUKNAPeerReviewGroup date "20250508" field "Other payment receiver ID type"
      provision "Validation rule eliminated from PPD report since this fields is not reportable for PPD."]
        if dtccAdditionalFields -> messageTypeTransaction exists
        then (if dtccAdditionalFields -> otherPaymentReceiverIDType exists
            then dtccAdditionalFields -> otherPaymentPayerIDType exists
                    and dtccAdditionalFields -> otherPaymentPayerIDType count
                        = dtccAdditionalFields -> otherPaymentReceiverIDType count)

    condition DTCC_CSA_VR_DTCC_23: <"Product ID">
        [docReference DTCC Trade validationRule "Transaction"
      provision "Required if [Primary Asset Class] is Commodity, else {blank}."]
        if dtccAdditionalFields -> primaryAssetClass = Commodity
        then dtccAdditionalFields -> productID exists
        else dtccAdditionalFields -> productID is absent

type CSALeg extends common.CommonLeg:
    underlierIDOther Max350AlphaNumericTextAllSplChars (0..1)
    underlierIDOtherSource Max350AlphaNumericTextWithSplChars (0..1)
    underlyingAssetTradingPlatformIdentifier Max4Text (0..1)
    underlyingAssetPriceSource Max50AlphaNumericText (0..1)
    cryptoAssetUnderlyingIndicator boolean (0..1)
    commodityUnderlyerID string (0..1)
    commodityInstrumentID string (0..1)
    floatingRateIndex string (0..1)

type CSANonReportable extends common.NonReportable:
    returnorPayoutTrigger string (0..1)
        [nonReportable]
        [ruleReference ReturnorPayoutTrigger]
//Sprint 2025-11: CSA basket constituents type should extend from common.basket.BasketConstituentsReport once DSL gets upgraded to support deserializing multi-cardinality sub-types 
//type CSABasketConstituentsReport extends common.basket.BasketConstituentsReport:
//    numberOfUnits Max18D13Number (0..1)
//    unitOfMeasure Max4Text (0..1)
